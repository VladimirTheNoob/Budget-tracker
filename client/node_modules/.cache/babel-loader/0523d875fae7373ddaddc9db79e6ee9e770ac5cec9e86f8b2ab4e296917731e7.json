{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { ROLES } from '../config/roles';\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    user: null,\n    isAuthenticated: false,\n    userRole: null\n  },\n  reducers: {\n    loginSuccess: (state, action) => {\n      var _user$emails, _user$emails$;\n      const {\n        user,\n        authenticated,\n        userRole\n      } = action.payload;\n\n      // Ensure email is extracted correctly\n      const userEmail = (user === null || user === void 0 ? void 0 : user.email) || (user === null || user === void 0 ? void 0 : (_user$emails = user.emails) === null || _user$emails === void 0 ? void 0 : (_user$emails$ = _user$emails[0]) === null || _user$emails$ === void 0 ? void 0 : _user$emails$.value) || 'Unknown Email';\n      state.user = {\n        ...user,\n        email: userEmail\n      };\n      state.isAuthenticated = authenticated;\n\n      // Explicitly set role, defaulting to 'employee' if not provided\n      state.userRole = userRole || (userEmail.toLowerCase() === 'belyakovvladimirs@gmail.com' ? 'admin' : 'employee');\n    },\n    logout: state => {\n      state.user = null;\n      state.isAuthenticated = false;\n      state.userRole = null;\n    }\n  }\n});\nexport const {\n  loginSuccess,\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","ROLES","authSlice","name","initialState","user","isAuthenticated","userRole","reducers","loginSuccess","state","action","_user$emails","_user$emails$","authenticated","payload","userEmail","email","emails","value","toLowerCase","logout","actions","reducer"],"sources":["C:/Users/belya/Cursor projects/Budget tracker/client/src/store/authSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { ROLES } from '../config/roles';\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState: {\r\n    user: null,\r\n    isAuthenticated: false,\r\n    userRole: null\r\n  },\r\n  reducers: {\r\n    loginSuccess: (state, action) => {\r\n      const { user, authenticated, userRole } = action.payload;\r\n      \r\n      // Ensure email is extracted correctly\r\n      const userEmail = user?.email || \r\n        user?.emails?.[0]?.value || \r\n        'Unknown Email';\r\n\r\n      state.user = {\r\n        ...user,\r\n        email: userEmail\r\n      };\r\n      \r\n      state.isAuthenticated = authenticated;\r\n      \r\n      // Explicitly set role, defaulting to 'employee' if not provided\r\n      state.userRole = userRole || \r\n        (userEmail.toLowerCase() === 'belyakovvladimirs@gmail.com' \r\n          ? 'admin' \r\n          : 'employee');\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n      state.isAuthenticated = false;\r\n      state.userRole = null;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { loginSuccess, logout } = authSlice.actions;\r\nexport default authSlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,QAAQ,iBAAiB;AAEvC,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC5BG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,IAAI,EAAE,IAAI;IACVC,eAAe,EAAE,KAAK;IACtBC,QAAQ,EAAE;EACZ,CAAC;EACDC,QAAQ,EAAE;IACRC,YAAY,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAAA,IAAAC,YAAA,EAAAC,aAAA;MAC/B,MAAM;QAAER,IAAI;QAAES,aAAa;QAAEP;MAAS,CAAC,GAAGI,MAAM,CAACI,OAAO;;MAExD;MACA,MAAMC,SAAS,GAAG,CAAAX,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEY,KAAK,MAC3BZ,IAAI,aAAJA,IAAI,wBAAAO,YAAA,GAAJP,IAAI,CAAEa,MAAM,cAAAN,YAAA,wBAAAC,aAAA,GAAZD,YAAA,CAAe,CAAC,CAAC,cAAAC,aAAA,uBAAjBA,aAAA,CAAmBM,KAAK,KACxB,eAAe;MAEjBT,KAAK,CAACL,IAAI,GAAG;QACX,GAAGA,IAAI;QACPY,KAAK,EAAED;MACT,CAAC;MAEDN,KAAK,CAACJ,eAAe,GAAGQ,aAAa;;MAErC;MACAJ,KAAK,CAACH,QAAQ,GAAGA,QAAQ,KACtBS,SAAS,CAACI,WAAW,CAAC,CAAC,KAAK,6BAA6B,GACtD,OAAO,GACP,UAAU,CAAC;IACnB,CAAC;IACDC,MAAM,EAAGX,KAAK,IAAK;MACjBA,KAAK,CAACL,IAAI,GAAG,IAAI;MACjBK,KAAK,CAACJ,eAAe,GAAG,KAAK;MAC7BI,KAAK,CAACH,QAAQ,GAAG,IAAI;IACvB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEE,YAAY;EAAEY;AAAO,CAAC,GAAGnB,SAAS,CAACoB,OAAO;AACzD,eAAepB,SAAS,CAACqB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
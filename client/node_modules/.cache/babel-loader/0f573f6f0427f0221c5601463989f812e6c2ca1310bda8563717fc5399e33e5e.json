{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\belya\\\\Cursor projects\\\\Budget tracker\\\\client\\\\src\\\\components\\\\AdminRoleManager.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { ROLES } from '../config/roles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminRoleManager = ({\n  currentUserRole\n}) => {\n  const [userRoles, setUserRoles] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [newRole, setNewRole] = useState({\n    employeeId: '',\n    email: '',\n    role: ROLES.EMPLOYEE\n  });\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Check current user's role\n    const checkUserRole = async () => {\n      try {\n        var _response$data$user;\n        const response = await axios.get('http://localhost:5000/auth/status', {\n          withCredentials: true\n        });\n        console.log('Admin Role Manager - Auth Status:', {\n          authenticated: response.data.authenticated,\n          role: response.data.role,\n          user: response.data.user,\n          passedRole: currentUserRole\n        });\n\n        // Determine the role to use\n        const resolvedRole = currentUserRole || response.data.role || (((_response$data$user = response.data.user) === null || _response$data$user === void 0 ? void 0 : _response$data$user.email) === 'belyakovvladimirs@gmail.com' ? ROLES.ADMIN : ROLES.EMPLOYEE);\n        console.log('Resolved Role:', resolvedRole);\n\n        // Only fetch roles if user is an admin\n        if (resolvedRole === ROLES.ADMIN) {\n          console.log('Fetching user roles for admin');\n          fetchUserRoles();\n          fetchEmployees();\n        } else {\n          console.log('Not an admin, cannot fetch roles');\n        }\n      } catch (error) {\n        console.error('Error checking user role:', error);\n        setError('Failed to check user role');\n      }\n    };\n    checkUserRole();\n  }, [currentUserRole]);\n  const fetchUserRoles = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/roles', {\n        withCredentials: true\n      });\n      setUserRoles(response.data);\n    } catch (error) {\n      console.error('Error fetching user roles:', error);\n      setError('Failed to fetch user roles');\n    }\n  };\n  const fetchEmployees = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/employees', {\n        withCredentials: true\n      });\n      setEmployees(response.data);\n    } catch (error) {\n      console.error('Error fetching employees:', error);\n      setError('Failed to fetch employees');\n    }\n  };\n  const handleEmployeeChange = e => {\n    const employeeId = e.target.value;\n    const selectedEmployee = employees.find(emp => emp.id === employeeId);\n    setNewRole(prev => ({\n      ...prev,\n      employeeId,\n      email: (selectedEmployee === null || selectedEmployee === void 0 ? void 0 : selectedEmployee.email) || ''\n    }));\n  };\n  const handleRoleUpdate = async e => {\n    e.preventDefault();\n    setError(null);\n    try {\n      const response = await axios.put('http://localhost:5000/api/roles', {\n        employeeId: newRole.employeeId,\n        role: newRole.role\n      }, {\n        withCredentials: true\n      });\n\n      // Update local state\n      const updatedRoles = [...userRoles];\n      const existingRoleIndex = updatedRoles.findIndex(ur => ur.email.toLowerCase() === newRole.email.toLowerCase());\n      if (existingRoleIndex !== -1) {\n        updatedRoles[existingRoleIndex].role = newRole.role;\n      } else {\n        updatedRoles.push(newRole);\n      }\n      setUserRoles(updatedRoles);\n\n      // Reset form\n      setNewRole({\n        employeeId: '',\n        email: '',\n        role: ROLES.EMPLOYEE\n      });\n      alert('Role updated successfully');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error updating role:', error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to update role');\n    }\n  };\n\n  // Prevent non-admin access\n  if (![ROLES.ADMIN].includes(currentUserRole)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 text-center text-red-600\",\n      children: \"Access Denied: Administrator privileges required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4 bg-[#f5f5f5]\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-2xl mx-auto bg-white rounded p-6 shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-6 text-center\",\n        children: \"Role Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\",\n        role: \"alert\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleRoleUpdate,\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"employee\",\n            className: \"block text-gray-700 text-sm font-medium mb-2\",\n            children: \"Select Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"employee\",\n            value: newRole.employeeId,\n            onChange: handleEmployeeChange,\n            className: \"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select an employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), employees.map(employee => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: employee.id,\n              children: employee.name\n            }, employee.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"block text-gray-700 text-sm font-medium mb-2\",\n            children: \"User Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: newRole.email,\n            readOnly: true,\n            className: \"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400 bg-gray-100\",\n            placeholder: \"Employee email will appear here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"role\",\n            className: \"block text-gray-700 text-sm font-medium mb-2\",\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"role\",\n            value: newRole.role,\n            onChange: e => setNewRole(prev => ({\n              ...prev,\n              role: e.target.value\n            })),\n            className: \"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\",\n            required: true,\n            children: Object.values(ROLES).map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: role,\n              children: role.charAt(0).toUpperCase() + role.slice(1)\n            }, role, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"w-48 bg-black hover:bg-gray-800 text-white font-medium py-2 px-6 rounded\",\n            children: \"Update Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Current User Roles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overflow-x-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"min-w-full bg-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"bg-gray-50\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                  children: \"Role\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              className: \"bg-white divide-y divide-gray-200\",\n              children: userRoles.map((userRole, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap\",\n                  children: userRole.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${userRole.role === ROLES.ADMIN ? 'bg-red-100 text-red-800' : userRole.role === ROLES.MANAGER ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'}`,\n                    children: userRole.role.charAt(0).toUpperCase() + userRole.role.slice(1)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 21\n                }, this)]\n              }, `${userRole.email}-${index}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\nexport default AdminRoleManager;","map":{"version":3,"names":["React","useState","useEffect","axios","Link","ROLES","jsxDEV","_jsxDEV","AdminRoleManager","currentUserRole","userRoles","setUserRoles","employees","setEmployees","newRole","setNewRole","employeeId","email","role","EMPLOYEE","error","setError","checkUserRole","_response$data$user","response","get","withCredentials","console","log","authenticated","data","user","passedRole","resolvedRole","ADMIN","fetchUserRoles","fetchEmployees","handleEmployeeChange","e","target","value","selectedEmployee","find","emp","id","prev","handleRoleUpdate","preventDefault","put","updatedRoles","existingRoleIndex","findIndex","ur","toLowerCase","push","alert","_error$response","_error$response$data","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","required","map","employee","name","type","readOnly","placeholder","Object","values","charAt","toUpperCase","slice","userRole","index","MANAGER"],"sources":["C:/Users/belya/Cursor projects/Budget tracker/client/src/components/AdminRoleManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { ROLES } from '../config/roles';\r\n\r\nconst AdminRoleManager = ({ currentUserRole }) => {\r\n  const [userRoles, setUserRoles] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [newRole, setNewRole] = useState({\r\n    employeeId: '',\r\n    email: '',\r\n    role: ROLES.EMPLOYEE\r\n  });\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Check current user's role\r\n    const checkUserRole = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/auth/status', { \r\n          withCredentials: true \r\n        });\r\n        \r\n        console.log('Admin Role Manager - Auth Status:', {\r\n          authenticated: response.data.authenticated,\r\n          role: response.data.role,\r\n          user: response.data.user,\r\n          passedRole: currentUserRole\r\n        });\r\n        \r\n        // Determine the role to use\r\n        const resolvedRole = currentUserRole || \r\n          response.data.role || \r\n          (response.data.user?.email === 'belyakovvladimirs@gmail.com' ? ROLES.ADMIN : ROLES.EMPLOYEE);\r\n        \r\n        console.log('Resolved Role:', resolvedRole);\r\n        \r\n        // Only fetch roles if user is an admin\r\n        if (resolvedRole === ROLES.ADMIN) {\r\n          console.log('Fetching user roles for admin');\r\n          fetchUserRoles();\r\n          fetchEmployees();\r\n        } else {\r\n          console.log('Not an admin, cannot fetch roles');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error checking user role:', error);\r\n        setError('Failed to check user role');\r\n      }\r\n    };\r\n\r\n    checkUserRole();\r\n  }, [currentUserRole]);\r\n\r\n  const fetchUserRoles = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/roles', { \r\n        withCredentials: true \r\n      });\r\n      setUserRoles(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching user roles:', error);\r\n      setError('Failed to fetch user roles');\r\n    }\r\n  };\r\n\r\n  const fetchEmployees = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/employees', {\r\n        withCredentials: true\r\n      });\r\n      setEmployees(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching employees:', error);\r\n      setError('Failed to fetch employees');\r\n    }\r\n  };\r\n\r\n  const handleEmployeeChange = (e) => {\r\n    const employeeId = e.target.value;\r\n    const selectedEmployee = employees.find(emp => emp.id === employeeId);\r\n    setNewRole(prev => ({\r\n      ...prev,\r\n      employeeId,\r\n      email: selectedEmployee?.email || ''\r\n    }));\r\n  };\r\n\r\n  const handleRoleUpdate = async (e) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await axios.put(\r\n        'http://localhost:5000/api/roles', \r\n        {\r\n          employeeId: newRole.employeeId,\r\n          role: newRole.role\r\n        }, \r\n        { withCredentials: true }\r\n      );\r\n\r\n      // Update local state\r\n      const updatedRoles = [...userRoles];\r\n      const existingRoleIndex = updatedRoles.findIndex(\r\n        ur => ur.email.toLowerCase() === newRole.email.toLowerCase()\r\n      );\r\n\r\n      if (existingRoleIndex !== -1) {\r\n        updatedRoles[existingRoleIndex].role = newRole.role;\r\n      } else {\r\n        updatedRoles.push(newRole);\r\n      }\r\n\r\n      setUserRoles(updatedRoles);\r\n      \r\n      // Reset form\r\n      setNewRole({\r\n        employeeId: '',\r\n        email: '',\r\n        role: ROLES.EMPLOYEE\r\n      });\r\n\r\n      alert('Role updated successfully');\r\n    } catch (error) {\r\n      console.error('Error updating role:', error);\r\n      setError(error.response?.data?.error || 'Failed to update role');\r\n    }\r\n  };\r\n\r\n  // Prevent non-admin access\r\n  if (![ROLES.ADMIN].includes(currentUserRole)) {\r\n    return (\r\n      <div className=\"p-4 text-center text-red-600\">\r\n        Access Denied: Administrator privileges required\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4 bg-[#f5f5f5]\">\r\n      <div className=\"max-w-2xl mx-auto bg-white rounded p-6 shadow-md\">\r\n        <h2 className=\"text-2xl font-bold mb-6 text-center\">Role Management</h2>\r\n\r\n        {error && (\r\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        {/* Role Assignment Form */}\r\n        <form onSubmit={handleRoleUpdate} className=\"space-y-4\">\r\n          <div>\r\n            <label htmlFor=\"employee\" className=\"block text-gray-700 text-sm font-medium mb-2\">\r\n              Select Employee\r\n            </label>\r\n            <select\r\n              id=\"employee\"\r\n              value={newRole.employeeId}\r\n              onChange={handleEmployeeChange}\r\n              className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\"\r\n              required\r\n            >\r\n              <option value=\"\">Select an employee</option>\r\n              {employees.map(employee => (\r\n                <option key={employee.id} value={employee.id}>\r\n                  {employee.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"email\" className=\"block text-gray-700 text-sm font-medium mb-2\">\r\n              User Email\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              value={newRole.email}\r\n              readOnly\r\n              className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400 bg-gray-100\"\r\n              placeholder=\"Employee email will appear here\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"role\" className=\"block text-gray-700 text-sm font-medium mb-2\">\r\n              Role\r\n            </label>\r\n            <select\r\n              id=\"role\"\r\n              value={newRole.role}\r\n              onChange={(e) => setNewRole(prev => ({ ...prev, role: e.target.value }))}\r\n              className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\"\r\n              required\r\n            >\r\n              {Object.values(ROLES).map(role => (\r\n                <option key={role} value={role}>\r\n                  {role.charAt(0).toUpperCase() + role.slice(1)}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"flex justify-center\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"w-48 bg-black hover:bg-gray-800 text-white font-medium py-2 px-6 rounded\"\r\n            >\r\n              Update Role\r\n            </button>\r\n          </div>\r\n        </form>\r\n\r\n        {/* User Roles List */}\r\n        <div className=\"mt-8\">\r\n          <h3 className=\"text-xl font-semibold mb-4\">Current User Roles</h3>\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full bg-white\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Email\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Role\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {userRoles.map((userRole, index) => (\r\n                  <tr key={`${userRole.email}-${index}`}>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      {userRole.email}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\r\n                        userRole.role === ROLES.ADMIN \r\n                          ? 'bg-red-100 text-red-800' \r\n                          : userRole.role === ROLES.MANAGER \r\n                          ? 'bg-yellow-100 text-yellow-800' \r\n                          : 'bg-green-100 text-green-800'\r\n                      }`}>\r\n                        {userRole.role.charAt(0).toUpperCase() + userRole.role.slice(1)}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminRoleManager; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
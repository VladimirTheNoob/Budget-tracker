{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\belya\\\\Cursor projects\\\\Budget tracker\\\\client\\\\src\\\\components\\\\TaskInput.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskInput = () => {\n  var _employees$find;\n  // State to manage form inputs\n  const [task, setTask] = useState({\n    taskName: '',\n    employee: '',\n    date: '',\n    comments: ''\n  });\n\n  // State for bulk tasks\n  const [bulkTasks, setBulkTasks] = useState('');\n  const [parsedTasks, setParsedTasks] = useState([]);\n\n  // State for employee-department input\n  const [bulkEmployeeDepartment, setBulkEmployeeDepartment] = useState('');\n  const [parsedEmployeeDepartment, setParsedEmployeeDepartment] = useState([]);\n\n  // State for fetched tasks and employees\n  const [tasks, setTasks] = useState([]);\n  const [employees, setEmployees] = useState([]);\n\n  // Fetch tasks and employees data when the component mounts\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        console.log('Fetching tasks and employees data...');\n\n        // Fetch tasks\n        const tasksResponse = await axios.get('http://localhost:5000/api/tasks');\n        console.log('Tasks fetched:', tasksResponse.data);\n        setTasks(tasksResponse.data);\n\n        // Fetch employees\n        const employeesResponse = await axios.get('http://localhost:5000/api/employees');\n        console.log('Employees fetched:', employeesResponse.data);\n        setEmployees(employeesResponse.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n\n        // More detailed error handling\n        if (error.response) {\n          console.error('Server Error:', {\n            status: error.response.status,\n            data: error.response.data,\n            headers: error.response.headers\n          });\n        } else if (error.request) {\n          console.error('No response received:', error.request);\n        } else {\n          console.error('Error setting up request:', error.message);\n        }\n\n        // Optional: Set error state or show user-friendly error message\n        alert('Failed to fetch tasks or employees. Please try again later.');\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Handle bulk tasks input\n  const handleBulkTasksChange = e => {\n    const value = e.target.value;\n    setBulkTasks(value);\n    // Parse tasks (split by new line)\n    const tasks = value.split('\\n').filter(task => task.trim() !== '');\n    setParsedTasks(tasks);\n  };\n\n  // Handle employee-department input\n  const handleBulkEmployeeDepartmentChange = e => {\n    const value = e.target.value;\n    setBulkEmployeeDepartment(value);\n    // Parse employee-department pairs (split by new line and delimiter)\n    const pairs = value.split('\\n').filter(pair => pair.trim() !== '');\n    const employeeDepartment = pairs.map(pair => {\n      const [employee, department] = pair.split(';').map(item => item.trim());\n      return {\n        employee,\n        department\n      };\n    });\n    setParsedEmployeeDepartment(employeeDepartment);\n  };\n\n  // Handle task selection from parsed tasks\n  const handleTaskSelection = e => {\n    const selectedValue = e.target.value;\n    setTask(prev => ({\n      ...prev,\n      taskName: selectedValue\n    }));\n  };\n\n  // Handle input changes\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'employee') {\n      // Find the selected employee to get their department\n      const selectedEmployee = employees.find(emp => emp.name === value);\n      setTask(prevTask => ({\n        ...prevTask,\n        employee: value,\n        department: selectedEmployee ? selectedEmployee.department : ''\n      }));\n    } else {\n      setTask(prevTask => ({\n        ...prevTask,\n        [name]: value\n      }));\n    }\n  };\n\n  // Handle bulk data submission\n  const handleBulkDataSubmission = async () => {\n    try {\n      // Save tasks to database\n      if (parsedTasks.length > 0) {\n        console.log('Preparing bulk tasks data:', parsedTasks);\n        const tasksData = parsedTasks.map(taskName => ({\n          name: taskName.trim(),\n          status: 'pending',\n          createdAt: new Date().toISOString()\n        }));\n        console.log('Sending bulk tasks:', {\n          tasks: tasksData,\n          requestDetails: {\n            url: 'http://localhost:5000/api/bulk-tasks',\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            }\n          }\n        });\n        try {\n          const tasksResponse = await axios.post('http://localhost:5000/api/bulk-tasks', {\n            tasks: tasksData\n          }, {\n            headers: {\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            }\n          });\n          console.log('Bulk tasks saved successfully:', tasksResponse.data);\n        } catch (apiError) {\n          var _apiError$response, _apiError$response2;\n          console.error('Detailed API Error for Bulk Tasks:', {\n            message: apiError.message,\n            response: (_apiError$response = apiError.response) === null || _apiError$response === void 0 ? void 0 : _apiError$response.data,\n            status: (_apiError$response2 = apiError.response) === null || _apiError$response2 === void 0 ? void 0 : _apiError$response2.status,\n            config: apiError.config,\n            requestData: {\n              tasks: tasksData\n            }\n          });\n          throw apiError;\n        }\n      }\n\n      // Save employee-department pairs to database\n      if (parsedEmployeeDepartment.length > 0) {\n        console.log('Preparing employee-department data:', parsedEmployeeDepartment);\n        const formattedPairs = parsedEmployeeDepartment.map(pair => ({\n          employee: pair.employee.trim(),\n          department: pair.department.trim(),\n          createdAt: new Date().toISOString()\n        }));\n        console.log('Sending employee-department pairs:', {\n          employeeDepartments: formattedPairs,\n          requestDetails: {\n            url: 'http://localhost:5000/api/employee-departments',\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            }\n          }\n        });\n        try {\n          const pairsResponse = await axios.post('http://localhost:5000/api/employee-departments', {\n            employeeDepartments: formattedPairs\n          }, {\n            headers: {\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            }\n          });\n          console.log('Employee-department pairs saved successfully:', pairsResponse.data);\n        } catch (apiError) {\n          var _apiError$response3, _apiError$response4, _apiError$response5, _apiError$response5$d, _apiError$response6, _apiError$response6$d, _apiError$response7, _apiError$response8;\n          console.error('Detailed API Error for Employee-Departments:', {\n            message: apiError.message,\n            response: (_apiError$response3 = apiError.response) === null || _apiError$response3 === void 0 ? void 0 : _apiError$response3.data,\n            status: (_apiError$response4 = apiError.response) === null || _apiError$response4 === void 0 ? void 0 : _apiError$response4.status,\n            config: apiError.config,\n            requestData: {\n              employeeDepartments: formattedPairs\n            }\n          });\n\n          // More detailed error handling\n          const errorMessage = ((_apiError$response5 = apiError.response) === null || _apiError$response5 === void 0 ? void 0 : (_apiError$response5$d = _apiError$response5.data) === null || _apiError$response5$d === void 0 ? void 0 : _apiError$response5$d.error) || ((_apiError$response6 = apiError.response) === null || _apiError$response6 === void 0 ? void 0 : (_apiError$response6$d = _apiError$response6.data) === null || _apiError$response6$d === void 0 ? void 0 : _apiError$response6$d.details) || 'Failed to save employee-department pairs';\n          alert(`Error saving employee-department pairs: \n            ${errorMessage}\n            \n            Status: ${((_apiError$response7 = apiError.response) === null || _apiError$response7 === void 0 ? void 0 : _apiError$response7.status) || 'Unknown'}\n            Details: ${JSON.stringify((_apiError$response8 = apiError.response) === null || _apiError$response8 === void 0 ? void 0 : _apiError$response8.data) || 'No additional details'}\n          `);\n          throw apiError;\n        }\n      }\n\n      // Clear bulk input fields after successful submission\n      setBulkTasks('');\n      setBulkEmployeeDepartment('');\n      setParsedTasks([]);\n      setParsedEmployeeDepartment([]);\n\n      // Show success message\n      alert('Bulk data saved successfully!');\n    } catch (error) {\n      var _error$response, _error$response2, _error$response3, _error$response3$data, _error$response4, _error$response5;\n      console.error('Comprehensive Error saving bulk data:', {\n        message: error.message,\n        response: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data,\n        status: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status,\n        config: error.config,\n        stack: error.stack\n      });\n\n      // Show user-friendly error message with more details\n      alert(`Error saving bulk data: \n        ${((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || error.message}\n        \n        Status: ${((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) || 'Unknown'}\n        Details: ${JSON.stringify((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || 'No additional details'}\n      `);\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // First save bulk data if any exists\n      await handleBulkDataSubmission();\n\n      // Then save the individual task\n      console.log('Sending individual task:', task);\n      const response = await axios.post('http://localhost:5000/api/tasks', task, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      });\n      console.log('Task created:', response.data);\n\n      // Reset form after successful submission\n      setTask({\n        taskName: '',\n        employee: '',\n        department: '',\n        date: '',\n        comments: ''\n      });\n    } catch (error) {\n      var _error$response6, _error$response7, _error$response8, _error$response8$data;\n      console.error('Error creating task:', {\n        message: error.message,\n        response: (_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data,\n        status: (_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.status\n      });\n      alert(`Error creating task: ${((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message) || error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto mt-10 p-6 bg-white rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-6 text-center\",\n      children: \"Create Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"bulkTasks\",\n        className: \"block text-gray-700 text-sm font-bold mb-2\",\n        children: \"Bulk Tasks Input (one task per line)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"bulkTasks\",\n        value: bulkTasks,\n        onChange: handleBulkTasksChange,\n        className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n        rows: \"5\",\n        placeholder: \"Enter multiple tasks, one per line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600 mt-1\",\n        children: [parsedTasks.length, \" tasks ready to be saved\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"bulkEmployeeDepartment\",\n        className: \"block text-gray-700 text-sm font-bold mb-2\",\n        children: \"Employee-Department Input (format: employee;department)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"bulkEmployeeDepartment\",\n        value: bulkEmployeeDepartment,\n        onChange: handleBulkEmployeeDepartmentChange,\n        className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n        rows: \"5\",\n        placeholder: \"Enter employee and department pairs, one per line (e.g., John Doe;Sales)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600 mt-1\",\n        children: [parsedEmployeeDepartment.length, \" employee-department pairs ready to be saved\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 flex justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleBulkDataSubmission,\n        className: \"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline mr-4\",\n        disabled: parsedTasks.length === 0 && parsedEmployeeDepartment.length === 0,\n        children: \"Save Bulk Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"taskName\",\n          className: \"block text-gray-700 text-sm font-bold mb-2\",\n          children: \"Select Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"taskName\",\n          name: \"taskName\",\n          value: task.taskName,\n          onChange: handleTaskSelection,\n          className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), tasks.map(taskItem => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: taskItem.name,\n            children: [taskItem.name, \" - \", taskItem.description]\n          }, `task-${taskItem.id}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"employee\",\n          className: \"block text-gray-700 text-sm font-bold mb-2\",\n          children: \"Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"employee\",\n          name: \"employee\",\n          value: task.employee,\n          onChange: handleChange,\n          className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select an employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this), employees.map(employee => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: employee.name,\n            children: [employee.name, \" - \", employee.department]\n          }, `employee-${employee.id}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"department\",\n          className: \"block text-gray-700 text-sm font-bold mb-2\",\n          children: \"Department\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"department\",\n          name: \"department\",\n          value: ((_employees$find = employees.find(emp => emp.name === task.employee)) === null || _employees$find === void 0 ? void 0 : _employees$find.department) || '',\n          readOnly: true,\n          className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          className: \"block text-gray-700 text-sm font-bold mb-2\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"date\",\n          name: \"date\",\n          value: task.date,\n          onChange: handleChange,\n          className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"comments\",\n          className: \"block text-gray-700 text-sm font-bold mb-2\",\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"comments\",\n          name: \"comments\",\n          value: task.comments,\n          onChange: handleChange,\n          className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n          placeholder: \"Enter any additional comments\",\n          rows: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 5\n  }, this);\n};\nexport default TaskInput;","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TaskInput","_employees$find","task","setTask","taskName","employee","date","comments","bulkTasks","setBulkTasks","parsedTasks","setParsedTasks","bulkEmployeeDepartment","setBulkEmployeeDepartment","parsedEmployeeDepartment","setParsedEmployeeDepartment","tasks","setTasks","employees","setEmployees","fetchData","console","log","tasksResponse","get","data","employeesResponse","error","response","status","headers","request","message","alert","handleBulkTasksChange","e","value","target","split","filter","trim","handleBulkEmployeeDepartmentChange","pairs","pair","employeeDepartment","map","department","item","handleTaskSelection","selectedValue","prev","handleChange","name","selectedEmployee","find","emp","prevTask","handleBulkDataSubmission","length","tasksData","createdAt","Date","toISOString","requestDetails","url","method","post","apiError","_apiError$response","_apiError$response2","config","requestData","formattedPairs","employeeDepartments","pairsResponse","_apiError$response3","_apiError$response4","_apiError$response5","_apiError$response5$d","_apiError$response6","_apiError$response6$d","_apiError$response7","_apiError$response8","errorMessage","details","JSON","stringify","_error$response","_error$response2","_error$response3","_error$response3$data","_error$response4","_error$response5","stack","handleSubmit","preventDefault","_error$response6","_error$response7","_error$response8","_error$response8$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","rows","placeholder","type","onClick","disabled","onSubmit","required","taskItem","description","readOnly"],"sources":["C:/Users/belya/Cursor projects/Budget tracker/client/src/components/TaskInput.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst TaskInput = () => {\r\n  // State to manage form inputs\r\n  const [task, setTask] = useState({\r\n    taskName: '',\r\n    employee: '',\r\n    date: '',\r\n    comments: ''\r\n  });\r\n\r\n  // State for bulk tasks\r\n  const [bulkTasks, setBulkTasks] = useState('');\r\n  const [parsedTasks, setParsedTasks] = useState([]);\r\n\r\n  // State for employee-department input\r\n  const [bulkEmployeeDepartment, setBulkEmployeeDepartment] = useState('');\r\n  const [parsedEmployeeDepartment, setParsedEmployeeDepartment] = useState([]);\r\n\r\n  // State for fetched tasks and employees\r\n  const [tasks, setTasks] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  // Fetch tasks and employees data when the component mounts\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        console.log('Fetching tasks and employees data...');\r\n        \r\n        // Fetch tasks\r\n        const tasksResponse = await axios.get('http://localhost:5000/api/tasks');\r\n        console.log('Tasks fetched:', tasksResponse.data);\r\n        setTasks(tasksResponse.data);\r\n\r\n        // Fetch employees\r\n        const employeesResponse = await axios.get('http://localhost:5000/api/employees');\r\n        console.log('Employees fetched:', employeesResponse.data);\r\n        setEmployees(employeesResponse.data);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        \r\n        // More detailed error handling\r\n        if (error.response) {\r\n          console.error('Server Error:', {\r\n            status: error.response.status,\r\n            data: error.response.data,\r\n            headers: error.response.headers\r\n          });\r\n        } else if (error.request) {\r\n          console.error('No response received:', error.request);\r\n        } else {\r\n          console.error('Error setting up request:', error.message);\r\n        }\r\n\r\n        // Optional: Set error state or show user-friendly error message\r\n        alert('Failed to fetch tasks or employees. Please try again later.');\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Handle bulk tasks input\r\n  const handleBulkTasksChange = (e) => {\r\n    const value = e.target.value;\r\n    setBulkTasks(value);\r\n    // Parse tasks (split by new line)\r\n    const tasks = value.split('\\n').filter(task => task.trim() !== '');\r\n    setParsedTasks(tasks);\r\n  };\r\n\r\n  // Handle employee-department input\r\n  const handleBulkEmployeeDepartmentChange = (e) => {\r\n    const value = e.target.value;\r\n    setBulkEmployeeDepartment(value);\r\n    // Parse employee-department pairs (split by new line and delimiter)\r\n    const pairs = value.split('\\n').filter(pair => pair.trim() !== '');\r\n    const employeeDepartment = pairs.map(pair => {\r\n      const [employee, department] = pair.split(';').map(item => item.trim());\r\n      return { employee, department };\r\n    });\r\n    setParsedEmployeeDepartment(employeeDepartment);\r\n  };\r\n\r\n  // Handle task selection from parsed tasks\r\n  const handleTaskSelection = (e) => {\r\n    const selectedValue = e.target.value;\r\n    setTask(prev => ({\r\n      ...prev,\r\n      taskName: selectedValue\r\n    }));\r\n  };\r\n\r\n  // Handle input changes\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === 'employee') {\r\n      // Find the selected employee to get their department\r\n      const selectedEmployee = employees.find(emp => emp.name === value);\r\n      setTask(prevTask => ({\r\n        ...prevTask,\r\n        employee: value,\r\n        department: selectedEmployee ? selectedEmployee.department : ''\r\n      }));\r\n    } else {\r\n      setTask(prevTask => ({\r\n        ...prevTask,\r\n        [name]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Handle bulk data submission\r\n  const handleBulkDataSubmission = async () => {\r\n    try {\r\n      // Save tasks to database\r\n      if (parsedTasks.length > 0) {\r\n        console.log('Preparing bulk tasks data:', parsedTasks);\r\n        const tasksData = parsedTasks.map(taskName => ({ \r\n          name: taskName.trim(),\r\n          status: 'pending',\r\n          createdAt: new Date().toISOString()\r\n        }));\r\n        \r\n        console.log('Sending bulk tasks:', { \r\n          tasks: tasksData,\r\n          requestDetails: {\r\n            url: 'http://localhost:5000/api/bulk-tasks',\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json'\r\n            }\r\n          }\r\n        });\r\n\r\n        try {\r\n          const tasksResponse = await axios.post('http://localhost:5000/api/bulk-tasks', { \r\n            tasks: tasksData \r\n          }, {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json'\r\n            }\r\n          });\r\n          console.log('Bulk tasks saved successfully:', tasksResponse.data);\r\n        } catch (apiError) {\r\n          console.error('Detailed API Error for Bulk Tasks:', {\r\n            message: apiError.message,\r\n            response: apiError.response?.data,\r\n            status: apiError.response?.status,\r\n            config: apiError.config,\r\n            requestData: { tasks: tasksData }\r\n          });\r\n          throw apiError;\r\n        }\r\n      }\r\n\r\n      // Save employee-department pairs to database\r\n      if (parsedEmployeeDepartment.length > 0) {\r\n        console.log('Preparing employee-department data:', parsedEmployeeDepartment);\r\n        const formattedPairs = parsedEmployeeDepartment.map(pair => ({\r\n          employee: pair.employee.trim(),\r\n          department: pair.department.trim(),\r\n          createdAt: new Date().toISOString()\r\n        }));\r\n\r\n        console.log('Sending employee-department pairs:', { \r\n          employeeDepartments: formattedPairs,\r\n          requestDetails: {\r\n            url: 'http://localhost:5000/api/employee-departments',\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json'\r\n            }\r\n          }\r\n        });\r\n\r\n        try {\r\n          const pairsResponse = await axios.post('http://localhost:5000/api/employee-departments', { \r\n            employeeDepartments: formattedPairs \r\n          }, {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json'\r\n            }\r\n          });\r\n          console.log('Employee-department pairs saved successfully:', pairsResponse.data);\r\n        } catch (apiError) {\r\n          console.error('Detailed API Error for Employee-Departments:', {\r\n            message: apiError.message,\r\n            response: apiError.response?.data,\r\n            status: apiError.response?.status,\r\n            config: apiError.config,\r\n            requestData: { employeeDepartments: formattedPairs }\r\n          });\r\n\r\n          // More detailed error handling\r\n          const errorMessage = apiError.response?.data?.error || \r\n            apiError.response?.data?.details || \r\n            'Failed to save employee-department pairs';\r\n\r\n          alert(`Error saving employee-department pairs: \r\n            ${errorMessage}\r\n            \r\n            Status: ${apiError.response?.status || 'Unknown'}\r\n            Details: ${JSON.stringify(apiError.response?.data) || 'No additional details'}\r\n          `);\r\n\r\n          throw apiError;\r\n        }\r\n      }\r\n\r\n      // Clear bulk input fields after successful submission\r\n      setBulkTasks('');\r\n      setBulkEmployeeDepartment('');\r\n      setParsedTasks([]);\r\n      setParsedEmployeeDepartment([]);\r\n\r\n      // Show success message\r\n      alert('Bulk data saved successfully!');\r\n\r\n    } catch (error) {\r\n      console.error('Comprehensive Error saving bulk data:', {\r\n        message: error.message,\r\n        response: error.response?.data,\r\n        status: error.response?.status,\r\n        config: error.config,\r\n        stack: error.stack\r\n      });\r\n      \r\n      // Show user-friendly error message with more details\r\n      alert(`Error saving bulk data: \r\n        ${error.response?.data?.error || error.message}\r\n        \r\n        Status: ${error.response?.status || 'Unknown'}\r\n        Details: ${JSON.stringify(error.response?.data) || 'No additional details'}\r\n      `);\r\n    }\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // First save bulk data if any exists\r\n      await handleBulkDataSubmission();\r\n\r\n      // Then save the individual task\r\n      console.log('Sending individual task:', task);\r\n      const response = await axios.post('http://localhost:5000/api/tasks', task, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n        }\r\n      });\r\n      console.log('Task created:', response.data);\r\n      \r\n      // Reset form after successful submission\r\n      setTask({\r\n        taskName: '',\r\n        employee: '',\r\n        department: '',\r\n        date: '',\r\n        comments: ''\r\n      });\r\n    } catch (error) {\r\n      console.error('Error creating task:', {\r\n        message: error.message,\r\n        response: error.response?.data,\r\n        status: error.response?.status\r\n      });\r\n      alert(`Error creating task: ${error.response?.data?.message || error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto mt-10 p-6 bg-white rounded-lg shadow-md\">\r\n      <h2 className=\"text-2xl font-bold mb-6 text-center\">Create Task</h2>\r\n      \r\n      {/* Bulk Tasks Input */}\r\n      <div className=\"mb-6\">\r\n        <label \r\n          htmlFor=\"bulkTasks\" \r\n          className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n        >\r\n          Bulk Tasks Input (one task per line)\r\n        </label>\r\n        <textarea\r\n          id=\"bulkTasks\"\r\n          value={bulkTasks}\r\n          onChange={handleBulkTasksChange}\r\n          className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n          rows=\"5\"\r\n          placeholder=\"Enter multiple tasks, one per line\"\r\n        />\r\n        <p className=\"text-sm text-gray-600 mt-1\">\r\n          {parsedTasks.length} tasks ready to be saved\r\n        </p>\r\n      </div>\r\n\r\n      {/* Employee-Department Input */}\r\n      <div className=\"mb-6\">\r\n        <label \r\n          htmlFor=\"bulkEmployeeDepartment\" \r\n          className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n        >\r\n          Employee-Department Input (format: employee;department)\r\n        </label>\r\n        <textarea\r\n          id=\"bulkEmployeeDepartment\"\r\n          value={bulkEmployeeDepartment}\r\n          onChange={handleBulkEmployeeDepartmentChange}\r\n          className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n          rows=\"5\"\r\n          placeholder=\"Enter employee and department pairs, one per line (e.g., John Doe;Sales)\"\r\n        />\r\n        <p className=\"text-sm text-gray-600 mt-1\">\r\n          {parsedEmployeeDepartment.length} employee-department pairs ready to be saved\r\n        </p>\r\n      </div>\r\n\r\n      {/* Save Bulk Data Button */}\r\n      <div className=\"mb-6 flex justify-center\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleBulkDataSubmission}\r\n          className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline mr-4\"\r\n          disabled={parsedTasks.length === 0 && parsedEmployeeDepartment.length === 0}\r\n        >\r\n          Save Bulk Data\r\n        </button>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Task Selection Dropdown */}\r\n        <div className=\"mb-4\">\r\n          <label \r\n            htmlFor=\"taskName\" \r\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n          >\r\n            Select Task\r\n          </label>\r\n          <select\r\n            id=\"taskName\"\r\n            name=\"taskName\"\r\n            value={task.taskName}\r\n            onChange={handleTaskSelection}\r\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            required\r\n          >\r\n            <option value=\"\">Select a task</option>\r\n            {tasks.map((taskItem) => (\r\n              <option \r\n                key={`task-${taskItem.id}`} \r\n                value={taskItem.name}\r\n              >\r\n                {taskItem.name} - {taskItem.description}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        {/* Employee Dropdown */}\r\n        <div className=\"mb-4\">\r\n          <label \r\n            htmlFor=\"employee\" \r\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n          >\r\n            Employee\r\n          </label>\r\n          <select\r\n            id=\"employee\"\r\n            name=\"employee\"\r\n            value={task.employee}\r\n            onChange={handleChange}\r\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            required\r\n          >\r\n            <option value=\"\">Select an employee</option>\r\n            {employees.map((employee) => (\r\n              <option \r\n                key={`employee-${employee.id}`} \r\n                value={employee.name}\r\n              >\r\n                {employee.name} - {employee.department}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        {/* Department Display */}\r\n        <div className=\"mb-4\">\r\n          <label \r\n            htmlFor=\"department\" \r\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n          >\r\n            Department\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"department\"\r\n            name=\"department\"\r\n            value={\r\n              employees.find(emp => emp.name === task.employee)?.department || ''\r\n            }\r\n            readOnly\r\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n          />\r\n        </div>\r\n\r\n        {/* Date Input */}\r\n        <div className=\"mb-4\">\r\n          <label \r\n            htmlFor=\"date\" \r\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n          >\r\n            Date\r\n          </label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"date\"\r\n            name=\"date\"\r\n            value={task.date}\r\n            onChange={handleChange}\r\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        {/* Comments Input */}\r\n        <div className=\"mb-4\">\r\n          <label \r\n            htmlFor=\"comments\" \r\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n          >\r\n            Comments\r\n          </label>\r\n          <textarea\r\n            id=\"comments\"\r\n            name=\"comments\"\r\n            value={task.comments}\r\n            onChange={handleChange}\r\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            placeholder=\"Enter any additional comments\"\r\n            rows=\"4\"\r\n          />\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <div className=\"flex items-center justify-center\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n          >\r\n            Create Task\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskInput; "],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAA,IAAAC,eAAA;EACtB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC;IAC/BS,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE;EACZ,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA,MAAM,CAACiB,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACxE,MAAM,CAACmB,wBAAwB,EAAEC,2BAA2B,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;;EAE5E;EACA,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMwB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACFC,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;;QAEnD;QACA,MAAMC,aAAa,GAAG,MAAM1B,KAAK,CAAC2B,GAAG,CAAC,iCAAiC,CAAC;QACxEH,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,aAAa,CAACE,IAAI,CAAC;QACjDR,QAAQ,CAACM,aAAa,CAACE,IAAI,CAAC;;QAE5B;QACA,MAAMC,iBAAiB,GAAG,MAAM7B,KAAK,CAAC2B,GAAG,CAAC,qCAAqC,CAAC;QAChFH,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEI,iBAAiB,CAACD,IAAI,CAAC;QACzDN,YAAY,CAACO,iBAAiB,CAACD,IAAI,CAAC;MACtC,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;;QAE5C;QACA,IAAIA,KAAK,CAACC,QAAQ,EAAE;UAClBP,OAAO,CAACM,KAAK,CAAC,eAAe,EAAE;YAC7BE,MAAM,EAAEF,KAAK,CAACC,QAAQ,CAACC,MAAM;YAC7BJ,IAAI,EAAEE,KAAK,CAACC,QAAQ,CAACH,IAAI;YACzBK,OAAO,EAAEH,KAAK,CAACC,QAAQ,CAACE;UAC1B,CAAC,CAAC;QACJ,CAAC,MAAM,IAAIH,KAAK,CAACI,OAAO,EAAE;UACxBV,OAAO,CAACM,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACI,OAAO,CAAC;QACvD,CAAC,MAAM;UACLV,OAAO,CAACM,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACK,OAAO,CAAC;QAC3D;;QAEA;QACAC,KAAK,CAAC,6DAA6D,CAAC;MACtE;IACF,CAAC;IAEDb,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMc,qBAAqB,GAAIC,CAAC,IAAK;IACnC,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;IAC5B3B,YAAY,CAAC2B,KAAK,CAAC;IACnB;IACA,MAAMpB,KAAK,GAAGoB,KAAK,CAACE,KAAK,CAAC,IAAI,CAAC,CAACC,MAAM,CAACrC,IAAI,IAAIA,IAAI,CAACsC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;IAClE7B,cAAc,CAACK,KAAK,CAAC;EACvB,CAAC;;EAED;EACA,MAAMyB,kCAAkC,GAAIN,CAAC,IAAK;IAChD,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;IAC5BvB,yBAAyB,CAACuB,KAAK,CAAC;IAChC;IACA,MAAMM,KAAK,GAAGN,KAAK,CAACE,KAAK,CAAC,IAAI,CAAC,CAACC,MAAM,CAACI,IAAI,IAAIA,IAAI,CAACH,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;IAClE,MAAMI,kBAAkB,GAAGF,KAAK,CAACG,GAAG,CAACF,IAAI,IAAI;MAC3C,MAAM,CAACtC,QAAQ,EAAEyC,UAAU,CAAC,GAAGH,IAAI,CAACL,KAAK,CAAC,GAAG,CAAC,CAACO,GAAG,CAACE,IAAI,IAAIA,IAAI,CAACP,IAAI,CAAC,CAAC,CAAC;MACvE,OAAO;QAAEnC,QAAQ;QAAEyC;MAAW,CAAC;IACjC,CAAC,CAAC;IACF/B,2BAA2B,CAAC6B,kBAAkB,CAAC;EACjD,CAAC;;EAED;EACA,MAAMI,mBAAmB,GAAIb,CAAC,IAAK;IACjC,MAAMc,aAAa,GAAGd,CAAC,CAACE,MAAM,CAACD,KAAK;IACpCjC,OAAO,CAAC+C,IAAI,KAAK;MACf,GAAGA,IAAI;MACP9C,QAAQ,EAAE6C;IACZ,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACA,MAAME,YAAY,GAAIhB,CAAC,IAAK;IAC1B,MAAM;MAAEiB,IAAI;MAAEhB;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChC,IAAIe,IAAI,KAAK,UAAU,EAAE;MACvB;MACA,MAAMC,gBAAgB,GAAGnC,SAAS,CAACoC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACH,IAAI,KAAKhB,KAAK,CAAC;MAClEjC,OAAO,CAACqD,QAAQ,KAAK;QACnB,GAAGA,QAAQ;QACXnD,QAAQ,EAAE+B,KAAK;QACfU,UAAU,EAAEO,gBAAgB,GAAGA,gBAAgB,CAACP,UAAU,GAAG;MAC/D,CAAC,CAAC,CAAC;IACL,CAAC,MAAM;MACL3C,OAAO,CAACqD,QAAQ,KAAK;QACnB,GAAGA,QAAQ;QACX,CAACJ,IAAI,GAAGhB;MACV,CAAC,CAAC,CAAC;IACL;EACF,CAAC;;EAED;EACA,MAAMqB,wBAAwB,GAAG,MAAAA,CAAA,KAAY;IAC3C,IAAI;MACF;MACA,IAAI/C,WAAW,CAACgD,MAAM,GAAG,CAAC,EAAE;QAC1BrC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEZ,WAAW,CAAC;QACtD,MAAMiD,SAAS,GAAGjD,WAAW,CAACmC,GAAG,CAACzC,QAAQ,KAAK;UAC7CgD,IAAI,EAAEhD,QAAQ,CAACoC,IAAI,CAAC,CAAC;UACrBX,MAAM,EAAE,SAAS;UACjB+B,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;QACpC,CAAC,CAAC,CAAC;QAEHzC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE;UACjCN,KAAK,EAAE2C,SAAS;UAChBI,cAAc,EAAE;YACdC,GAAG,EAAE,sCAAsC;YAC3CC,MAAM,EAAE,MAAM;YACdnC,OAAO,EAAE;cACP,cAAc,EAAE,kBAAkB;cAClC,QAAQ,EAAE;YACZ;UACF;QACF,CAAC,CAAC;QAEF,IAAI;UACF,MAAMP,aAAa,GAAG,MAAM1B,KAAK,CAACqE,IAAI,CAAC,sCAAsC,EAAE;YAC7ElD,KAAK,EAAE2C;UACT,CAAC,EAAE;YACD7B,OAAO,EAAE;cACP,cAAc,EAAE,kBAAkB;cAClC,QAAQ,EAAE;YACZ;UACF,CAAC,CAAC;UACFT,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEC,aAAa,CAACE,IAAI,CAAC;QACnE,CAAC,CAAC,OAAO0C,QAAQ,EAAE;UAAA,IAAAC,kBAAA,EAAAC,mBAAA;UACjBhD,OAAO,CAACM,KAAK,CAAC,oCAAoC,EAAE;YAClDK,OAAO,EAAEmC,QAAQ,CAACnC,OAAO;YACzBJ,QAAQ,GAAAwC,kBAAA,GAAED,QAAQ,CAACvC,QAAQ,cAAAwC,kBAAA,uBAAjBA,kBAAA,CAAmB3C,IAAI;YACjCI,MAAM,GAAAwC,mBAAA,GAAEF,QAAQ,CAACvC,QAAQ,cAAAyC,mBAAA,uBAAjBA,mBAAA,CAAmBxC,MAAM;YACjCyC,MAAM,EAAEH,QAAQ,CAACG,MAAM;YACvBC,WAAW,EAAE;cAAEvD,KAAK,EAAE2C;YAAU;UAClC,CAAC,CAAC;UACF,MAAMQ,QAAQ;QAChB;MACF;;MAEA;MACA,IAAIrD,wBAAwB,CAAC4C,MAAM,GAAG,CAAC,EAAE;QACvCrC,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAER,wBAAwB,CAAC;QAC5E,MAAM0D,cAAc,GAAG1D,wBAAwB,CAAC+B,GAAG,CAACF,IAAI,KAAK;UAC3DtC,QAAQ,EAAEsC,IAAI,CAACtC,QAAQ,CAACmC,IAAI,CAAC,CAAC;UAC9BM,UAAU,EAAEH,IAAI,CAACG,UAAU,CAACN,IAAI,CAAC,CAAC;UAClCoB,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;QACpC,CAAC,CAAC,CAAC;QAEHzC,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAE;UAChDmD,mBAAmB,EAAED,cAAc;UACnCT,cAAc,EAAE;YACdC,GAAG,EAAE,gDAAgD;YACrDC,MAAM,EAAE,MAAM;YACdnC,OAAO,EAAE;cACP,cAAc,EAAE,kBAAkB;cAClC,QAAQ,EAAE;YACZ;UACF;QACF,CAAC,CAAC;QAEF,IAAI;UACF,MAAM4C,aAAa,GAAG,MAAM7E,KAAK,CAACqE,IAAI,CAAC,gDAAgD,EAAE;YACvFO,mBAAmB,EAAED;UACvB,CAAC,EAAE;YACD1C,OAAO,EAAE;cACP,cAAc,EAAE,kBAAkB;cAClC,QAAQ,EAAE;YACZ;UACF,CAAC,CAAC;UACFT,OAAO,CAACC,GAAG,CAAC,+CAA+C,EAAEoD,aAAa,CAACjD,IAAI,CAAC;QAClF,CAAC,CAAC,OAAO0C,QAAQ,EAAE;UAAA,IAAAQ,mBAAA,EAAAC,mBAAA,EAAAC,mBAAA,EAAAC,qBAAA,EAAAC,mBAAA,EAAAC,qBAAA,EAAAC,mBAAA,EAAAC,mBAAA;UACjB7D,OAAO,CAACM,KAAK,CAAC,8CAA8C,EAAE;YAC5DK,OAAO,EAAEmC,QAAQ,CAACnC,OAAO;YACzBJ,QAAQ,GAAA+C,mBAAA,GAAER,QAAQ,CAACvC,QAAQ,cAAA+C,mBAAA,uBAAjBA,mBAAA,CAAmBlD,IAAI;YACjCI,MAAM,GAAA+C,mBAAA,GAAET,QAAQ,CAACvC,QAAQ,cAAAgD,mBAAA,uBAAjBA,mBAAA,CAAmB/C,MAAM;YACjCyC,MAAM,EAAEH,QAAQ,CAACG,MAAM;YACvBC,WAAW,EAAE;cAAEE,mBAAmB,EAAED;YAAe;UACrD,CAAC,CAAC;;UAEF;UACA,MAAMW,YAAY,GAAG,EAAAN,mBAAA,GAAAV,QAAQ,CAACvC,QAAQ,cAAAiD,mBAAA,wBAAAC,qBAAA,GAAjBD,mBAAA,CAAmBpD,IAAI,cAAAqD,qBAAA,uBAAvBA,qBAAA,CAAyBnD,KAAK,OAAAoD,mBAAA,GACjDZ,QAAQ,CAACvC,QAAQ,cAAAmD,mBAAA,wBAAAC,qBAAA,GAAjBD,mBAAA,CAAmBtD,IAAI,cAAAuD,qBAAA,uBAAvBA,qBAAA,CAAyBI,OAAO,KAChC,0CAA0C;UAE5CnD,KAAK,CAAC;AAChB,cAAckD,YAAY;AAC1B;AACA,sBAAsB,EAAAF,mBAAA,GAAAd,QAAQ,CAACvC,QAAQ,cAAAqD,mBAAA,uBAAjBA,mBAAA,CAAmBpD,MAAM,KAAI,SAAS;AAC5D,uBAAuBwD,IAAI,CAACC,SAAS,EAAAJ,mBAAA,GAACf,QAAQ,CAACvC,QAAQ,cAAAsD,mBAAA,uBAAjBA,mBAAA,CAAmBzD,IAAI,CAAC,IAAI,uBAAuB;AACzF,WAAW,CAAC;UAEF,MAAM0C,QAAQ;QAChB;MACF;;MAEA;MACA1D,YAAY,CAAC,EAAE,CAAC;MAChBI,yBAAyB,CAAC,EAAE,CAAC;MAC7BF,cAAc,CAAC,EAAE,CAAC;MAClBI,2BAA2B,CAAC,EAAE,CAAC;;MAE/B;MACAkB,KAAK,CAAC,+BAA+B,CAAC;IAExC,CAAC,CAAC,OAAON,KAAK,EAAE;MAAA,IAAA4D,eAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,qBAAA,EAAAC,gBAAA,EAAAC,gBAAA;MACdvE,OAAO,CAACM,KAAK,CAAC,uCAAuC,EAAE;QACrDK,OAAO,EAAEL,KAAK,CAACK,OAAO;QACtBJ,QAAQ,GAAA2D,eAAA,GAAE5D,KAAK,CAACC,QAAQ,cAAA2D,eAAA,uBAAdA,eAAA,CAAgB9D,IAAI;QAC9BI,MAAM,GAAA2D,gBAAA,GAAE7D,KAAK,CAACC,QAAQ,cAAA4D,gBAAA,uBAAdA,gBAAA,CAAgB3D,MAAM;QAC9ByC,MAAM,EAAE3C,KAAK,CAAC2C,MAAM;QACpBuB,KAAK,EAAElE,KAAK,CAACkE;MACf,CAAC,CAAC;;MAEF;MACA5D,KAAK,CAAC;AACZ,UAAU,EAAAwD,gBAAA,GAAA9D,KAAK,CAACC,QAAQ,cAAA6D,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBhE,IAAI,cAAAiE,qBAAA,uBAApBA,qBAAA,CAAsB/D,KAAK,KAAIA,KAAK,CAACK,OAAO;AACtD;AACA,kBAAkB,EAAA2D,gBAAA,GAAAhE,KAAK,CAACC,QAAQ,cAAA+D,gBAAA,uBAAdA,gBAAA,CAAgB9D,MAAM,KAAI,SAAS;AACrD,mBAAmBwD,IAAI,CAACC,SAAS,EAAAM,gBAAA,GAACjE,KAAK,CAACC,QAAQ,cAAAgE,gBAAA,uBAAdA,gBAAA,CAAgBnE,IAAI,CAAC,IAAI,uBAAuB;AAClF,OAAO,CAAC;IACJ;EACF,CAAC;;EAED;EACA,MAAMqE,YAAY,GAAG,MAAO3D,CAAC,IAAK;IAChCA,CAAC,CAAC4D,cAAc,CAAC,CAAC;IAClB,IAAI;MACF;MACA,MAAMtC,wBAAwB,CAAC,CAAC;;MAEhC;MACApC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEpB,IAAI,CAAC;MAC7C,MAAM0B,QAAQ,GAAG,MAAM/B,KAAK,CAACqE,IAAI,CAAC,iCAAiC,EAAEhE,IAAI,EAAE;QACzE4B,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,QAAQ,EAAE;QACZ;MACF,CAAC,CAAC;MACFT,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEM,QAAQ,CAACH,IAAI,CAAC;;MAE3C;MACAtB,OAAO,CAAC;QACNC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZyC,UAAU,EAAE,EAAE;QACdxC,IAAI,EAAE,EAAE;QACRC,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOoB,KAAK,EAAE;MAAA,IAAAqE,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,qBAAA;MACd9E,OAAO,CAACM,KAAK,CAAC,sBAAsB,EAAE;QACpCK,OAAO,EAAEL,KAAK,CAACK,OAAO;QACtBJ,QAAQ,GAAAoE,gBAAA,GAAErE,KAAK,CAACC,QAAQ,cAAAoE,gBAAA,uBAAdA,gBAAA,CAAgBvE,IAAI;QAC9BI,MAAM,GAAAoE,gBAAA,GAAEtE,KAAK,CAACC,QAAQ,cAAAqE,gBAAA,uBAAdA,gBAAA,CAAgBpE;MAC1B,CAAC,CAAC;MACFI,KAAK,CAAC,wBAAwB,EAAAiE,gBAAA,GAAAvE,KAAK,CAACC,QAAQ,cAAAsE,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBzE,IAAI,cAAA0E,qBAAA,uBAApBA,qBAAA,CAAsBnE,OAAO,KAAIL,KAAK,CAACK,OAAO,EAAE,CAAC;IACjF;EACF,CAAC;EAED,oBACEjC,OAAA;IAAKqG,SAAS,EAAC,0DAA0D;IAAAC,QAAA,gBACvEtG,OAAA;MAAIqG,SAAS,EAAC,qCAAqC;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGpE1G,OAAA;MAAKqG,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBtG,OAAA;QACE2G,OAAO,EAAC,WAAW;QACnBN,SAAS,EAAC,4CAA4C;QAAAC,QAAA,EACvD;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACR1G,OAAA;QACE4G,EAAE,EAAC,WAAW;QACdvE,KAAK,EAAE5B,SAAU;QACjBoG,QAAQ,EAAE1E,qBAAsB;QAChCkE,SAAS,EAAC,4HAA4H;QACtIS,IAAI,EAAC,GAAG;QACRC,WAAW,EAAC;MAAoC;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eACF1G,OAAA;QAAGqG,SAAS,EAAC,4BAA4B;QAAAC,QAAA,GACtC3F,WAAW,CAACgD,MAAM,EAAC,0BACtB;MAAA;QAAA4C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAGN1G,OAAA;MAAKqG,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBtG,OAAA;QACE2G,OAAO,EAAC,wBAAwB;QAChCN,SAAS,EAAC,4CAA4C;QAAAC,QAAA,EACvD;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACR1G,OAAA;QACE4G,EAAE,EAAC,wBAAwB;QAC3BvE,KAAK,EAAExB,sBAAuB;QAC9BgG,QAAQ,EAAEnE,kCAAmC;QAC7C2D,SAAS,EAAC,4HAA4H;QACtIS,IAAI,EAAC,GAAG;QACRC,WAAW,EAAC;MAA0E;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvF,CAAC,eACF1G,OAAA;QAAGqG,SAAS,EAAC,4BAA4B;QAAAC,QAAA,GACtCvF,wBAAwB,CAAC4C,MAAM,EAAC,8CACnC;MAAA;QAAA4C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAGN1G,OAAA;MAAKqG,SAAS,EAAC,0BAA0B;MAAAC,QAAA,eACvCtG,OAAA;QACEgH,IAAI,EAAC,QAAQ;QACbC,OAAO,EAAEvD,wBAAyB;QAClC2C,SAAS,EAAC,qHAAqH;QAC/Ha,QAAQ,EAAEvG,WAAW,CAACgD,MAAM,KAAK,CAAC,IAAI5C,wBAAwB,CAAC4C,MAAM,KAAK,CAAE;QAAA2C,QAAA,EAC7E;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAEN1G,OAAA;MAAMmH,QAAQ,EAAEpB,YAAa;MAAAO,QAAA,gBAE3BtG,OAAA;QAAKqG,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBtG,OAAA;UACE2G,OAAO,EAAC,UAAU;UAClBN,SAAS,EAAC,4CAA4C;UAAAC,QAAA,EACvD;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACR1G,OAAA;UACE4G,EAAE,EAAC,UAAU;UACbvD,IAAI,EAAC,UAAU;UACfhB,KAAK,EAAElC,IAAI,CAACE,QAAS;UACrBwG,QAAQ,EAAE5D,mBAAoB;UAC9BoD,SAAS,EAAC,4HAA4H;UACtIe,QAAQ;UAAAd,QAAA,gBAERtG,OAAA;YAAQqC,KAAK,EAAC,EAAE;YAAAiE,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACtCzF,KAAK,CAAC6B,GAAG,CAAEuE,QAAQ,iBAClBrH,OAAA;YAEEqC,KAAK,EAAEgF,QAAQ,CAAChE,IAAK;YAAAiD,QAAA,GAEpBe,QAAQ,CAAChE,IAAI,EAAC,KAAG,EAACgE,QAAQ,CAACC,WAAW;UAAA,GAHlC,QAAQD,QAAQ,CAACT,EAAE,EAAE;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIpB,CACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAGN1G,OAAA;QAAKqG,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBtG,OAAA;UACE2G,OAAO,EAAC,UAAU;UAClBN,SAAS,EAAC,4CAA4C;UAAAC,QAAA,EACvD;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACR1G,OAAA;UACE4G,EAAE,EAAC,UAAU;UACbvD,IAAI,EAAC,UAAU;UACfhB,KAAK,EAAElC,IAAI,CAACG,QAAS;UACrBuG,QAAQ,EAAEzD,YAAa;UACvBiD,SAAS,EAAC,4HAA4H;UACtIe,QAAQ;UAAAd,QAAA,gBAERtG,OAAA;YAAQqC,KAAK,EAAC,EAAE;YAAAiE,QAAA,EAAC;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAC3CvF,SAAS,CAAC2B,GAAG,CAAExC,QAAQ,iBACtBN,OAAA;YAEEqC,KAAK,EAAE/B,QAAQ,CAAC+C,IAAK;YAAAiD,QAAA,GAEpBhG,QAAQ,CAAC+C,IAAI,EAAC,KAAG,EAAC/C,QAAQ,CAACyC,UAAU;UAAA,GAHjC,YAAYzC,QAAQ,CAACsG,EAAE,EAAE;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIxB,CACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAGN1G,OAAA;QAAKqG,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBtG,OAAA;UACE2G,OAAO,EAAC,YAAY;UACpBN,SAAS,EAAC,4CAA4C;UAAAC,QAAA,EACvD;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACR1G,OAAA;UACEgH,IAAI,EAAC,MAAM;UACXJ,EAAE,EAAC,YAAY;UACfvD,IAAI,EAAC,YAAY;UACjBhB,KAAK,EACH,EAAAnC,eAAA,GAAAiB,SAAS,CAACoC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACH,IAAI,KAAKlD,IAAI,CAACG,QAAQ,CAAC,cAAAJ,eAAA,uBAAjDA,eAAA,CAAmD6C,UAAU,KAAI,EAClE;UACDwE,QAAQ;UACRlB,SAAS,EAAC;QAA4H;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGN1G,OAAA;QAAKqG,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBtG,OAAA;UACE2G,OAAO,EAAC,MAAM;UACdN,SAAS,EAAC,4CAA4C;UAAAC,QAAA,EACvD;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACR1G,OAAA;UACEgH,IAAI,EAAC,MAAM;UACXJ,EAAE,EAAC,MAAM;UACTvD,IAAI,EAAC,MAAM;UACXhB,KAAK,EAAElC,IAAI,CAACI,IAAK;UACjBsG,QAAQ,EAAEzD,YAAa;UACvBiD,SAAS,EAAC,4HAA4H;UACtIe,QAAQ;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGN1G,OAAA;QAAKqG,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBtG,OAAA;UACE2G,OAAO,EAAC,UAAU;UAClBN,SAAS,EAAC,4CAA4C;UAAAC,QAAA,EACvD;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACR1G,OAAA;UACE4G,EAAE,EAAC,UAAU;UACbvD,IAAI,EAAC,UAAU;UACfhB,KAAK,EAAElC,IAAI,CAACK,QAAS;UACrBqG,QAAQ,EAAEzD,YAAa;UACvBiD,SAAS,EAAC,4HAA4H;UACtIU,WAAW,EAAC,+BAA+B;UAC3CD,IAAI,EAAC;QAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGN1G,OAAA;QAAKqG,SAAS,EAAC,kCAAkC;QAAAC,QAAA,eAC/CtG,OAAA;UACEgH,IAAI,EAAC,QAAQ;UACbX,SAAS,EAAC,8GAA8G;UAAAC,QAAA,EACzH;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAED,eAAezG,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
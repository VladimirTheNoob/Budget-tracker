{"ast":null,"code":"import _objectSpread from\"C:/Users/belya/Cursor projects/Budget tracker/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TaskList=_ref=>{let{refreshTrigger,tasks,employees}=_ref;const[filters,setFilters]=useState({status:'all',employee:'all',department:'all'});const[groupBy,setGroupBy]=useState('none');// none, employee, department\nconst[checkedTasks,setCheckedTasks]=useState(new Set());const[notificationText,setNotificationText]=useState('');const[uniqueTasks,setUniqueTasks]=useState([]);const[bulkTaskInput,setBulkTaskInput]=useState('');// Add deduplication for employees\nconst uniqueEmployees=[...new Map(employees.map(emp=>[emp.id,emp])).values()];useEffect(()=>{fetchData();},[refreshTrigger]);useEffect(()=>{const seen=new Set();const filtered=tasks.filter(task=>{const duplicate=seen.has(task.taskName);seen.add(task.taskName);return!duplicate;});setUniqueTasks(filtered);},[tasks]);const fetchData=async()=>{try{const[tasksResponse,employeesResponse]=await Promise.all([axios.get('http://localhost:5000/api/tasks',{withCredentials:true}),axios.get('http://localhost:5000/api/employees',{withCredentials:true,validateStatus:status=>status===200||status===403})]);// Process tasks\nconst tasksWithIds=tasksResponse.data.map((task,index)=>_objectSpread(_objectSpread({},task),{},{id:task.id||\"task-\".concat(Date.now(),\"-\").concat(index),taskName:task.name}));// Only process employees if the request was successful\nif(employeesResponse.status===200){// Process data but don't set state - it comes from props\nconst processedEmployees=employeesResponse.data;console.log('Fetched employees:',processedEmployees);}else{console.warn('No permission to fetch employees');// Optionally, show a user-friendly notification\nalert('You do not have permission to view employee details.');}}catch(error){console.error('Error fetching data:',error);// Handle network errors or other issues\nalert('An error occurred while fetching data. Please try again later.');}};const getStatusClass=status=>{switch(status===null||status===void 0?void 0:status.toLowerCase()){case'completed':return'bg-green-100 text-green-800';case'in progress':return'bg-blue-100 text-blue-800';case'pending':return'bg-yellow-100 text-yellow-800';default:return'bg-gray-100 text-gray-800';}};const filterTasks=tasks=>{return tasks.filter(task=>{if(filters.status!=='all'&&task.status!==filters.status)return false;if(filters.employee!=='all'&&task.employee!==filters.employee)return false;if(filters.department!=='all'&&task.department!==filters.department)return false;return true;});};const groupTasks=tasks=>{if(groupBy==='none')return{'All Tasks':tasks};return tasks.reduce((groups,task)=>{const key=task[groupBy]||'Unassigned';if(!groups[key]){groups[key]=[];}groups[key].push(task);return groups;},{});};const getUniqueDepartments=()=>{return[...new Set(employees.map(emp=>emp.department))];};const filteredTasks=filterTasks(tasks);const groupedTasks=groupTasks(filteredTasks);const handleCheckTask=taskId=>{setCheckedTasks(prev=>{const newChecked=new Set(prev);if(newChecked.has(taskId)){newChecked.delete(taskId);}else{newChecked.add(taskId);}return newChecked;});};const handleSendNotifications=async()=>{if(checkedTasks.size===0){alert('Please select at least one task to send notifications');return;}if(!notificationText.trim()){alert('Please enter notification text');return;}try{var _response$data$result,_response$data$result2;// Check authentication status first\nconst authResponse=await axios.get('http://localhost:5000/auth/status',{withCredentials:true});if(!authResponse.data.authenticated){alert('Please log in to send notifications');return;}// Get selected tasks with their employee emails\nconst selectedTasks=tasks.filter(task=>checkedTasks.has(task.id));const notifications=selectedTasks.map(task=>{var _employees$find;const employeeEmail=(_employees$find=employees.find(emp=>emp.name===task.employee))===null||_employees$find===void 0?void 0:_employees$find.email;if(!employeeEmail){throw new Error(\"No email found for employee: \".concat(task.employee));}return{taskId:task.id,taskName:task.name,employeeName:task.employee,email:employeeEmail,message:notificationText};});console.log('Preparing to send notifications:',notifications);// Send notifications to the backend with credentials\nconst response=await axios.post('http://localhost:5000/api/notifications/send',{notifications},{withCredentials:true,// Include cookies for authentication\nheaders:{'Content-Type':'application/json'}});console.log('Notifications sent:',response.data);// Check response structure and handle accordingly\nconst successCount=((_response$data$result=response.data.results)===null||_response$data$result===void 0?void 0:_response$data$result.filter(r=>r.success).length)||0;const failedCount=((_response$data$result2=response.data.results)===null||_response$data$result2===void 0?void 0:_response$data$result2.filter(r=>!r.success).length)||0;if(successCount>0){const successEmails=response.data.results.filter(r=>r.success).map(r=>r.email);alert(\"Notifications sent successfully:\\n\\n\".concat(successEmails.join('\\n')));// Clear selections and text\nsetCheckedTasks(new Set());setNotificationText('');}else{alert('No notifications were sent. Please check your selection and try again.');}// Log any failed notifications\nif(failedCount>0){const failedNotifications=response.data.results.filter(r=>!r.success).map(r=>\"\".concat(r.email,\": \").concat(r.error));console.warn('Failed notifications:',failedNotifications);}}catch(error){console.error('Error sending notifications:',error);// More detailed error handling\nif(error.response){var _error$response$data,_error$response$data2;// The request was made and the server responded with a status code\nconst errorMessage=((_error$response$data=error.response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||((_error$response$data2=error.response.data)===null||_error$response$data2===void 0?void 0:_error$response$data2.message)||'Unknown server error';alert(\"Failed to send notifications: \".concat(errorMessage));}else if(error.request){// The request was made but no response was received\nalert('No response received from the server. Please check your network connection.');}else{// Something happened in setting up the request\nalert(\"Error: \".concat(error.message));}}};const handleBulkDataSubmission=async()=>{try{console.log('=== BULK DATA SUBMISSION STARTED ===');// Process employee-department updates first\nif(parsedEmployeeDepartment.length>0){try{// Create valid pairs with proper scoping and normalization\nconst validPairs=parsedEmployeeDepartment.map(pair=>{var _pair$employee,_pair$department,_pair$email;return{employee:((_pair$employee=pair.employee)===null||_pair$employee===void 0?void 0:_pair$employee.trim())||'',department:((_pair$department=pair.department)===null||_pair$department===void 0?void 0:_pair$department.trim())||'',email:(_pair$email=pair.email)===null||_pair$email===void 0?void 0:_pair$email.trim().toLowerCase()};}).filter(pair=>pair.employee&&pair.department&&pair.email);console.log('Sending employee updates:',validPairs);// Send updates using PUT request\nconst employeeResponse=await axios.put('http://localhost:5000/api/employee-departments',{updates:validPairs},{headers:{'Content-Type':'application/json'},withCredentials:true});if(employeeResponse.status===200){console.log('Successfully updated employee-departments');console.log('Updated entries:',employeeResponse.data.updatedEntries);// Refresh employee data after update\nawait fetchData();// Show success message with details\nif(employeeResponse.data.updatedCount>0){alert(\"Updated \".concat(employeeResponse.data.updatedCount,\" employee entries\"));}}}catch(error){var _error$response,_error$response$data3;console.error('Update error:',error);alert(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data3=_error$response.data)===null||_error$response$data3===void 0?void 0:_error$response$data3.error)||'Update failed');return;}}// ... rest of the method remains the same\n}catch(error){// Error handling\nalert(error.message||'Failed to submit bulk tasks');console.error('Bulk task submission error:',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto p-4 bg-[#f5f5f5]\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-7xl mx-auto mb-6 bg-white rounded p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-6 text-center\",children:\"Filters\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-4 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-gray-700 text-sm font-medium mb-2\",children:\"Status\"}),/*#__PURE__*/_jsxs(\"select\",{value:filters.status,onChange:e=>setFilters(_objectSpread(_objectSpread({},filters),{},{status:e.target.value})),className:\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"All Statuses\"}),/*#__PURE__*/_jsx(\"option\",{value:\"pending\",children:\"Pending\"}),/*#__PURE__*/_jsx(\"option\",{value:\"in progress\",children:\"In Progress\"}),/*#__PURE__*/_jsx(\"option\",{value:\"completed\",children:\"Completed\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-gray-700 text-sm font-medium mb-2\",children:\"Employee\"}),/*#__PURE__*/_jsxs(\"select\",{value:filters.employee,onChange:e=>setFilters(_objectSpread(_objectSpread({},filters),{},{employee:e.target.value})),className:\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"All Employees\"}),uniqueEmployees.map(employee=>/*#__PURE__*/_jsx(\"option\",{value:employee.name,children:employee.name},\"employee-\".concat(employee.id)))]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-gray-700 text-sm font-medium mb-2\",children:\"Department\"}),/*#__PURE__*/_jsxs(\"select\",{value:filters.department,onChange:e=>setFilters(_objectSpread(_objectSpread({},filters),{},{department:e.target.value})),className:\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"All Departments\"}),getUniqueDepartments().map(dept=>/*#__PURE__*/_jsx(\"option\",{value:dept,children:dept},dept))]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-gray-700 text-sm font-medium mb-2\",children:\"Group By\"}),/*#__PURE__*/_jsxs(\"select\",{value:groupBy,onChange:e=>setGroupBy(e.target.value),className:\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"none\",children:\"No Grouping\"}),/*#__PURE__*/_jsx(\"option\",{value:\"employee\",children:\"Employee\"}),/*#__PURE__*/_jsx(\"option\",{value:\"department\",children:\"Department\"})]})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"max-w-7xl mx-auto mb-6 bg-white rounded p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-4 items-end\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-grow\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-gray-700 text-sm font-medium mb-2\",children:\"Notification Text\"}),/*#__PURE__*/_jsx(\"textarea\",{value:notificationText,onChange:e=>setNotificationText(e.target.value),className:\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\",rows:\"2\",placeholder:\"Enter notification text to send to selected employees\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSendNotifications,className:\"w-48 bg-black hover:bg-gray-800 text-white font-medium py-2 px-6 rounded\",disabled:checkedTasks.size===0||!notificationText.trim(),children:\"Send Notifications\"})]})}),Object.entries(groupedTasks).map(_ref2=>{let[group,tasks]=_ref2;return/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-7xl mx-auto mb-6 bg-white rounded p-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"mb-4 border-b pb-4\",children:/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold\",children:group})}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-50\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Select\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Task\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Employee\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Department\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Due Date\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Actual end Date\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Status\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"bg-white divide-y divide-gray-200\",children:tasks.map((task,index)=>{const taskId=task.id||\"task-\".concat(Date.now(),\"-\").concat(index);return/*#__PURE__*/_jsxs(\"tr\",{className:\"hover:bg-gray-50\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap\",children:/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:checkedTasks.has(taskId),onChange:()=>handleCheckTask(taskId),className:\"h-4 w-4 text-black focus:ring-black border-gray-300 rounded\"})}),/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap\",children:task.name}),/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap\",children:task.employee}),/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap\",children:task.department}),/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap\",children:task.date}),/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap\",children:task.endDate}),/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap\",children:/*#__PURE__*/_jsx(\"span\",{className:\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full \".concat(getStatusClass(task.status)),children:task.status||'Pending'})})]},\"task-\".concat(taskId));})})]})})]},\"group-\".concat(group));})]});};export default TaskList;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","TaskList","_ref","refreshTrigger","tasks","employees","filters","setFilters","status","employee","department","groupBy","setGroupBy","checkedTasks","setCheckedTasks","Set","notificationText","setNotificationText","uniqueTasks","setUniqueTasks","bulkTaskInput","setBulkTaskInput","uniqueEmployees","Map","map","emp","id","values","fetchData","seen","filtered","filter","task","duplicate","has","taskName","add","tasksResponse","employeesResponse","Promise","all","get","withCredentials","validateStatus","tasksWithIds","data","index","_objectSpread","concat","Date","now","name","processedEmployees","console","log","warn","alert","error","getStatusClass","toLowerCase","filterTasks","groupTasks","reduce","groups","key","push","getUniqueDepartments","filteredTasks","groupedTasks","handleCheckTask","taskId","prev","newChecked","delete","handleSendNotifications","size","trim","_response$data$result","_response$data$result2","authResponse","authenticated","selectedTasks","notifications","_employees$find","employeeEmail","find","email","Error","employeeName","message","response","post","headers","successCount","results","r","success","length","failedCount","successEmails","join","failedNotifications","_error$response$data","_error$response$data2","errorMessage","request","handleBulkDataSubmission","parsedEmployeeDepartment","validPairs","pair","_pair$employee","_pair$department","_pair$email","employeeResponse","put","updates","updatedEntries","updatedCount","_error$response","_error$response$data3","className","children","value","onChange","e","target","dept","rows","placeholder","onClick","disabled","Object","entries","_ref2","group","type","checked","date","endDate"],"sources":["C:/Users/belya/Cursor projects/Budget tracker/client/src/components/TaskList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst TaskList = ({ refreshTrigger, tasks, employees }) => {\n  const [filters, setFilters] = useState({\n    status: 'all',\n    employee: 'all',\n    department: 'all',\n  });\n  const [groupBy, setGroupBy] = useState('none'); // none, employee, department\n  const [checkedTasks, setCheckedTasks] = useState(new Set());\n  const [notificationText, setNotificationText] = useState('');\n  const [uniqueTasks, setUniqueTasks] = useState([]);\n  const [bulkTaskInput, setBulkTaskInput] = useState('');\n\n  // Add deduplication for employees\n  const uniqueEmployees = [...new Map(employees.map(emp => \n    [emp.id, emp]\n  )).values()];\n\n  useEffect(() => {\n    fetchData();\n  }, [refreshTrigger]);\n\n  useEffect(() => {\n    const seen = new Set();\n    const filtered = tasks.filter(task => {\n      const duplicate = seen.has(task.taskName);\n      seen.add(task.taskName);\n      return !duplicate;\n    });\n    setUniqueTasks(filtered);\n  }, [tasks]);\n\n  const fetchData = async () => {\n    try {\n      const [tasksResponse, employeesResponse] = await Promise.all([\n        axios.get('http://localhost:5000/api/tasks', { withCredentials: true }),\n        axios.get('http://localhost:5000/api/employees', { \n          withCredentials: true,\n          validateStatus: (status) => status === 200 || status === 403 \n        })\n      ]);\n      \n      // Process tasks\n      const tasksWithIds = tasksResponse.data.map((task, index) => ({\n        ...task,\n        id: task.id || `task-${Date.now()}-${index}`,\n        taskName: task.name\n      }));\n\n      // Only process employees if the request was successful\n      if (employeesResponse.status === 200) {\n        // Process data but don't set state - it comes from props\n        const processedEmployees = employeesResponse.data;\n        console.log('Fetched employees:', processedEmployees);\n      } else {\n        console.warn('No permission to fetch employees');\n        // Optionally, show a user-friendly notification\n        alert('You do not have permission to view employee details.');\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      // Handle network errors or other issues\n      alert('An error occurred while fetching data. Please try again later.');\n    }\n  };\n\n  const getStatusClass = (status) => {\n    switch (status?.toLowerCase()) {\n      case 'completed':\n        return 'bg-green-100 text-green-800';\n      case 'in progress':\n        return 'bg-blue-100 text-blue-800';\n      case 'pending':\n        return 'bg-yellow-100 text-yellow-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const filterTasks = (tasks) => {\n    return tasks.filter(task => {\n      if (filters.status !== 'all' && task.status !== filters.status) return false;\n      if (filters.employee !== 'all' && task.employee !== filters.employee) return false;\n      if (filters.department !== 'all' && task.department !== filters.department) return false;\n      return true;\n    });\n  };\n\n  const groupTasks = (tasks) => {\n    if (groupBy === 'none') return { 'All Tasks': tasks };\n    \n    return tasks.reduce((groups, task) => {\n      const key = task[groupBy] || 'Unassigned';\n      if (!groups[key]) {\n        groups[key] = [];\n      }\n      groups[key].push(task);\n      return groups;\n    }, {});\n  };\n\n  const getUniqueDepartments = () => {\n    return [...new Set(employees.map(emp => emp.department))];\n  };\n\n  const filteredTasks = filterTasks(tasks);\n  const groupedTasks = groupTasks(filteredTasks);\n\n  const handleCheckTask = (taskId) => {\n    setCheckedTasks(prev => {\n      const newChecked = new Set(prev);\n      if (newChecked.has(taskId)) {\n        newChecked.delete(taskId);\n      } else {\n        newChecked.add(taskId);\n      }\n      return newChecked;\n    });\n  };\n\n  const handleSendNotifications = async () => {\n    if (checkedTasks.size === 0) {\n      alert('Please select at least one task to send notifications');\n      return;\n    }\n\n    if (!notificationText.trim()) {\n      alert('Please enter notification text');\n      return;\n    }\n\n    try {\n      // Check authentication status first\n      const authResponse = await axios.get('http://localhost:5000/auth/status', { \n        withCredentials: true \n      });\n\n      if (!authResponse.data.authenticated) {\n        alert('Please log in to send notifications');\n        return;\n      }\n\n      // Get selected tasks with their employee emails\n      const selectedTasks = tasks.filter(task => checkedTasks.has(task.id));\n      const notifications = selectedTasks.map(task => {\n        const employeeEmail = employees.find(emp => emp.name === task.employee)?.email;\n        if (!employeeEmail) {\n          throw new Error(`No email found for employee: ${task.employee}`);\n        }\n        return {\n          taskId: task.id,\n          taskName: task.name,\n          employeeName: task.employee,\n          email: employeeEmail,\n          message: notificationText\n        };\n      });\n\n      console.log('Preparing to send notifications:', notifications);\n\n      // Send notifications to the backend with credentials\n      const response = await axios.post(\n        'http://localhost:5000/api/notifications/send', \n        { notifications },\n        { \n          withCredentials: true,  // Include cookies for authentication\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n\n      console.log('Notifications sent:', response.data);\n      \n      // Check response structure and handle accordingly\n      const successCount = response.data.results?.filter(r => r.success).length || 0;\n      const failedCount = response.data.results?.filter(r => !r.success).length || 0;\n\n      if (successCount > 0) {\n        const successEmails = response.data.results\n          .filter(r => r.success)\n          .map(r => r.email);\n        \n        alert(`Notifications sent successfully:\\n\\n${successEmails.join('\\n')}`);\n        \n        // Clear selections and text\n        setCheckedTasks(new Set());\n        setNotificationText('');\n      } else {\n        alert('No notifications were sent. Please check your selection and try again.');\n      }\n\n      // Log any failed notifications\n      if (failedCount > 0) {\n        const failedNotifications = response.data.results\n          .filter(r => !r.success)\n          .map(r => `${r.email}: ${r.error}`);\n        \n        console.warn('Failed notifications:', failedNotifications);\n      }\n    } catch (error) {\n      console.error('Error sending notifications:', error);\n      \n      // More detailed error handling\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        const errorMessage = error.response.data?.error || \n                             error.response.data?.message || \n                             'Unknown server error';\n        \n        alert(`Failed to send notifications: ${errorMessage}`);\n      } else if (error.request) {\n        // The request was made but no response was received\n        alert('No response received from the server. Please check your network connection.');\n      } else {\n        // Something happened in setting up the request\n        alert(`Error: ${error.message}`);\n      }\n    }\n  };\n\n  const handleBulkDataSubmission = async () => {\n    try {\n      console.log('=== BULK DATA SUBMISSION STARTED ===');\n      \n      // Process employee-department updates first\n      if (parsedEmployeeDepartment.length > 0) {\n        try {\n          // Create valid pairs with proper scoping and normalization\n          const validPairs = parsedEmployeeDepartment.map(pair => ({\n            employee: pair.employee?.trim() || '',\n            department: pair.department?.trim() || '',\n            email: pair.email?.trim().toLowerCase()\n          })).filter(pair => pair.employee && pair.department && pair.email);\n\n          console.log('Sending employee updates:', validPairs);\n          \n          // Send updates using PUT request\n          const employeeResponse = await axios.put(\n            'http://localhost:5000/api/employee-departments',\n            { updates: validPairs },\n            { \n              headers: { 'Content-Type': 'application/json' },\n              withCredentials: true\n            }\n          );\n\n          if (employeeResponse.status === 200) {\n            console.log('Successfully updated employee-departments');\n            console.log('Updated entries:', employeeResponse.data.updatedEntries);\n            \n            // Refresh employee data after update\n            await fetchData();\n            \n            // Show success message with details\n            if (employeeResponse.data.updatedCount > 0) {\n              alert(`Updated ${employeeResponse.data.updatedCount} employee entries`);\n            }\n          }\n\n        } catch (error) {\n          console.error('Update error:', error);\n          alert(error.response?.data?.error || 'Update failed');\n          return;\n        }\n      }\n      // ... rest of the method remains the same\n    } catch (error) {\n      // Error handling\n      alert(error.message || 'Failed to submit bulk tasks');\n      console.error('Bulk task submission error:', error);\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto p-4 bg-[#f5f5f5]\">\n      {/* Filters */}\n      <div className=\"max-w-7xl mx-auto mb-6 bg-white rounded p-6\">\n        <h2 className=\"text-xl font-semibold mb-6 text-center\">Filters</h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          <div>\n            <label className=\"block text-gray-700 text-sm font-medium mb-2\">\n              Status\n            </label>\n            <select\n              value={filters.status}\n              onChange={(e) => setFilters({ ...filters, status: e.target.value })}\n              className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\"\n            >\n              <option value=\"all\">All Statuses</option>\n              <option value=\"pending\">Pending</option>\n              <option value=\"in progress\">In Progress</option>\n              <option value=\"completed\">Completed</option>\n            </select>\n          </div>\n\n          <div>\n            <label className=\"block text-gray-700 text-sm font-medium mb-2\">\n              Employee\n            </label>\n            <select\n              value={filters.employee}\n              onChange={(e) => setFilters({ ...filters, employee: e.target.value })}\n              className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\"\n            >\n              <option value=\"all\">All Employees</option>\n              {uniqueEmployees.map((employee) => (\n                <option \n                  key={`employee-${employee.id}`}\n                  value={employee.name}\n                >\n                  {employee.name}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <label className=\"block text-gray-700 text-sm font-medium mb-2\">\n              Department\n            </label>\n            <select\n              value={filters.department}\n              onChange={(e) => setFilters({ ...filters, department: e.target.value })}\n              className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\"\n            >\n              <option value=\"all\">All Departments</option>\n              {getUniqueDepartments().map(dept => (\n                <option key={dept} value={dept}>{dept}</option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <label className=\"block text-gray-700 text-sm font-medium mb-2\">\n              Group By\n            </label>\n            <select\n              value={groupBy}\n              onChange={(e) => setGroupBy(e.target.value)}\n              className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\"\n            >\n              <option value=\"none\">No Grouping</option>\n              <option value=\"employee\">Employee</option>\n              <option value=\"department\">Department</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {/* Notification Section */}\n      <div className=\"max-w-7xl mx-auto mb-6 bg-white rounded p-6\">\n        <div className=\"flex space-x-4 items-end\">\n          <div className=\"flex-grow\">\n            <label className=\"block text-gray-700 text-sm font-medium mb-2\">\n              Notification Text\n            </label>\n            <textarea\n              value={notificationText}\n              onChange={(e) => setNotificationText(e.target.value)}\n              className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\"\n              rows=\"2\"\n              placeholder=\"Enter notification text to send to selected employees\"\n            />\n          </div>\n          <button\n            onClick={handleSendNotifications}\n            className=\"w-48 bg-black hover:bg-gray-800 text-white font-medium py-2 px-6 rounded\"\n            disabled={checkedTasks.size === 0 || !notificationText.trim()}\n          >\n            Send Notifications\n          </button>\n        </div>\n      </div>\n\n      {/* Tasks Table */}\n      {Object.entries(groupedTasks).map(([group, tasks]) => (\n        <div key={`group-${group}`} className=\"max-w-7xl mx-auto mb-6 bg-white rounded p-6\">\n          <div className=\"mb-4 border-b pb-4\">\n            <h3 className=\"text-lg font-semibold\">{group}</h3>\n          </div>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Select\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Task\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Employee\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Department\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Due Date\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Actual end Date\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Status\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {tasks.map((task, index) => {\n                  const taskId = task.id || `task-${Date.now()}-${index}`;\n                  return (\n                    <tr \n                      key={`task-${taskId}`}\n                      className=\"hover:bg-gray-50\"\n                    >\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <input\n                          type=\"checkbox\"\n                          checked={checkedTasks.has(taskId)}\n                          onChange={() => handleCheckTask(taskId)}\n                          className=\"h-4 w-4 text-black focus:ring-black border-gray-300 rounded\"\n                        />\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        {task.name}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        {task.employee}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        {task.department}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        {task.date}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        {task.endDate}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusClass(task.status)}`}>\n                          {task.status || 'Pending'}\n                        </span>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default TaskList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\belya\\\\Cursor projects\\\\Budget tracker\\\\client\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-hot-toast';\nimport { ROLES } from '../config/roles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  allowedRoles = ['admin', 'manager', 'employee']\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    userRole\n  } = useSelector(state => state.auth);\n  useEffect(() => {\n    console.log('ProtectedRoute - Authentication Details:', {\n      isAuthenticated,\n      userRole: typeof userRole === 'object' ? JSON.stringify(userRole) : userRole,\n      allowedRoles\n    });\n  }, [isAuthenticated, userRole, allowedRoles]);\n\n  // Not authenticated\n  if (!isAuthenticated) {\n    toast.error('Please log in to access this page', {\n      position: 'top-center',\n      duration: 3000\n    });\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Robust role handling\n  const currentUserRole = typeof userRole === 'object' ? userRole.role || userRole.name || 'guest' : userRole || 'guest';\n  console.log('ProtectedRoute - Processed Role:', currentUserRole);\n\n  // Admin gets full access\n  if (currentUserRole === ROLES.ADMIN) {\n    return children;\n  }\n\n  // Role-based access control\n  const hasRequiredRole = allowedRoles.includes(currentUserRole.toLowerCase());\n  if (!hasRequiredRole) {\n    toast.error('You do not have permission to access this page', {\n      position: 'top-center',\n      duration: 3000\n    });\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/unauthorized\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(ProtectedRoute, \"gwskufduhW2kzkaahcaT6YXHwEk=\", false, function () {\n  return [useSelector];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useEffect","Navigate","useSelector","toast","ROLES","jsxDEV","_jsxDEV","ProtectedRoute","children","allowedRoles","_s","isAuthenticated","userRole","state","auth","console","log","JSON","stringify","error","position","duration","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","currentUserRole","role","name","ADMIN","hasRequiredRole","includes","toLowerCase","_c","$RefreshReg$"],"sources":["C:/Users/belya/Cursor projects/Budget tracker/client/src/components/ProtectedRoute.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-hot-toast';\nimport { ROLES } from '../config/roles';\n\nconst ProtectedRoute = ({ children, allowedRoles = ['admin', 'manager', 'employee'] }) => {\n  const { isAuthenticated, userRole } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    console.log('ProtectedRoute - Authentication Details:', {\n      isAuthenticated,\n      userRole: typeof userRole === 'object' ? JSON.stringify(userRole) : userRole,\n      allowedRoles\n    });\n  }, [isAuthenticated, userRole, allowedRoles]);\n\n  // Not authenticated\n  if (!isAuthenticated) {\n    toast.error('Please log in to access this page', {\n      position: 'top-center',\n      duration: 3000\n    });\n    return <Navigate to=\"/login\" replace />;\n  }\n\n  // Robust role handling\n  const currentUserRole = typeof userRole === 'object' \n    ? (userRole.role || userRole.name || 'guest') \n    : userRole || 'guest';\n\n  console.log('ProtectedRoute - Processed Role:', currentUserRole);\n\n  // Admin gets full access\n  if (currentUserRole === ROLES.ADMIN) {\n    return children;\n  }\n\n  // Role-based access control\n  const hasRequiredRole = allowedRoles.includes(currentUserRole.toLowerCase());\n  \n  if (!hasRequiredRole) {\n    toast.error('You do not have permission to access this page', {\n      position: 'top-center',\n      duration: 3000\n    });\n    return <Navigate to=\"/unauthorized\" replace />;\n  }\n\n  return children;\n};\n\nexport default ProtectedRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SAASC,KAAK,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,YAAY,GAAG,CAAC,OAAO,EAAE,SAAS,EAAE,UAAU;AAAE,CAAC,KAAK;EAAAC,EAAA;EACxF,MAAM;IAAEC,eAAe;IAAEC;EAAS,CAAC,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EAExEd,SAAS,CAAC,MAAM;IACde,OAAO,CAACC,GAAG,CAAC,0CAA0C,EAAE;MACtDL,eAAe;MACfC,QAAQ,EAAE,OAAOA,QAAQ,KAAK,QAAQ,GAAGK,IAAI,CAACC,SAAS,CAACN,QAAQ,CAAC,GAAGA,QAAQ;MAC5EH;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACE,eAAe,EAAEC,QAAQ,EAAEH,YAAY,CAAC,CAAC;;EAE7C;EACA,IAAI,CAACE,eAAe,EAAE;IACpBR,KAAK,CAACgB,KAAK,CAAC,mCAAmC,EAAE;MAC/CC,QAAQ,EAAE,YAAY;MACtBC,QAAQ,EAAE;IACZ,CAAC,CAAC;IACF,oBAAOf,OAAA,CAACL,QAAQ;MAACqB,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA,MAAMC,eAAe,GAAG,OAAOhB,QAAQ,KAAK,QAAQ,GAC/CA,QAAQ,CAACiB,IAAI,IAAIjB,QAAQ,CAACkB,IAAI,IAAI,OAAO,GAC1ClB,QAAQ,IAAI,OAAO;EAEvBG,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEY,eAAe,CAAC;;EAEhE;EACA,IAAIA,eAAe,KAAKxB,KAAK,CAAC2B,KAAK,EAAE;IACnC,OAAOvB,QAAQ;EACjB;;EAEA;EACA,MAAMwB,eAAe,GAAGvB,YAAY,CAACwB,QAAQ,CAACL,eAAe,CAACM,WAAW,CAAC,CAAC,CAAC;EAE5E,IAAI,CAACF,eAAe,EAAE;IACpB7B,KAAK,CAACgB,KAAK,CAAC,gDAAgD,EAAE;MAC5DC,QAAQ,EAAE,YAAY;MACtBC,QAAQ,EAAE;IACZ,CAAC,CAAC;IACF,oBAAOf,OAAA,CAACL,QAAQ;MAACqB,EAAE,EAAC,eAAe;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAChD;EAEA,OAAOnB,QAAQ;AACjB,CAAC;AAACE,EAAA,CA5CIH,cAAc;EAAA,QACoBL,WAAW;AAAA;AAAAiC,EAAA,GAD7C5B,cAAc;AA8CpB,eAAeA,cAAc;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
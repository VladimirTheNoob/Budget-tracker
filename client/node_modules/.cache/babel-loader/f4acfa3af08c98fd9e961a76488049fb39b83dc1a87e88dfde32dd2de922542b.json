{"ast":null,"code":"import _objectSpread from\"C:/Users/belya/Cursor projects/Budget tracker/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback,useMemo}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TaskInput=props=>{var _employees$find,_parsedEmployeeDepart,_employees$find2;// State to manage form inputs\nconst[task,setTask]=useState({taskName:'',employee:'',mail:'',date:'',comments:''});// State for bulk tasks\nconst[bulkTasks,setBulkTasks]=useState('');const[parsedTasks,setParsedTasks]=useState([]);// State for employee-department input\nconst[bulkEmployeeDepartment,setBulkEmployeeDepartment]=useState('');const[parsedEmployeeDepartment,setParsedEmployeeDepartment]=useState([]);// Destructure props with default values\nconst{tasks=[],employees=[],setTasks,setEmployees,onDataSaved=()=>{}}=props;// Memoized unique employees to prevent unnecessary re-renders\nconst uniqueEmployees=useMemo(()=>[...new Map(employees.map(emp=>[emp.id,emp])).values()],[employees]);// Memoized data fetching function\nconst fetchData=useCallback(async()=>{try{const[tasksResponse,employeesResponse,employeeDepartmentsResponse]=await Promise.all([axios.get('http://localhost:5000/api/tasks',{withCredentials:true}),axios.get('http://localhost:5000/api/employees',{withCredentials:true}),axios.get('http://localhost:5000/api/employee-departments',{withCredentials:true})]);// Process tasks\nif(Array.isArray(tasksResponse.data)){const tasksWithIds=tasksResponse.data.map((task,index)=>_objectSpread(_objectSpread({},task),{},{id:task.id||\"task-\".concat(Date.now(),\"-\").concat(Math.random().toString(36).substr(2,9)),taskName:task.name}));setTasks(tasksWithIds);}// Process employees\nif(Array.isArray(employeesResponse.data)){setEmployees(employeesResponse.data);}// Process employee departments\nif(Array.isArray(employeeDepartmentsResponse.data)){setParsedEmployeeDepartment(employeeDepartmentsResponse.data);}else{setParsedEmployeeDepartment([]);}}catch(error){console.error('Error fetching data:',error);alert('Failed to fetch data. Please try again.');}},[setTasks,setEmployees]);// Fetch data on component mount\nuseEffect(()=>{fetchData();},[fetchData]);// Memoized handlers to prevent unnecessary re-renders\nconst handleBulkTasksChange=useCallback(e=>{const value=e.target.value;setBulkTasks(value);const tasks=value.split('\\n').filter(task=>task.trim()!=='');setParsedTasks(tasks);},[]);const handleBulkEmployeeDepartmentChange=useCallback(e=>{const value=e.target.value;setBulkEmployeeDepartment(value);const pairs=value.split('\\n').filter(pair=>pair.trim()!=='').map(pair=>{const[employee,department,email]=pair.split(';').map(item=>item.trim());return{employee,department,email};}).filter(pair=>pair.employee&&pair.department&&pair.email);setParsedEmployeeDepartment(pairs);},[]);const handleTaskSelection=useCallback(e=>{const{value}=e.target;setTask(prev=>_objectSpread(_objectSpread({},prev),{},{taskName:value}));},[]);const handleChange=useCallback(e=>{const{name,value}=e.target;if(name==='taskName'){setTask(prev=>_objectSpread(_objectSpread({},prev),{},{taskName:value}));}else if(name==='employee'){const selectedEmployee=employees.find(emp=>emp.name===value);setTask(prev=>_objectSpread(_objectSpread({},prev),{},{employee:value,department:(selectedEmployee===null||selectedEmployee===void 0?void 0:selectedEmployee.department)||'',mail:(selectedEmployee===null||selectedEmployee===void 0?void 0:selectedEmployee.email)||''}));}else{setTask(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));}},[employees]);const handleBulkDataSubmission=useCallback(async()=>{try{// Check for duplicates in bulk tasks\nif(bulkTasks.length>0){const tasks=bulkTasks.split('\\n').map(task=>task.trim()).filter(task=>task!=='');// Check for duplicates within the input\nconst uniqueTasks=new Set(tasks);if(uniqueTasks.size!==tasks.length){const duplicates=tasks.filter((task,index)=>tasks.indexOf(task)!==index);alert(\"Duplicate tasks found in input: \".concat([...new Set(duplicates)].join(', ')));return;}// Validate task names\nconst invalidTasks=tasks.filter(taskText=>!/^(?:[\\x2D0-9A-Z_a-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C8A\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CD\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7DC\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDDC0-\\uDDF3\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD23\\uDD4A-\\uDD65\\uDD6F-\\uDD85\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDEC2-\\uDEC4\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45\\uDF70-\\uDF81\\uDFB0-\\uDFC4\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC71\\uDC72\\uDC75\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE3F\\uDE40\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61\\uDF80-\\uDF89\\uDF8B\\uDF8E\\uDF90-\\uDFB5\\uDFB7\\uDFD1\\uDFD3]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDEB8\\uDF00-\\uDF1A\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCDF\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEB0-\\uDEF8\\uDFC0-\\uDFE0]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDEE0-\\uDEF2\\uDF02\\uDF04-\\uDF10\\uDF12-\\uDF33\\uDFB0]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD80E\\uD80F\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883\\uD885-\\uD887][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2F\\uDC41-\\uDC46\\uDC60-\\uDFFF]|\\uD810[\\uDC00-\\uDFFA]|\\uD811[\\uDC00-\\uDE46]|\\uD818[\\uDD00-\\uDD1D]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE70-\\uDEBE\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDD40-\\uDD6C\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDCFF-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD32\\uDD50-\\uDD52\\uDD55\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD837[\\uDF00-\\uDF1E\\uDF25-\\uDF2A]|\\uD838[\\uDC30-\\uDC6D\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB]|\\uD839[\\uDCD0-\\uDCEB\\uDDD0-\\uDDED\\uDDF0\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43\\uDD4B]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF39\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0\\uDFF0-\\uDFFF]|\\uD87B[\\uDC00-\\uDE5D]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A\\uDF50-\\uDFFF]|\\uD888[\\uDC00-\\uDFAF])+$/.test(taskText));if(invalidTasks.length>0){alert(\"Invalid task names: \".concat(invalidTasks.join(', '),\". Tasks must be single words without spaces/special chars.\"));return;}// Fetch existing tasks to check for server-side duplicates\nconst existingTasksResponse=await axios.get('http://localhost:5000/api/tasks',{withCredentials:true});const existingTaskNames=new Set(existingTasksResponse.data.map(task=>task.name.toLowerCase()));const duplicatesInServer=tasks.filter(task=>existingTaskNames.has(task.toLowerCase()));if(duplicatesInServer.length>0){alert(\"Tasks already exist: \".concat(duplicatesInServer.join(', ')));return;}const taskUpdates=tasks.map(taskText=>({name:taskText,employee:'',date:new Date().toISOString().split('T')[0],comments:'',status:'pending',department:'',email:''}));const response=await axios.post('http://localhost:5000/api/tasks/bulk',{tasks:taskUpdates},{withCredentials:true,validateStatus:status=>status===200||status===201});// Handle response with user-friendly messages\nif(response.status===201){const{addedCount,duplicates}=response.data;alert(duplicates>0?\"Added \".concat(addedCount,\" tasks. \").concat(duplicates,\" duplicates skipped.\"):\"Successfully added \".concat(addedCount,\" tasks\"));}}// Employee Department Updates\nif(parsedEmployeeDepartment.length>0){const validPairs=parsedEmployeeDepartment.map(pair=>{var _pair$employee,_pair$department,_pair$email;return{employee:((_pair$employee=pair.employee)===null||_pair$employee===void 0?void 0:_pair$employee.trim())||'',department:((_pair$department=pair.department)===null||_pair$department===void 0?void 0:_pair$department.trim())||'',email:(_pair$email=pair.email)===null||_pair$email===void 0?void 0:_pair$email.trim().toLowerCase()};}).filter(pair=>pair.employee&&pair.department&&pair.email);if(validPairs.length>0){await axios.put('http://localhost:5000/api/employee-departments',{updates:validPairs},{headers:{'Content-Type':'application/json'}});}}// Reset form state\nsetBulkTasks('');setBulkEmployeeDepartment('');setParsedTasks([]);setParsedEmployeeDepartment([]);// Trigger data refresh\nfetchData();onDataSaved();}catch(error){console.error('Bulk submission error:',error);alert(error.message||'Bulk submission failed');}},[bulkTasks,parsedEmployeeDepartment,fetchData,onDataSaved]);// Handle delete all data\nconst handleDeleteAllData=async()=>{try{const response=await axios.delete('http://localhost:5000/api/tasks/all');if(response.status===200){alert('All data has been successfully deleted');// Reset any local state if needed\nsetParsedTasks([]);setParsedEmployeeDepartment([]);setBulkTasks('');setBulkEmployeeDepartment('');setTask({taskName:'',employee:'',department:'',mail:'',date:'',comments:''});// Refresh the page\nwindow.location.reload();}}catch(error){console.error('Error deleting data:',error);alert('Failed to delete data. Please try again.');}};// Handle form submission\nconst handleSubmit=async e=>{e.preventDefault();try{const taskData={name:task.taskName,employee:task.employee,date:task.date,comments:task.comments,status:task.status,department:task.department,email:task.mail,id:task.id};console.log('Submitting task:',taskData);const response=await axios.put(\"http://localhost:5000/api/tasks/\".concat(task.id),taskData,{withCredentials:true,// Ensure credentials are sent\nheaders:{'Content-Type':'application/json'}});console.log('Task saved successfully:',response.data);// Update tasks in parent component\nconst updatedTask=response.data.task;const updatedTasks=tasks.map(task=>task.id===updatedTask.id?updatedTask:task);setTasks(updatedTasks);// Reset form\nsetTask({taskName:'',employee:'',department:'',mail:'',date:'',comments:''});onDataSaved();}catch(error){var _error$response,_error$response$data;console.error('Error saving task:',error);alert(\"Error saving task: \".concat(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||error.message));}};const handleCheckTask=taskId=>{const newChecked=new Set(checkedTasks);if(newChecked.has(taskId)){newChecked.delete(taskId);}else{newChecked.add(taskId);}setCheckedTasks(newChecked);};return/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto p-4 bg-[#f5f5f5]\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-7xl mx-auto mb-6 bg-white rounded p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-6 text-center\",children:\"Bulk Data Input\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"w-1/2\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"bulkTasks\",className:\"block text-gray-700 text-sm font-medium mb-2\",children:\"Bulk Tasks Input (one task per line)\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"bulkTasks\",value:bulkTasks,onChange:handleBulkTasksChange,className:\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\",rows:\"4\",placeholder:\"Enter multiple tasks, one per line\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500 mt-1\",children:[parsedTasks.length,\" tasks ready to be saved\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"w-1/2\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"bulkEmployeeDepartment\",className:\"block text-gray-700 text-sm font-medium mb-2\",children:\"Employee-Department-Mail Input (format: employee;department;email)\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"bulkEmployeeDepartment\",value:bulkEmployeeDepartment,onChange:handleBulkEmployeeDepartmentChange,className:\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\",rows:\"4\",placeholder:\"Enter employee, department and email, one per line (e.g., John Doe;Sales;john.doe@example.com)\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500 mt-1\",children:[parsedEmployeeDepartment.length,\" employee-department-mail entries ready to be saved\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-center space-x-4 mt-6\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleBulkDataSubmission,className:\"w-48 bg-black hover:bg-gray-800 text-white font-medium py-2 px-6 rounded\",disabled:bulkTasks.length===0&&parsedEmployeeDepartment.length===0,children:\"Save Bulk Data\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleDeleteAllData,className:\"w-48 bg-[#ff4d4f] hover:bg-[#ff7875] text-white font-medium py-2 px-6 rounded\",children:\"Delete All Items\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-2xl mx-auto bg-white rounded p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-6 text-center\",children:\"Create Task\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"taskName\",className:\"block text-gray-700 text-sm font-medium mb-2\",children:\"Select Task\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"taskName\",name:\"taskName\",value:task.taskName,onChange:handleChange,className:\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\",required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a task\"}),tasks.map((taskItem,index)=>/*#__PURE__*/_jsx(\"option\",{value:taskItem.name,children:taskItem.name},taskItem.id||\"new-task-\".concat(index,\"-\").concat(taskItem.name)))]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"employee\",className:\"block text-gray-700 text-sm font-medium mb-2\",children:\"Select Employee\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"employee\",name:\"employee\",value:task.employee,onChange:handleChange,className:\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\",required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select an employee\"}),uniqueEmployees.map(employee=>/*#__PURE__*/_jsx(\"option\",{value:employee.name,children:employee.name},\"employee-\".concat(employee.id)))]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"department\",className:\"block text-gray-700 text-sm font-medium mb-2\",children:\"Department\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"department\",name:\"department\",value:((_employees$find=employees.find(emp=>emp.name===task.employee))===null||_employees$find===void 0?void 0:_employees$find.department)||'',readOnly:true,className:\"w-full border border-gray-300 rounded p-2 bg-gray-50\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"mail\",className:\"block text-gray-700 text-sm font-medium mb-2\",children:\"Mail\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"mail\",name:\"mail\",value:((_parsedEmployeeDepart=parsedEmployeeDepartment.find(emp=>emp.employee===task.employee))===null||_parsedEmployeeDepart===void 0?void 0:_parsedEmployeeDepart.email)||((_employees$find2=employees.find(emp=>emp.name===task.employee))===null||_employees$find2===void 0?void 0:_employees$find2.email)||'',readOnly:true,className:\"w-full border border-gray-300 rounded p-2 bg-gray-50\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"date\",className:\"block text-gray-700 text-sm font-medium mb-2\",children:\"Due Date\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",id:\"date\",name:\"date\",value:task.date,onChange:handleChange,className:\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"comments\",className:\"block text-gray-700 text-sm font-medium mb-2\",children:\"Comments\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"comments\",name:\"comments\",value:task.comments,onChange:handleChange,className:\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\",placeholder:\"Enter any additional comments\",rows:\"4\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center pt-4\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"w-48 bg-black hover:bg-gray-800 text-white font-medium py-2 px-6 rounded\",children:\"Update Task\"})})]})]})]});};export default/*#__PURE__*/React.memo(TaskInput);","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","axios","jsx","_jsx","jsxs","_jsxs","TaskInput","props","_employees$find","_parsedEmployeeDepart","_employees$find2","task","setTask","taskName","employee","mail","date","comments","bulkTasks","setBulkTasks","parsedTasks","setParsedTasks","bulkEmployeeDepartment","setBulkEmployeeDepartment","parsedEmployeeDepartment","setParsedEmployeeDepartment","tasks","employees","setTasks","setEmployees","onDataSaved","uniqueEmployees","Map","map","emp","id","values","fetchData","tasksResponse","employeesResponse","employeeDepartmentsResponse","Promise","all","get","withCredentials","Array","isArray","data","tasksWithIds","index","_objectSpread","concat","Date","now","Math","random","toString","substr","name","error","console","alert","handleBulkTasksChange","e","value","target","split","filter","trim","handleBulkEmployeeDepartmentChange","pairs","pair","department","email","item","handleTaskSelection","prev","handleChange","selectedEmployee","find","handleBulkDataSubmission","length","uniqueTasks","Set","size","duplicates","indexOf","join","invalidTasks","taskText","test","existingTasksResponse","existingTaskNames","toLowerCase","duplicatesInServer","has","taskUpdates","toISOString","status","response","post","validateStatus","addedCount","validPairs","_pair$employee","_pair$department","_pair$email","put","updates","headers","message","handleDeleteAllData","delete","window","location","reload","handleSubmit","preventDefault","taskData","log","updatedTask","updatedTasks","_error$response","_error$response$data","handleCheckTask","taskId","newChecked","checkedTasks","add","setCheckedTasks","className","children","htmlFor","onChange","rows","placeholder","type","onClick","disabled","onSubmit","required","taskItem","readOnly","memo"],"sources":["C:/Users/belya/Cursor projects/Budget tracker/client/src/components/TaskInput.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport axios from 'axios';\n\nconst TaskInput = (props) => {\n  // State to manage form inputs\n  const [task, setTask] = useState({\n    taskName: '',\n    employee: '',\n    mail: '', \n    date: '',\n    comments: ''\n  });\n\n  // State for bulk tasks\n  const [bulkTasks, setBulkTasks] = useState('');\n  const [parsedTasks, setParsedTasks] = useState([]);\n\n  // State for employee-department input\n  const [bulkEmployeeDepartment, setBulkEmployeeDepartment] = useState('');\n  const [parsedEmployeeDepartment, setParsedEmployeeDepartment] = useState([]);\n\n  // Destructure props with default values\n  const { \n    tasks = [], \n    employees = [], \n    setTasks, \n    setEmployees, \n    onDataSaved = () => {} \n  } = props;\n\n  // Memoized unique employees to prevent unnecessary re-renders\n  const uniqueEmployees = useMemo(() => \n    [...new Map(employees.map(emp => [emp.id, emp])).values()], \n    [employees]\n  );\n\n  // Memoized data fetching function\n  const fetchData = useCallback(async () => {\n    try {\n      const [tasksResponse, employeesResponse, employeeDepartmentsResponse] = await Promise.all([\n        axios.get('http://localhost:5000/api/tasks', { withCredentials: true }),\n        axios.get('http://localhost:5000/api/employees', { withCredentials: true }),\n        axios.get('http://localhost:5000/api/employee-departments', { withCredentials: true })\n      ]);\n\n      // Process tasks\n      if (Array.isArray(tasksResponse.data)) {\n        const tasksWithIds = tasksResponse.data.map((task, index) => ({\n          ...task,\n          id: task.id || `task-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n          taskName: task.name\n        }));\n        setTasks(tasksWithIds);\n      }\n\n      // Process employees\n      if (Array.isArray(employeesResponse.data)) {\n        setEmployees(employeesResponse.data);\n      }\n\n      // Process employee departments\n      if (Array.isArray(employeeDepartmentsResponse.data)) {\n        setParsedEmployeeDepartment(employeeDepartmentsResponse.data);\n      } else {\n        setParsedEmployeeDepartment([]);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      alert('Failed to fetch data. Please try again.');\n    }\n  }, [setTasks, setEmployees]);\n\n  // Fetch data on component mount\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  // Memoized handlers to prevent unnecessary re-renders\n  const handleBulkTasksChange = useCallback((e) => {\n    const value = e.target.value;\n    setBulkTasks(value);\n    const tasks = value.split('\\n').filter(task => task.trim() !== '');\n    setParsedTasks(tasks);\n  }, []);\n\n  const handleBulkEmployeeDepartmentChange = useCallback((e) => {\n    const value = e.target.value;\n    setBulkEmployeeDepartment(value);\n    const pairs = value.split('\\n')\n      .filter(pair => pair.trim() !== '')\n      .map(pair => {\n        const [employee, department, email] = pair.split(';').map(item => item.trim());\n        return { employee, department, email };\n      })\n      .filter(pair => pair.employee && pair.department && pair.email);\n    setParsedEmployeeDepartment(pairs);\n  }, []);\n\n  const handleTaskSelection = useCallback((e) => {\n    const { value } = e.target;\n    setTask(prev => ({\n      ...prev,\n      taskName: value\n    }));\n  }, []);\n\n  const handleChange = useCallback((e) => {\n    const { name, value } = e.target;\n    \n    if (name === 'taskName') {\n      setTask(prev => ({ ...prev, taskName: value }));\n    } else if (name === 'employee') {\n      const selectedEmployee = employees.find(emp => emp.name === value);\n      setTask(prev => ({\n        ...prev,\n        employee: value,\n        department: selectedEmployee?.department || '',\n        mail: selectedEmployee?.email || ''\n      }));\n    } else {\n      setTask(prev => ({ ...prev, [name]: value }));\n    }\n  }, [employees]);\n\n  const handleBulkDataSubmission = useCallback(async () => {\n    try {\n      // Check for duplicates in bulk tasks\n      if (bulkTasks.length > 0) {\n        const tasks = bulkTasks.split('\\n').map(task => task.trim()).filter(task => task !== '');\n        \n        // Check for duplicates within the input\n        const uniqueTasks = new Set(tasks);\n        if (uniqueTasks.size !== tasks.length) {\n          const duplicates = tasks.filter((task, index) => \n            tasks.indexOf(task) !== index\n          );\n          alert(`Duplicate tasks found in input: ${[...new Set(duplicates)].join(', ')}`);\n          return;\n        }\n\n        // Validate task names\n        const invalidTasks = tasks.filter(taskText => \n          !/^[\\p{L}\\d_-]+$/u.test(taskText)\n        );\n\n        if (invalidTasks.length > 0) {\n          alert(`Invalid task names: ${invalidTasks.join(', ')}. Tasks must be single words without spaces/special chars.`);\n          return;\n        }\n\n        // Fetch existing tasks to check for server-side duplicates\n        const existingTasksResponse = await axios.get('http://localhost:5000/api/tasks', { withCredentials: true });\n        const existingTaskNames = new Set(\n          existingTasksResponse.data.map(task => task.name.toLowerCase())\n        );\n\n        const duplicatesInServer = tasks.filter(task => \n          existingTaskNames.has(task.toLowerCase())\n        );\n\n        if (duplicatesInServer.length > 0) {\n          alert(`Tasks already exist: ${duplicatesInServer.join(', ')}`);\n          return;\n        }\n\n        const taskUpdates = tasks.map(taskText => ({\n          name: taskText,\n          employee: '',\n          date: new Date().toISOString().split('T')[0],\n          comments: '',\n          status: 'pending',\n          department: '',\n          email: ''\n        }));\n\n        const response = await axios.post(\n          'http://localhost:5000/api/tasks/bulk',\n          { tasks: taskUpdates },\n          {\n            withCredentials: true,\n            validateStatus: (status) => status === 200 || status === 201\n          }\n        );\n\n        // Handle response with user-friendly messages\n        if (response.status === 201) {\n          const { addedCount, duplicates } = response.data;\n          alert(duplicates > 0 \n            ? `Added ${addedCount} tasks. ${duplicates} duplicates skipped.`\n            : `Successfully added ${addedCount} tasks`\n          );\n        }\n      }\n\n      // Employee Department Updates\n      if (parsedEmployeeDepartment.length > 0) {\n        const validPairs = parsedEmployeeDepartment\n          .map(pair => ({\n            employee: pair.employee?.trim() || '',\n            department: pair.department?.trim() || '',\n            email: pair.email?.trim().toLowerCase()\n          }))\n          .filter(pair => pair.employee && pair.department && pair.email);\n\n        if (validPairs.length > 0) {\n          await axios.put(\n            'http://localhost:5000/api/employee-departments',\n            { updates: validPairs },\n            { headers: { 'Content-Type': 'application/json' } }\n          );\n        }\n      }\n\n      // Reset form state\n      setBulkTasks('');\n      setBulkEmployeeDepartment('');\n      setParsedTasks([]);\n      setParsedEmployeeDepartment([]);\n      \n      // Trigger data refresh\n      fetchData();\n      onDataSaved();\n\n    } catch (error) {\n      console.error('Bulk submission error:', error);\n      alert(error.message || 'Bulk submission failed');\n    }\n  }, [bulkTasks, parsedEmployeeDepartment, fetchData, onDataSaved]);\n\n  // Handle delete all data\n  const handleDeleteAllData = async () => {\n    try {\n      const response = await axios.delete('http://localhost:5000/api/tasks/all');\n      if (response.status === 200) {\n        alert('All data has been successfully deleted');\n        // Reset any local state if needed\n        setParsedTasks([]);\n        setParsedEmployeeDepartment([]);\n        setBulkTasks('');\n        setBulkEmployeeDepartment('');\n        setTask({\n          taskName: '',\n          employee: '',\n          department: '',\n          mail: '',\n          date: '',\n          comments: ''\n        });\n\n        // Refresh the page\n        window.location.reload();\n      }\n    } catch (error) {\n      console.error('Error deleting data:', error);\n      alert('Failed to delete data. Please try again.');\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const taskData = {\n        name: task.taskName,\n        employee: task.employee,\n        date: task.date,\n        comments: task.comments,\n        status: task.status,\n        department: task.department,\n        email: task.mail,\n        id: task.id\n      };\n\n      console.log('Submitting task:', taskData);\n\n      const response = await axios.put(`http://localhost:5000/api/tasks/${task.id}`, taskData, {\n        withCredentials: true,  // Ensure credentials are sent\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      console.log('Task saved successfully:', response.data);\n      \n      // Update tasks in parent component\n      const updatedTask = response.data.task;\n      const updatedTasks = tasks.map(task => \n        task.id === updatedTask.id ? updatedTask : task\n      );\n      setTasks(updatedTasks);\n\n      // Reset form\n      setTask({\n        taskName: '',\n        employee: '',\n        department: '',\n        mail: '',\n        date: '',\n        comments: ''\n      });\n      onDataSaved();\n    } catch (error) {\n      console.error('Error saving task:', error);\n      alert(`Error saving task: ${error.response?.data?.error || error.message}`);\n    }\n  };\n\n  const handleCheckTask = (taskId) => {\n    const newChecked = new Set(checkedTasks);\n    if (newChecked.has(taskId)) {\n      newChecked.delete(taskId);\n    } else {\n      newChecked.add(taskId);\n    }\n    setCheckedTasks(newChecked);\n  };\n\n  return (\n    <div className=\"container mx-auto p-4 bg-[#f5f5f5]\">\n      {/* Bulk Inputs Section */}\n      <div className=\"max-w-7xl mx-auto mb-6 bg-white rounded p-6\">\n        <h2 className=\"text-xl font-semibold mb-6 text-center\">Bulk Data Input</h2>\n        \n        <div className=\"flex space-x-6\">\n          {/* Bulk Tasks Input */}\n          <div className=\"w-1/2\">\n            <label \n              htmlFor=\"bulkTasks\" \n              className=\"block text-gray-700 text-sm font-medium mb-2\"\n            >\n              Bulk Tasks Input (one task per line)\n            </label>\n            <textarea\n              id=\"bulkTasks\"\n              value={bulkTasks}\n              onChange={handleBulkTasksChange}\n              className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\"\n              rows=\"4\"\n              placeholder=\"Enter multiple tasks, one per line\"\n            />\n            <p className=\"text-sm text-gray-500 mt-1\">\n              {parsedTasks.length} tasks ready to be saved\n            </p>\n          </div>\n\n          {/* Employee-Department Input */}\n          <div className=\"w-1/2\">\n            <label \n              htmlFor=\"bulkEmployeeDepartment\" \n              className=\"block text-gray-700 text-sm font-medium mb-2\"\n            >\n              Employee-Department-Mail Input (format: employee;department;email)\n            </label>\n            <textarea\n              id=\"bulkEmployeeDepartment\"\n              value={bulkEmployeeDepartment}\n              onChange={handleBulkEmployeeDepartmentChange}\n              className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\"\n              rows=\"4\"\n              placeholder=\"Enter employee, department and email, one per line (e.g., John Doe;Sales;john.doe@example.com)\"\n            />\n            <p className=\"text-sm text-gray-500 mt-1\">\n              {parsedEmployeeDepartment.length} employee-department-mail entries ready to be saved\n            </p>\n          </div>\n        </div>\n\n        {/* Save and Delete Buttons */}\n        <div className=\"flex justify-center space-x-4 mt-6\">\n          <button\n            type=\"button\"\n            onClick={handleBulkDataSubmission}\n            className=\"w-48 bg-black hover:bg-gray-800 text-white font-medium py-2 px-6 rounded\"\n            disabled={bulkTasks.length === 0 && parsedEmployeeDepartment.length === 0}\n          >\n            Save Bulk Data\n          </button>\n          \n          <button\n            type=\"button\"\n            onClick={handleDeleteAllData}\n            className=\"w-48 bg-[#ff4d4f] hover:bg-[#ff7875] text-white font-medium py-2 px-6 rounded\"\n          >\n            Delete All Items\n          </button>\n        </div>\n      </div>\n\n      {/* Individual Task Form */}\n      <div className=\"max-w-2xl mx-auto bg-white rounded p-6\">\n        <h2 className=\"text-xl font-semibold mb-6 text-center\">Create Task</h2>\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          {/* Task Selection Dropdown */}\n          <div>\n            <label \n              htmlFor=\"taskName\" \n              className=\"block text-gray-700 text-sm font-medium mb-2\"\n            >\n              Select Task\n            </label>\n            <select\n              id=\"taskName\"\n              name=\"taskName\"\n              value={task.taskName}\n              onChange={handleChange}\n              className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\"\n              required\n            >\n              <option value=\"\">Select a task</option>\n              {tasks.map((taskItem, index) => (\n                <option \n                  key={taskItem.id || `new-task-${index}-${taskItem.name}`}\n                  value={taskItem.name}\n                >\n                  {taskItem.name}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          {/* Employee Dropdown */}\n          <div>\n            <label \n              htmlFor=\"employee\" \n              className=\"block text-gray-700 text-sm font-medium mb-2\"\n            >\n              Select Employee\n            </label>\n            <select\n              id=\"employee\"\n              name=\"employee\"\n              value={task.employee}\n              onChange={handleChange}\n              className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\"\n              required\n            >\n              <option value=\"\">Select an employee</option>\n              {uniqueEmployees.map((employee) => (\n                <option \n                  key={`employee-${employee.id}`}\n                  value={employee.name}\n                >\n                  {employee.name}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          {/* Department Display */}\n          <div>\n            <label \n              htmlFor=\"department\" \n              className=\"block text-gray-700 text-sm font-medium mb-2\"\n            >\n              Department\n            </label>\n            <input\n              type=\"text\"\n              id=\"department\"\n              name=\"department\"\n              value={\n                employees.find(emp => emp.name === task.employee)?.department || ''\n              }\n              readOnly\n              className=\"w-full border border-gray-300 rounded p-2 bg-gray-50\"\n            />\n          </div>\n\n          {/* Mail Display */}\n          <div>\n            <label \n              htmlFor=\"mail\" \n              className=\"block text-gray-700 text-sm font-medium mb-2\"\n            >\n              Mail\n            </label>\n            <input\n              type=\"email\"\n              id=\"mail\"\n              name=\"mail\"\n              value={\n                parsedEmployeeDepartment.find(emp => emp.employee === task.employee)?.email || \n                employees.find(emp => emp.name === task.employee)?.email || \n                ''\n              }\n              readOnly\n              className=\"w-full border border-gray-300 rounded p-2 bg-gray-50\"\n            />\n          </div>\n\n          {/* Date Input */}\n          <div>\n            <label \n              htmlFor=\"date\" \n              className=\"block text-gray-700 text-sm font-medium mb-2\"\n            >\n              Due Date\n            </label>\n            <input\n              type=\"date\"\n              id=\"date\"\n              name=\"date\"\n              value={task.date}\n              onChange={handleChange}\n              className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\"\n              required\n            />\n          </div>\n\n          {/* Comments Input */}\n          <div>\n            <label \n              htmlFor=\"comments\" \n              className=\"block text-gray-700 text-sm font-medium mb-2\"\n            >\n              Comments\n            </label>\n            <textarea\n              id=\"comments\"\n              name=\"comments\"\n              value={task.comments}\n              onChange={handleChange}\n              className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\"\n              placeholder=\"Enter any additional comments\"\n              rows=\"4\"\n            />\n          </div>\n\n          {/* Submit Button */}\n          <div className=\"flex justify-center pt-4\">\n            <button\n              type=\"submit\"\n              className=\"w-48 bg-black hover:bg-gray-800 text-white font-medium py-2 px-6 rounded\"\n            >\n              Update Task\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(TaskInput); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
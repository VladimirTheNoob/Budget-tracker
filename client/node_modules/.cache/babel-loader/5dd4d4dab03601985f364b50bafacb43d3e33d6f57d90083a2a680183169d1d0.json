{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\belya\\\\Cursor projects\\\\Budget tracker\\\\client\\\\src\\\\components\\\\TaskInput.js\";\nimport React, { useState, useEffect } from 'react';\nimport api from '../api';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskInput = () => {\n  // State to manage form inputs\n  const [task, setTask] = useState({\n    taskName: '',\n    employee: '',\n    date: '',\n    comments: ''\n  });\n\n  // State for bulk tasks\n  const [bulkTasks, setBulkTasks] = useState('');\n  const [parsedTasks, setParsedTasks] = useState([]);\n\n  // State for employee-department input\n  const [bulkEmployeeDepartment, setBulkEmployeeDepartment] = useState('');\n  const [parsedEmployeeDepartment, setParsedEmployeeDepartment] = useState([]);\n\n  // Handle bulk tasks input\n  const handleBulkTasksChange = e => {\n    const value = e.target.value;\n    setBulkTasks(value);\n    // Parse tasks (split by new line)\n    const tasks = value.split('\\n').filter(task => task.trim() !== '');\n    setParsedTasks(tasks);\n  };\n\n  // Handle employee-department input\n  const handleBulkEmployeeDepartmentChange = e => {\n    const value = e.target.value;\n    setBulkEmployeeDepartment(value);\n    // Parse employee-department pairs (split by new line and delimiter)\n    const pairs = value.split('\\n').filter(pair => pair.trim() !== '');\n    const employeeDepartment = pairs.map(pair => {\n      const [employee, department] = pair.split(';').map(item => item.trim());\n      return {\n        employee,\n        department\n      };\n    });\n    setParsedEmployeeDepartment(employeeDepartment);\n  };\n\n  // Handle task selection from parsed tasks\n  const handleTaskSelection = e => {\n    const selectedValue = e.target.value;\n    setTask(prev => ({\n      ...prev,\n      taskName: selectedValue\n    }));\n  };\n\n  // Handle input changes\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'employee') {\n      const selectedPair = parsedEmployeeDepartment.find(pair => pair.employee === value);\n      setTask(prevTask => ({\n        ...prevTask,\n        employee: selectedPair ? selectedPair.employee : '',\n        department: selectedPair ? selectedPair.department : ''\n      }));\n    } else {\n      setTask(prevTask => ({\n        ...prevTask,\n        [name]: value\n      }));\n    }\n  };\n\n  // Handle bulk data submission\n  const handleBulkDataSubmission = async () => {\n    try {\n      // Save tasks to database\n      if (parsedTasks.length > 0) {\n        console.log('Preparing bulk tasks data:', parsedTasks);\n        const tasksData = parsedTasks.map(taskName => ({\n          name: taskName.trim(),\n          status: 'pending',\n          createdAt: new Date().toISOString()\n        }));\n        console.log('Sending bulk tasks:', {\n          tasks: tasksData,\n          requestDetails: {\n            url: 'http://localhost:5000/api/bulk-tasks',\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            }\n          }\n        });\n        try {\n          const tasksResponse = await axios.post('http://localhost:5000/api/bulk-tasks', {\n            tasks: tasksData\n          }, {\n            headers: {\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            }\n          });\n          console.log('Bulk tasks saved successfully:', tasksResponse.data);\n        } catch (apiError) {\n          var _apiError$response, _apiError$response2;\n          console.error('Detailed API Error for Bulk Tasks:', {\n            message: apiError.message,\n            response: (_apiError$response = apiError.response) === null || _apiError$response === void 0 ? void 0 : _apiError$response.data,\n            status: (_apiError$response2 = apiError.response) === null || _apiError$response2 === void 0 ? void 0 : _apiError$response2.status,\n            config: apiError.config,\n            requestData: {\n              tasks: tasksData\n            }\n          });\n          throw apiError;\n        }\n      }\n\n      // Save employee-department pairs to database\n      if (parsedEmployeeDepartment.length > 0) {\n        console.log('Preparing employee-department data:', parsedEmployeeDepartment);\n        const formattedPairs = parsedEmployeeDepartment.map(pair => ({\n          employee: pair.employee.trim(),\n          department: pair.department.trim(),\n          createdAt: new Date().toISOString()\n        }));\n        console.log('Sending employee-department pairs:', {\n          employeeDepartments: formattedPairs,\n          requestDetails: {\n            url: 'http://localhost:5000/api/employee-departments',\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            }\n          }\n        });\n        try {\n          const pairsResponse = await axios.post('http://localhost:5000/api/employee-departments', {\n            employeeDepartments: formattedPairs\n          }, {\n            headers: {\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            }\n          });\n          console.log('Employee-department pairs saved successfully:', pairsResponse.data);\n        } catch (apiError) {\n          var _apiError$response3, _apiError$response4;\n          console.error('Detailed API Error for Employee-Departments:', {\n            message: apiError.message,\n            response: (_apiError$response3 = apiError.response) === null || _apiError$response3 === void 0 ? void 0 : _apiError$response3.data,\n            status: (_apiError$response4 = apiError.response) === null || _apiError$response4 === void 0 ? void 0 : _apiError$response4.status,\n            config: apiError.config,\n            requestData: {\n              employeeDepartments: formattedPairs\n            }\n          });\n          throw apiError;\n        }\n      }\n\n      // Clear bulk input fields after successful submission\n      setBulkTasks('');\n      setBulkEmployeeDepartment('');\n      setParsedTasks([]);\n      setParsedEmployeeDepartment([]);\n\n      // Show success message\n      alert('Bulk data saved successfully!');\n    } catch (error) {\n      var _error$response, _error$response2, _error$response3, _error$response3$data, _error$response4, _error$response5;\n      console.error('Comprehensive Error saving bulk data:', {\n        message: error.message,\n        response: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data,\n        status: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status,\n        config: error.config,\n        stack: error.stack\n      });\n\n      // Show user-friendly error message with more details\n      alert(`Error saving bulk data: \n        ${((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || error.message}\n        \n        Status: ${((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) || 'Unknown'}\n        Details: ${JSON.stringify((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || 'No additional details'}\n      `);\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // First save bulk data if any exists\n      await handleBulkDataSubmission();\n\n      // Then save the individual task\n      console.log('Sending individual task:', task);\n      const response = await api.post('/api/tasks', task);\n      console.log('Task created:', response.data);\n\n      // Reset form after successful submission\n      setTask({\n        taskName: '',\n        employee: '',\n        department: '',\n        date: '',\n        comments: ''\n      });\n    } catch (error) {\n      var _error$response6, _error$response7, _error$response8, _error$response8$data;\n      console.error('Error creating task:', {\n        message: error.message,\n        response: (_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data,\n        status: (_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.status\n      });\n      alert(`Error creating task: ${((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message) || error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto mt-10 p-6 bg-white rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-6 text-center\",\n      children: \"Create Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"bulkTasks\",\n        className: \"block text-gray-700 text-sm font-bold mb-2\",\n        children: \"Bulk Tasks Input (one task per line)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"bulkTasks\",\n        value: bulkTasks,\n        onChange: handleBulkTasksChange,\n        className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n        rows: \"5\",\n        placeholder: \"Enter multiple tasks, one per line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600 mt-1\",\n        children: [parsedTasks.length, \" tasks ready to be saved\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"bulkEmployeeDepartment\",\n        className: \"block text-gray-700 text-sm font-bold mb-2\",\n        children: \"Employee-Department Input (format: employee;department)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"bulkEmployeeDepartment\",\n        value: bulkEmployeeDepartment,\n        onChange: handleBulkEmployeeDepartmentChange,\n        className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n        rows: \"5\",\n        placeholder: \"Enter employee and department pairs, one per line (e.g., John Doe;Sales)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600 mt-1\",\n        children: [parsedEmployeeDepartment.length, \" employee-department pairs ready to be saved\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 flex justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleBulkDataSubmission,\n        className: \"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline mr-4\",\n        disabled: parsedTasks.length === 0 && parsedEmployeeDepartment.length === 0,\n        children: \"Save Bulk Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"taskName\",\n          className: \"block text-gray-700 text-sm font-bold mb-2\",\n          children: \"Select Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"taskName\",\n          name: \"taskName\",\n          value: task.taskName,\n          onChange: handleTaskSelection,\n          className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), parsedTasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: task,\n            children: task\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"employee\",\n          className: \"block text-gray-700 text-sm font-bold mb-2\",\n          children: \"Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"employee\",\n          name: \"employee\",\n          value: task.employee,\n          onChange: handleChange,\n          className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select an employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), parsedEmployeeDepartment.map((pair, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: pair.employee,\n            children: pair.employee\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"department\",\n          className: \"block text-gray-700 text-sm font-bold mb-2\",\n          children: \"Department\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"department\",\n          name: \"department\",\n          value: task.department,\n          readOnly: true,\n          className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          className: \"block text-gray-700 text-sm font-bold mb-2\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"date\",\n          name: \"date\",\n          value: task.date,\n          onChange: handleChange,\n          className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"comments\",\n          className: \"block text-gray-700 text-sm font-bold mb-2\",\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"comments\",\n          name: \"comments\",\n          value: task.comments,\n          onChange: handleChange,\n          className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n          placeholder: \"Enter any additional comments\",\n          rows: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n};\nexport default TaskInput;","map":{"version":3,"names":["React","useState","useEffect","api","axios","jsxDEV","_jsxDEV","TaskInput","task","setTask","taskName","employee","date","comments","bulkTasks","setBulkTasks","parsedTasks","setParsedTasks","bulkEmployeeDepartment","setBulkEmployeeDepartment","parsedEmployeeDepartment","setParsedEmployeeDepartment","handleBulkTasksChange","e","value","target","tasks","split","filter","trim","handleBulkEmployeeDepartmentChange","pairs","pair","employeeDepartment","map","department","item","handleTaskSelection","selectedValue","prev","handleChange","name","selectedPair","find","prevTask","handleBulkDataSubmission","length","console","log","tasksData","status","createdAt","Date","toISOString","requestDetails","url","method","headers","tasksResponse","post","data","apiError","_apiError$response","_apiError$response2","error","message","response","config","requestData","formattedPairs","employeeDepartments","pairsResponse","_apiError$response3","_apiError$response4","alert","_error$response","_error$response2","_error$response3","_error$response3$data","_error$response4","_error$response5","stack","JSON","stringify","handleSubmit","preventDefault","_error$response6","_error$response7","_error$response8","_error$response8$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","rows","placeholder","type","onClick","disabled","onSubmit","required","index","readOnly"],"sources":["C:/Users/belya/Cursor projects/Budget tracker/client/src/components/TaskInput.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport api from '../api';\r\nimport axios from 'axios';\r\n\r\nconst TaskInput = () => {\r\n  // State to manage form inputs\r\n  const [task, setTask] = useState({\r\n    taskName: '',\r\n    employee: '',\r\n    date: '',\r\n    comments: ''\r\n  });\r\n\r\n  // State for bulk tasks\r\n  const [bulkTasks, setBulkTasks] = useState('');\r\n  const [parsedTasks, setParsedTasks] = useState([]);\r\n\r\n  // State for employee-department input\r\n  const [bulkEmployeeDepartment, setBulkEmployeeDepartment] = useState('');\r\n  const [parsedEmployeeDepartment, setParsedEmployeeDepartment] = useState([]);\r\n\r\n  // Handle bulk tasks input\r\n  const handleBulkTasksChange = (e) => {\r\n    const value = e.target.value;\r\n    setBulkTasks(value);\r\n    // Parse tasks (split by new line)\r\n    const tasks = value.split('\\n').filter(task => task.trim() !== '');\r\n    setParsedTasks(tasks);\r\n  };\r\n\r\n  // Handle employee-department input\r\n  const handleBulkEmployeeDepartmentChange = (e) => {\r\n    const value = e.target.value;\r\n    setBulkEmployeeDepartment(value);\r\n    // Parse employee-department pairs (split by new line and delimiter)\r\n    const pairs = value.split('\\n').filter(pair => pair.trim() !== '');\r\n    const employeeDepartment = pairs.map(pair => {\r\n      const [employee, department] = pair.split(';').map(item => item.trim());\r\n      return { employee, department };\r\n    });\r\n    setParsedEmployeeDepartment(employeeDepartment);\r\n  };\r\n\r\n  // Handle task selection from parsed tasks\r\n  const handleTaskSelection = (e) => {\r\n    const selectedValue = e.target.value;\r\n    setTask(prev => ({\r\n      ...prev,\r\n      taskName: selectedValue\r\n    }));\r\n  };\r\n\r\n  // Handle input changes\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === 'employee') {\r\n      const selectedPair = parsedEmployeeDepartment.find(pair => pair.employee === value);\r\n      setTask(prevTask => ({\r\n        ...prevTask,\r\n        employee: selectedPair ? selectedPair.employee : '',\r\n        department: selectedPair ? selectedPair.department : ''\r\n      }));\r\n    } else {\r\n      setTask(prevTask => ({\r\n        ...prevTask,\r\n        [name]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Handle bulk data submission\r\n  const handleBulkDataSubmission = async () => {\r\n    try {\r\n      // Save tasks to database\r\n      if (parsedTasks.length > 0) {\r\n        console.log('Preparing bulk tasks data:', parsedTasks);\r\n        const tasksData = parsedTasks.map(taskName => ({ \r\n          name: taskName.trim(),\r\n          status: 'pending',\r\n          createdAt: new Date().toISOString()\r\n        }));\r\n        \r\n        console.log('Sending bulk tasks:', { \r\n          tasks: tasksData,\r\n          requestDetails: {\r\n            url: 'http://localhost:5000/api/bulk-tasks',\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json'\r\n            }\r\n          }\r\n        });\r\n\r\n        try {\r\n          const tasksResponse = await axios.post('http://localhost:5000/api/bulk-tasks', { \r\n            tasks: tasksData \r\n          }, {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json'\r\n            }\r\n          });\r\n          console.log('Bulk tasks saved successfully:', tasksResponse.data);\r\n        } catch (apiError) {\r\n          console.error('Detailed API Error for Bulk Tasks:', {\r\n            message: apiError.message,\r\n            response: apiError.response?.data,\r\n            status: apiError.response?.status,\r\n            config: apiError.config,\r\n            requestData: { tasks: tasksData }\r\n          });\r\n          throw apiError;\r\n        }\r\n      }\r\n\r\n      // Save employee-department pairs to database\r\n      if (parsedEmployeeDepartment.length > 0) {\r\n        console.log('Preparing employee-department data:', parsedEmployeeDepartment);\r\n        const formattedPairs = parsedEmployeeDepartment.map(pair => ({\r\n          employee: pair.employee.trim(),\r\n          department: pair.department.trim(),\r\n          createdAt: new Date().toISOString()\r\n        }));\r\n\r\n        console.log('Sending employee-department pairs:', { \r\n          employeeDepartments: formattedPairs,\r\n          requestDetails: {\r\n            url: 'http://localhost:5000/api/employee-departments',\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json'\r\n            }\r\n          }\r\n        });\r\n\r\n        try {\r\n          const pairsResponse = await axios.post('http://localhost:5000/api/employee-departments', { \r\n            employeeDepartments: formattedPairs \r\n          }, {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json'\r\n            }\r\n          });\r\n          console.log('Employee-department pairs saved successfully:', pairsResponse.data);\r\n        } catch (apiError) {\r\n          console.error('Detailed API Error for Employee-Departments:', {\r\n            message: apiError.message,\r\n            response: apiError.response?.data,\r\n            status: apiError.response?.status,\r\n            config: apiError.config,\r\n            requestData: { employeeDepartments: formattedPairs }\r\n          });\r\n          throw apiError;\r\n        }\r\n      }\r\n\r\n      // Clear bulk input fields after successful submission\r\n      setBulkTasks('');\r\n      setBulkEmployeeDepartment('');\r\n      setParsedTasks([]);\r\n      setParsedEmployeeDepartment([]);\r\n\r\n      // Show success message\r\n      alert('Bulk data saved successfully!');\r\n\r\n    } catch (error) {\r\n      console.error('Comprehensive Error saving bulk data:', {\r\n        message: error.message,\r\n        response: error.response?.data,\r\n        status: error.response?.status,\r\n        config: error.config,\r\n        stack: error.stack\r\n      });\r\n      \r\n      // Show user-friendly error message with more details\r\n      alert(`Error saving bulk data: \r\n        ${error.response?.data?.error || error.message}\r\n        \r\n        Status: ${error.response?.status || 'Unknown'}\r\n        Details: ${JSON.stringify(error.response?.data) || 'No additional details'}\r\n      `);\r\n    }\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // First save bulk data if any exists\r\n      await handleBulkDataSubmission();\r\n\r\n      // Then save the individual task\r\n      console.log('Sending individual task:', task);\r\n      const response = await api.post('/api/tasks', task);\r\n      console.log('Task created:', response.data);\r\n      \r\n      // Reset form after successful submission\r\n      setTask({\r\n        taskName: '',\r\n        employee: '',\r\n        department: '',\r\n        date: '',\r\n        comments: ''\r\n      });\r\n    } catch (error) {\r\n      console.error('Error creating task:', {\r\n        message: error.message,\r\n        response: error.response?.data,\r\n        status: error.response?.status\r\n      });\r\n      alert(`Error creating task: ${error.response?.data?.message || error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto mt-10 p-6 bg-white rounded-lg shadow-md\">\r\n      <h2 className=\"text-2xl font-bold mb-6 text-center\">Create Task</h2>\r\n      \r\n      {/* Bulk Tasks Input */}\r\n      <div className=\"mb-6\">\r\n        <label \r\n          htmlFor=\"bulkTasks\" \r\n          className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n        >\r\n          Bulk Tasks Input (one task per line)\r\n        </label>\r\n        <textarea\r\n          id=\"bulkTasks\"\r\n          value={bulkTasks}\r\n          onChange={handleBulkTasksChange}\r\n          className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n          rows=\"5\"\r\n          placeholder=\"Enter multiple tasks, one per line\"\r\n        />\r\n        <p className=\"text-sm text-gray-600 mt-1\">\r\n          {parsedTasks.length} tasks ready to be saved\r\n        </p>\r\n      </div>\r\n\r\n      {/* Employee-Department Input */}\r\n      <div className=\"mb-6\">\r\n        <label \r\n          htmlFor=\"bulkEmployeeDepartment\" \r\n          className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n        >\r\n          Employee-Department Input (format: employee;department)\r\n        </label>\r\n        <textarea\r\n          id=\"bulkEmployeeDepartment\"\r\n          value={bulkEmployeeDepartment}\r\n          onChange={handleBulkEmployeeDepartmentChange}\r\n          className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n          rows=\"5\"\r\n          placeholder=\"Enter employee and department pairs, one per line (e.g., John Doe;Sales)\"\r\n        />\r\n        <p className=\"text-sm text-gray-600 mt-1\">\r\n          {parsedEmployeeDepartment.length} employee-department pairs ready to be saved\r\n        </p>\r\n      </div>\r\n\r\n      {/* Save Bulk Data Button */}\r\n      <div className=\"mb-6 flex justify-center\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleBulkDataSubmission}\r\n          className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline mr-4\"\r\n          disabled={parsedTasks.length === 0 && parsedEmployeeDepartment.length === 0}\r\n        >\r\n          Save Bulk Data\r\n        </button>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Task Selection Dropdown */}\r\n        <div className=\"mb-4\">\r\n          <label \r\n            htmlFor=\"taskName\" \r\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n          >\r\n            Select Task\r\n          </label>\r\n          <select\r\n            id=\"taskName\"\r\n            name=\"taskName\"\r\n            value={task.taskName}\r\n            onChange={handleTaskSelection}\r\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            required\r\n          >\r\n            <option value=\"\">Select a task</option>\r\n            {parsedTasks.map((task, index) => (\r\n              <option key={index} value={task}>\r\n                {task}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        {/* Employee Dropdown */}\r\n        <div className=\"mb-4\">\r\n          <label \r\n            htmlFor=\"employee\" \r\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n          >\r\n            Employee\r\n          </label>\r\n          <select\r\n            id=\"employee\"\r\n            name=\"employee\"\r\n            value={task.employee}\r\n            onChange={handleChange}\r\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            required\r\n          >\r\n            <option value=\"\">Select an employee</option>\r\n            {parsedEmployeeDepartment.map((pair, index) => (\r\n              <option key={index} value={pair.employee}>\r\n                {pair.employee}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        {/* Department Display */}\r\n        <div className=\"mb-4\">\r\n          <label \r\n            htmlFor=\"department\" \r\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n          >\r\n            Department\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"department\"\r\n            name=\"department\"\r\n            value={task.department}\r\n            readOnly\r\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n          />\r\n        </div>\r\n\r\n        {/* Date Input */}\r\n        <div className=\"mb-4\">\r\n          <label \r\n            htmlFor=\"date\" \r\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n          >\r\n            Date\r\n          </label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"date\"\r\n            name=\"date\"\r\n            value={task.date}\r\n            onChange={handleChange}\r\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        {/* Comments Input */}\r\n        <div className=\"mb-4\">\r\n          <label \r\n            htmlFor=\"comments\" \r\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n          >\r\n            Comments\r\n          </label>\r\n          <textarea\r\n            id=\"comments\"\r\n            name=\"comments\"\r\n            value={task.comments}\r\n            onChange={handleChange}\r\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            placeholder=\"Enter any additional comments\"\r\n            rows=\"4\"\r\n          />\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <div className=\"flex items-center justify-center\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n          >\r\n            Create Task\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskInput; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
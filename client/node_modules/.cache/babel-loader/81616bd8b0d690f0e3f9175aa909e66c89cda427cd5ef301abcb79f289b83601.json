{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\belya\\\\Cursor projects\\\\Budget tracker\\\\client\\\\src\\\\components\\\\AdminRoleManager.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { ROLES } from '../config/roles';\nimport { toast } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminRoleManager = ({\n  currentUserRole\n}) => {\n  const [userRoles, setUserRoles] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [newRole, setNewRole] = useState({\n    employeeId: '',\n    email: '',\n    role: ROLES.EMPLOYEE\n  });\n  const [error, setError] = useState(null);\n  const [authStatus, setAuthStatus] = useState(null);\n  useEffect(() => {\n    // Check current user's role\n    const checkUserRole = async () => {\n      try {\n        var _response$data$user;\n        const response = await axios.get('http://localhost:5000/auth/status', {\n          withCredentials: true\n        });\n        console.log('Admin Role Manager - Auth Status:', {\n          authenticated: response.data.authenticated,\n          role: response.data.role,\n          user: response.data.user,\n          passedRole: currentUserRole\n        });\n\n        // Determine the role to use\n        const resolvedRole = currentUserRole || response.data.role || (((_response$data$user = response.data.user) === null || _response$data$user === void 0 ? void 0 : _response$data$user.email) === 'belyakovvladimirs@gmail.com' ? ROLES.ADMIN : ROLES.EMPLOYEE);\n        console.log('Resolved Role:', resolvedRole);\n\n        // Only fetch roles if user is an admin\n        if (resolvedRole === ROLES.ADMIN) {\n          console.log('Fetching user roles for admin');\n          fetchUserRoles();\n          fetchEmployees();\n        } else {\n          console.log('Not an admin, cannot fetch roles');\n        }\n        setAuthStatus(response.data);\n      } catch (error) {\n        console.error('Error checking user role:', error);\n        setError('Failed to check user role');\n      }\n    };\n    checkUserRole();\n  }, [currentUserRole]);\n  const fetchUserRoles = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/roles', {\n        withCredentials: true\n      });\n      setUserRoles(response.data);\n    } catch (error) {\n      console.error('Error fetching user roles:', error);\n      setError('Failed to fetch user roles');\n    }\n  };\n  const fetchEmployees = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/employees', {\n        withCredentials: true\n      });\n      setEmployees(response.data);\n    } catch (error) {\n      console.error('Error fetching employees:', error);\n      setError('Failed to fetch employees');\n    }\n  };\n  const handleEmployeeChange = e => {\n    const employeeId = e.target.value;\n    const selectedEmployee = employees.find(emp => emp.id === employeeId);\n    setNewRole(prev => ({\n      ...prev,\n      employeeId,\n      email: (selectedEmployee === null || selectedEmployee === void 0 ? void 0 : selectedEmployee.email) || ''\n    }));\n  };\n  const handleRoleUpdate = async (employeeId, role) => {\n    try {\n      var _authStatus$user, _authStatus$user2, _authStatus$user2$ema, _authStatus$user2$ema2;\n      console.log('Attempting to update role:', {\n        employeeId,\n        role\n      });\n\n      // Validate inputs\n      if (!employeeId || !role) {\n        console.error('Invalid input: employeeId and role are required', {\n          employeeId,\n          role\n        });\n        return;\n      }\n\n      // Extract user email safely\n      const userEmail = ((_authStatus$user = authStatus.user) === null || _authStatus$user === void 0 ? void 0 : _authStatus$user.email) || ((_authStatus$user2 = authStatus.user) === null || _authStatus$user2 === void 0 ? void 0 : (_authStatus$user2$ema = _authStatus$user2.emails) === null || _authStatus$user2$ema === void 0 ? void 0 : (_authStatus$user2$ema2 = _authStatus$user2$ema[0]) === null || _authStatus$user2$ema2 === void 0 ? void 0 : _authStatus$user2$ema2.value) || null;\n      console.log('User Email for Role Update:', userEmail);\n\n      // Validate user email\n      if (!userEmail) {\n        console.error('Cannot update role: User email is undefined');\n        return;\n      }\n\n      // Find the employee in the list\n      const employeeToUpdate = employees.find(emp => emp.id === employeeId);\n      if (!employeeToUpdate) {\n        console.error('Employee not found:', employeeId);\n        return;\n      }\n\n      // Prepare role update payload\n      const updatePayload = {\n        employeeId: employeeId,\n        role: role\n      };\n      console.log('Role Update Payload:', updatePayload);\n\n      // Make API call to update role\n      const response = await axios.put('http://localhost:5000/api/roles', updatePayload, {\n        withCredentials: true\n      });\n      console.log('Role Update Response:', response.data);\n\n      // Refresh roles after successful update\n      fetchUserRoles();\n\n      // Optional: Show success notification\n      toast.success(`Role updated to ${role} for ${employeeToUpdate.name}`);\n    } catch (error) {\n      console.error('Error updating role:', error);\n\n      // Detailed error logging\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        console.error('Server Error Details:', error.response.data);\n        toast.error(error.response.data.message || 'Failed to update role');\n      } else if (error.request) {\n        // The request was made but no response was received\n        console.error('No response received:', error.request);\n        toast.error('No response from server');\n      } else {\n        // Something happened in setting up the request\n        console.error('Error setting up request:', error.message);\n        toast.error('Error updating role');\n      }\n    }\n  };\n\n  // Prevent non-admin access\n  if (![ROLES.ADMIN].includes(currentUserRole)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 text-center text-red-600\",\n      children: \"Access Denied: Administrator privileges required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4 bg-[#f5f5f5]\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-2xl mx-auto bg-white rounded p-6 shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-6 text-center\",\n        children: \"Role Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\",\n        role: \"alert\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleRoleUpdate,\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"employee\",\n            className: \"block text-gray-700 text-sm font-medium mb-2\",\n            children: \"Select Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"employee\",\n            value: newRole.employeeId,\n            onChange: handleEmployeeChange,\n            className: \"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select an employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), employees.map(employee => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: employee.id,\n              children: employee.name\n            }, employee.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"block text-gray-700 text-sm font-medium mb-2\",\n            children: \"User Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: newRole.email,\n            readOnly: true,\n            className: \"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400 bg-gray-100\",\n            placeholder: \"Employee email will appear here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"role\",\n            className: \"block text-gray-700 text-sm font-medium mb-2\",\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"role\",\n            value: newRole.role,\n            onChange: e => setNewRole(prev => ({\n              ...prev,\n              role: e.target.value\n            })),\n            className: \"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\",\n            required: true,\n            children: Object.values(ROLES).map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: role,\n              children: role.charAt(0).toUpperCase() + role.slice(1)\n            }, role, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"w-48 bg-black hover:bg-gray-800 text-white font-medium py-2 px-6 rounded\",\n            children: \"Update Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Current User Roles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overflow-x-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"min-w-full bg-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"bg-gray-50\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                  children: \"Role\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              className: \"bg-white divide-y divide-gray-200\",\n              children: userRoles.map((userRole, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap\",\n                  children: userRole.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${userRole.role === ROLES.ADMIN ? 'bg-red-100 text-red-800' : userRole.role === ROLES.MANAGER ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'}`,\n                    children: userRole.role.charAt(0).toUpperCase() + userRole.role.slice(1)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 21\n                }, this)]\n              }, `${userRole.email}-${index}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\nexport default AdminRoleManager;","map":{"version":3,"names":["React","useState","useEffect","axios","Link","ROLES","toast","jsxDEV","_jsxDEV","AdminRoleManager","currentUserRole","userRoles","setUserRoles","employees","setEmployees","newRole","setNewRole","employeeId","email","role","EMPLOYEE","error","setError","authStatus","setAuthStatus","checkUserRole","_response$data$user","response","get","withCredentials","console","log","authenticated","data","user","passedRole","resolvedRole","ADMIN","fetchUserRoles","fetchEmployees","handleEmployeeChange","e","target","value","selectedEmployee","find","emp","id","prev","handleRoleUpdate","_authStatus$user","_authStatus$user2","_authStatus$user2$ema","_authStatus$user2$ema2","userEmail","emails","employeeToUpdate","updatePayload","put","success","name","message","request","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","required","map","employee","type","readOnly","placeholder","Object","values","charAt","toUpperCase","slice","userRole","index","MANAGER"],"sources":["C:/Users/belya/Cursor projects/Budget tracker/client/src/components/AdminRoleManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { ROLES } from '../config/roles';\r\nimport { toast } from 'react-hot-toast';\r\n\r\nconst AdminRoleManager = ({ currentUserRole }) => {\r\n  const [userRoles, setUserRoles] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [newRole, setNewRole] = useState({\r\n    employeeId: '',\r\n    email: '',\r\n    role: ROLES.EMPLOYEE\r\n  });\r\n  const [error, setError] = useState(null);\r\n  const [authStatus, setAuthStatus] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Check current user's role\r\n    const checkUserRole = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/auth/status', { \r\n          withCredentials: true \r\n        });\r\n        \r\n        console.log('Admin Role Manager - Auth Status:', {\r\n          authenticated: response.data.authenticated,\r\n          role: response.data.role,\r\n          user: response.data.user,\r\n          passedRole: currentUserRole\r\n        });\r\n        \r\n        // Determine the role to use\r\n        const resolvedRole = currentUserRole || \r\n          response.data.role || \r\n          (response.data.user?.email === 'belyakovvladimirs@gmail.com' ? ROLES.ADMIN : ROLES.EMPLOYEE);\r\n        \r\n        console.log('Resolved Role:', resolvedRole);\r\n        \r\n        // Only fetch roles if user is an admin\r\n        if (resolvedRole === ROLES.ADMIN) {\r\n          console.log('Fetching user roles for admin');\r\n          fetchUserRoles();\r\n          fetchEmployees();\r\n        } else {\r\n          console.log('Not an admin, cannot fetch roles');\r\n        }\r\n\r\n        setAuthStatus(response.data);\r\n      } catch (error) {\r\n        console.error('Error checking user role:', error);\r\n        setError('Failed to check user role');\r\n      }\r\n    };\r\n\r\n    checkUserRole();\r\n  }, [currentUserRole]);\r\n\r\n  const fetchUserRoles = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/roles', { \r\n        withCredentials: true \r\n      });\r\n      setUserRoles(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching user roles:', error);\r\n      setError('Failed to fetch user roles');\r\n    }\r\n  };\r\n\r\n  const fetchEmployees = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/employees', {\r\n        withCredentials: true\r\n      });\r\n      setEmployees(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching employees:', error);\r\n      setError('Failed to fetch employees');\r\n    }\r\n  };\r\n\r\n  const handleEmployeeChange = (e) => {\r\n    const employeeId = e.target.value;\r\n    const selectedEmployee = employees.find(emp => emp.id === employeeId);\r\n    setNewRole(prev => ({\r\n      ...prev,\r\n      employeeId,\r\n      email: selectedEmployee?.email || ''\r\n    }));\r\n  };\r\n\r\n  const handleRoleUpdate = async (employeeId, role) => {\r\n    try {\r\n      console.log('Attempting to update role:', { employeeId, role });\r\n\r\n      // Validate inputs\r\n      if (!employeeId || !role) {\r\n        console.error('Invalid input: employeeId and role are required', { employeeId, role });\r\n        return;\r\n      }\r\n\r\n      // Extract user email safely\r\n      const userEmail = \r\n        authStatus.user?.email || \r\n        authStatus.user?.emails?.[0]?.value || \r\n        null;\r\n\r\n      console.log('User Email for Role Update:', userEmail);\r\n\r\n      // Validate user email\r\n      if (!userEmail) {\r\n        console.error('Cannot update role: User email is undefined');\r\n        return;\r\n      }\r\n\r\n      // Find the employee in the list\r\n      const employeeToUpdate = employees.find(emp => emp.id === employeeId);\r\n\r\n      if (!employeeToUpdate) {\r\n        console.error('Employee not found:', employeeId);\r\n        return;\r\n      }\r\n\r\n      // Prepare role update payload\r\n      const updatePayload = {\r\n        employeeId: employeeId,\r\n        role: role\r\n      };\r\n\r\n      console.log('Role Update Payload:', updatePayload);\r\n\r\n      // Make API call to update role\r\n      const response = await axios.put(\r\n        'http://localhost:5000/api/roles', \r\n        updatePayload, \r\n        { withCredentials: true }\r\n      );\r\n\r\n      console.log('Role Update Response:', response.data);\r\n\r\n      // Refresh roles after successful update\r\n      fetchUserRoles();\r\n\r\n      // Optional: Show success notification\r\n      toast.success(`Role updated to ${role} for ${employeeToUpdate.name}`);\r\n\r\n    } catch (error) {\r\n      console.error('Error updating role:', error);\r\n      \r\n      // Detailed error logging\r\n      if (error.response) {\r\n        // The request was made and the server responded with a status code\r\n        console.error('Server Error Details:', error.response.data);\r\n        toast.error(error.response.data.message || 'Failed to update role');\r\n      } else if (error.request) {\r\n        // The request was made but no response was received\r\n        console.error('No response received:', error.request);\r\n        toast.error('No response from server');\r\n      } else {\r\n        // Something happened in setting up the request\r\n        console.error('Error setting up request:', error.message);\r\n        toast.error('Error updating role');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Prevent non-admin access\r\n  if (![ROLES.ADMIN].includes(currentUserRole)) {\r\n    return (\r\n      <div className=\"p-4 text-center text-red-600\">\r\n        Access Denied: Administrator privileges required\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4 bg-[#f5f5f5]\">\r\n      <div className=\"max-w-2xl mx-auto bg-white rounded p-6 shadow-md\">\r\n        <h2 className=\"text-2xl font-bold mb-6 text-center\">Role Management</h2>\r\n\r\n        {error && (\r\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        {/* Role Assignment Form */}\r\n        <form onSubmit={handleRoleUpdate} className=\"space-y-4\">\r\n          <div>\r\n            <label htmlFor=\"employee\" className=\"block text-gray-700 text-sm font-medium mb-2\">\r\n              Select Employee\r\n            </label>\r\n            <select\r\n              id=\"employee\"\r\n              value={newRole.employeeId}\r\n              onChange={handleEmployeeChange}\r\n              className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\"\r\n              required\r\n            >\r\n              <option value=\"\">Select an employee</option>\r\n              {employees.map(employee => (\r\n                <option key={employee.id} value={employee.id}>\r\n                  {employee.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"email\" className=\"block text-gray-700 text-sm font-medium mb-2\">\r\n              User Email\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              value={newRole.email}\r\n              readOnly\r\n              className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400 bg-gray-100\"\r\n              placeholder=\"Employee email will appear here\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"role\" className=\"block text-gray-700 text-sm font-medium mb-2\">\r\n              Role\r\n            </label>\r\n            <select\r\n              id=\"role\"\r\n              value={newRole.role}\r\n              onChange={(e) => setNewRole(prev => ({ ...prev, role: e.target.value }))}\r\n              className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\"\r\n              required\r\n            >\r\n              {Object.values(ROLES).map(role => (\r\n                <option key={role} value={role}>\r\n                  {role.charAt(0).toUpperCase() + role.slice(1)}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"flex justify-center\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"w-48 bg-black hover:bg-gray-800 text-white font-medium py-2 px-6 rounded\"\r\n            >\r\n              Update Role\r\n            </button>\r\n          </div>\r\n        </form>\r\n\r\n        {/* User Roles List */}\r\n        <div className=\"mt-8\">\r\n          <h3 className=\"text-xl font-semibold mb-4\">Current User Roles</h3>\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full bg-white\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Email\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Role\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {userRoles.map((userRole, index) => (\r\n                  <tr key={`${userRole.email}-${index}`}>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      {userRole.email}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\r\n                        userRole.role === ROLES.ADMIN \r\n                          ? 'bg-red-100 text-red-800' \r\n                          : userRole.role === ROLES.MANAGER \r\n                          ? 'bg-yellow-100 text-yellow-800' \r\n                          : 'bg-green-100 text-green-800'\r\n                      }`}>\r\n                        {userRole.role.charAt(0).toUpperCase() + userRole.role.slice(1)}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminRoleManager; "],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SAASC,KAAK,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAChD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC;IACrCgB,UAAU,EAAE,EAAE;IACdC,KAAK,EAAE,EAAE;IACTC,IAAI,EAAEd,KAAK,CAACe;EACd,CAAC,CAAC;EACF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACsB,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMuB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QAAA,IAAAC,mBAAA;QACF,MAAMC,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,GAAG,CAAC,mCAAmC,EAAE;UACpEC,eAAe,EAAE;QACnB,CAAC,CAAC;QAEFC,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAE;UAC/CC,aAAa,EAAEL,QAAQ,CAACM,IAAI,CAACD,aAAa;UAC1Cb,IAAI,EAAEQ,QAAQ,CAACM,IAAI,CAACd,IAAI;UACxBe,IAAI,EAAEP,QAAQ,CAACM,IAAI,CAACC,IAAI;UACxBC,UAAU,EAAEzB;QACd,CAAC,CAAC;;QAEF;QACA,MAAM0B,YAAY,GAAG1B,eAAe,IAClCiB,QAAQ,CAACM,IAAI,CAACd,IAAI,KACjB,EAAAO,mBAAA,GAAAC,QAAQ,CAACM,IAAI,CAACC,IAAI,cAAAR,mBAAA,uBAAlBA,mBAAA,CAAoBR,KAAK,MAAK,6BAA6B,GAAGb,KAAK,CAACgC,KAAK,GAAGhC,KAAK,CAACe,QAAQ,CAAC;QAE9FU,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEK,YAAY,CAAC;;QAE3C;QACA,IAAIA,YAAY,KAAK/B,KAAK,CAACgC,KAAK,EAAE;UAChCP,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;UAC5CO,cAAc,CAAC,CAAC;UAChBC,cAAc,CAAC,CAAC;QAClB,CAAC,MAAM;UACLT,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;QACjD;QAEAP,aAAa,CAACG,QAAQ,CAACM,IAAI,CAAC;MAC9B,CAAC,CAAC,OAAOZ,KAAK,EAAE;QACdS,OAAO,CAACT,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDC,QAAQ,CAAC,2BAA2B,CAAC;MACvC;IACF,CAAC;IAEDG,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACf,eAAe,CAAC,CAAC;EAErB,MAAM4B,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,GAAG,CAAC,iCAAiC,EAAE;QAClEC,eAAe,EAAE;MACnB,CAAC,CAAC;MACFjB,YAAY,CAACe,QAAQ,CAACM,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACdS,OAAO,CAACT,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDC,QAAQ,CAAC,4BAA4B,CAAC;IACxC;EACF,CAAC;EAED,MAAMiB,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,GAAG,CAAC,qCAAqC,EAAE;QACtEC,eAAe,EAAE;MACnB,CAAC,CAAC;MACFf,YAAY,CAACa,QAAQ,CAACM,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACdS,OAAO,CAACT,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDC,QAAQ,CAAC,2BAA2B,CAAC;IACvC;EACF,CAAC;EAED,MAAMkB,oBAAoB,GAAIC,CAAC,IAAK;IAClC,MAAMxB,UAAU,GAAGwB,CAAC,CAACC,MAAM,CAACC,KAAK;IACjC,MAAMC,gBAAgB,GAAG/B,SAAS,CAACgC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAK9B,UAAU,CAAC;IACrED,UAAU,CAACgC,IAAI,KAAK;MAClB,GAAGA,IAAI;MACP/B,UAAU;MACVC,KAAK,EAAE,CAAA0B,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAE1B,KAAK,KAAI;IACpC,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAM+B,gBAAgB,GAAG,MAAAA,CAAOhC,UAAU,EAAEE,IAAI,KAAK;IACnD,IAAI;MAAA,IAAA+B,gBAAA,EAAAC,iBAAA,EAAAC,qBAAA,EAAAC,sBAAA;MACFvB,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAE;QAAEd,UAAU;QAAEE;MAAK,CAAC,CAAC;;MAE/D;MACA,IAAI,CAACF,UAAU,IAAI,CAACE,IAAI,EAAE;QACxBW,OAAO,CAACT,KAAK,CAAC,iDAAiD,EAAE;UAAEJ,UAAU;UAAEE;QAAK,CAAC,CAAC;QACtF;MACF;;MAEA;MACA,MAAMmC,SAAS,GACb,EAAAJ,gBAAA,GAAA3B,UAAU,CAACW,IAAI,cAAAgB,gBAAA,uBAAfA,gBAAA,CAAiBhC,KAAK,OAAAiC,iBAAA,GACtB5B,UAAU,CAACW,IAAI,cAAAiB,iBAAA,wBAAAC,qBAAA,GAAfD,iBAAA,CAAiBI,MAAM,cAAAH,qBAAA,wBAAAC,sBAAA,GAAvBD,qBAAA,CAA0B,CAAC,CAAC,cAAAC,sBAAA,uBAA5BA,sBAAA,CAA8BV,KAAK,KACnC,IAAI;MAENb,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEuB,SAAS,CAAC;;MAErD;MACA,IAAI,CAACA,SAAS,EAAE;QACdxB,OAAO,CAACT,KAAK,CAAC,6CAA6C,CAAC;QAC5D;MACF;;MAEA;MACA,MAAMmC,gBAAgB,GAAG3C,SAAS,CAACgC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAK9B,UAAU,CAAC;MAErE,IAAI,CAACuC,gBAAgB,EAAE;QACrB1B,OAAO,CAACT,KAAK,CAAC,qBAAqB,EAAEJ,UAAU,CAAC;QAChD;MACF;;MAEA;MACA,MAAMwC,aAAa,GAAG;QACpBxC,UAAU,EAAEA,UAAU;QACtBE,IAAI,EAAEA;MACR,CAAC;MAEDW,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAE0B,aAAa,CAAC;;MAElD;MACA,MAAM9B,QAAQ,GAAG,MAAMxB,KAAK,CAACuD,GAAG,CAC9B,iCAAiC,EACjCD,aAAa,EACb;QAAE5B,eAAe,EAAE;MAAK,CAC1B,CAAC;MAEDC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEJ,QAAQ,CAACM,IAAI,CAAC;;MAEnD;MACAK,cAAc,CAAC,CAAC;;MAEhB;MACAhC,KAAK,CAACqD,OAAO,CAAC,mBAAmBxC,IAAI,QAAQqC,gBAAgB,CAACI,IAAI,EAAE,CAAC;IAEvE,CAAC,CAAC,OAAOvC,KAAK,EAAE;MACdS,OAAO,CAACT,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;;MAE5C;MACA,IAAIA,KAAK,CAACM,QAAQ,EAAE;QAClB;QACAG,OAAO,CAACT,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACM,QAAQ,CAACM,IAAI,CAAC;QAC3D3B,KAAK,CAACe,KAAK,CAACA,KAAK,CAACM,QAAQ,CAACM,IAAI,CAAC4B,OAAO,IAAI,uBAAuB,CAAC;MACrE,CAAC,MAAM,IAAIxC,KAAK,CAACyC,OAAO,EAAE;QACxB;QACAhC,OAAO,CAACT,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACyC,OAAO,CAAC;QACrDxD,KAAK,CAACe,KAAK,CAAC,yBAAyB,CAAC;MACxC,CAAC,MAAM;QACL;QACAS,OAAO,CAACT,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACwC,OAAO,CAAC;QACzDvD,KAAK,CAACe,KAAK,CAAC,qBAAqB,CAAC;MACpC;IACF;EACF,CAAC;;EAED;EACA,IAAI,CAAC,CAAChB,KAAK,CAACgC,KAAK,CAAC,CAAC0B,QAAQ,CAACrD,eAAe,CAAC,EAAE;IAC5C,oBACEF,OAAA;MAAKwD,SAAS,EAAC,8BAA8B;MAAAC,QAAA,EAAC;IAE9C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAEV;EAEA,oBACE7D,OAAA;IAAKwD,SAAS,EAAC,oCAAoC;IAAAC,QAAA,eACjDzD,OAAA;MAAKwD,SAAS,EAAC,kDAAkD;MAAAC,QAAA,gBAC/DzD,OAAA;QAAIwD,SAAS,EAAC,qCAAqC;QAAAC,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAEvEhD,KAAK,iBACJb,OAAA;QAAKwD,SAAS,EAAC,+EAA+E;QAAC7C,IAAI,EAAC,OAAO;QAAA8C,QAAA,EACxG5C;MAAK;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,eAGD7D,OAAA;QAAM8D,QAAQ,EAAErB,gBAAiB;QAACe,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACrDzD,OAAA;UAAAyD,QAAA,gBACEzD,OAAA;YAAO+D,OAAO,EAAC,UAAU;YAACP,SAAS,EAAC,8CAA8C;YAAAC,QAAA,EAAC;UAEnF;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACR7D,OAAA;YACEuC,EAAE,EAAC,UAAU;YACbJ,KAAK,EAAE5B,OAAO,CAACE,UAAW;YAC1BuD,QAAQ,EAAEhC,oBAAqB;YAC/BwB,SAAS,EAAC,oFAAoF;YAC9FS,QAAQ;YAAAR,QAAA,gBAERzD,OAAA;cAAQmC,KAAK,EAAC,EAAE;cAAAsB,QAAA,EAAC;YAAkB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAC3CxD,SAAS,CAAC6D,GAAG,CAACC,QAAQ,iBACrBnE,OAAA;cAA0BmC,KAAK,EAAEgC,QAAQ,CAAC5B,EAAG;cAAAkB,QAAA,EAC1CU,QAAQ,CAACf;YAAI,GADHe,QAAQ,CAAC5B,EAAE;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEhB,CACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAEN7D,OAAA;UAAAyD,QAAA,gBACEzD,OAAA;YAAO+D,OAAO,EAAC,OAAO;YAACP,SAAS,EAAC,8CAA8C;YAAAC,QAAA,EAAC;UAEhF;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACR7D,OAAA;YACEoE,IAAI,EAAC,OAAO;YACZ7B,EAAE,EAAC,OAAO;YACVJ,KAAK,EAAE5B,OAAO,CAACG,KAAM;YACrB2D,QAAQ;YACRb,SAAS,EAAC,gGAAgG;YAC1Gc,WAAW,EAAC;UAAiC;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAEN7D,OAAA;UAAAyD,QAAA,gBACEzD,OAAA;YAAO+D,OAAO,EAAC,MAAM;YAACP,SAAS,EAAC,8CAA8C;YAAAC,QAAA,EAAC;UAE/E;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACR7D,OAAA;YACEuC,EAAE,EAAC,MAAM;YACTJ,KAAK,EAAE5B,OAAO,CAACI,IAAK;YACpBqD,QAAQ,EAAG/B,CAAC,IAAKzB,UAAU,CAACgC,IAAI,KAAK;cAAE,GAAGA,IAAI;cAAE7B,IAAI,EAAEsB,CAAC,CAACC,MAAM,CAACC;YAAM,CAAC,CAAC,CAAE;YACzEqB,SAAS,EAAC,oFAAoF;YAC9FS,QAAQ;YAAAR,QAAA,EAEPc,MAAM,CAACC,MAAM,CAAC3E,KAAK,CAAC,CAACqE,GAAG,CAACvD,IAAI,iBAC5BX,OAAA;cAAmBmC,KAAK,EAAExB,IAAK;cAAA8C,QAAA,EAC5B9C,IAAI,CAAC8D,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAG/D,IAAI,CAACgE,KAAK,CAAC,CAAC;YAAC,GADlChE,IAAI;cAAA+C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAET,CACT;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAEN7D,OAAA;UAAKwD,SAAS,EAAC,qBAAqB;UAAAC,QAAA,eAClCzD,OAAA;YACEoE,IAAI,EAAC,QAAQ;YACbZ,SAAS,EAAC,0EAA0E;YAAAC,QAAA,EACrF;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eAGP7D,OAAA;QAAKwD,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBzD,OAAA;UAAIwD,SAAS,EAAC,4BAA4B;UAAAC,QAAA,EAAC;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClE7D,OAAA;UAAKwD,SAAS,EAAC,iBAAiB;UAAAC,QAAA,eAC9BzD,OAAA;YAAOwD,SAAS,EAAC,qBAAqB;YAAAC,QAAA,gBACpCzD,OAAA;cAAOwD,SAAS,EAAC,YAAY;cAAAC,QAAA,eAC3BzD,OAAA;gBAAAyD,QAAA,gBACEzD,OAAA;kBAAIwD,SAAS,EAAC,gFAAgF;kBAAAC,QAAA,EAAC;gBAE/F;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACL7D,OAAA;kBAAIwD,SAAS,EAAC,gFAAgF;kBAAAC,QAAA,EAAC;gBAE/F;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,eACR7D,OAAA;cAAOwD,SAAS,EAAC,mCAAmC;cAAAC,QAAA,EACjDtD,SAAS,CAAC+D,GAAG,CAAC,CAACU,QAAQ,EAAEC,KAAK,kBAC7B7E,OAAA;gBAAAyD,QAAA,gBACEzD,OAAA;kBAAIwD,SAAS,EAAC,6BAA6B;kBAAAC,QAAA,EACxCmB,QAAQ,CAAClE;gBAAK;kBAAAgD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACb,CAAC,eACL7D,OAAA;kBAAIwD,SAAS,EAAC,6BAA6B;kBAAAC,QAAA,eACzCzD,OAAA;oBAAMwD,SAAS,EAAE,iEACfoB,QAAQ,CAACjE,IAAI,KAAKd,KAAK,CAACgC,KAAK,GACzB,yBAAyB,GACzB+C,QAAQ,CAACjE,IAAI,KAAKd,KAAK,CAACiF,OAAO,GAC/B,+BAA+B,GAC/B,6BAA6B,EAChC;oBAAArB,QAAA,EACAmB,QAAQ,CAACjE,IAAI,CAAC8D,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGE,QAAQ,CAACjE,IAAI,CAACgE,KAAK,CAAC,CAAC;kBAAC;oBAAAjB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC3D;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACL,CAAC;cAAA,GAdE,GAAGe,QAAQ,CAAClE,KAAK,IAAImE,KAAK,EAAE;gBAAAnB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAejC,CACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAED,eAAe5D,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
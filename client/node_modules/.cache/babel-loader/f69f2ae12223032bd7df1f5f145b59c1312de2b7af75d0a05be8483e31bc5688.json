{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { ROLES } from '../config/roles';\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  userRole: null,\n  error: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    loginSuccess: (state, action) => {\n      const {\n        user,\n        authenticated,\n        userRole\n      } = action.payload;\n\n      // Robust role assignment\n      const processedRole = userRole ? typeof userRole === 'object' ? userRole.role || userRole.name || 'guest' : userRole : 'guest';\n      console.log('AuthSlice - Login Success:', {\n        user,\n        authenticated,\n        processedRole\n      });\n      state.isAuthenticated = authenticated;\n      state.user = user;\n      state.userRole = processedRole.toLowerCase();\n      state.error = null;\n    },\n    logout: state => {\n      state.isAuthenticated = false;\n      state.user = null;\n      state.userRole = null;\n      state.error = null;\n    }\n  }\n});\nexport const {\n  loginSuccess,\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","ROLES","initialState","isAuthenticated","user","userRole","error","authSlice","name","reducers","loginSuccess","state","action","authenticated","payload","processedRole","role","console","log","toLowerCase","logout","actions","reducer"],"sources":["C:/Users/belya/Cursor projects/Budget tracker/client/src/store/authSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { ROLES } from '../config/roles';\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: null,\r\n  userRole: null,\r\n  error: null\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    loginSuccess: (state, action) => {\r\n      const { user, authenticated, userRole } = action.payload;\r\n      \r\n      // Robust role assignment\r\n      const processedRole = userRole \r\n        ? (typeof userRole === 'object' \r\n          ? (userRole.role || userRole.name || 'guest') \r\n          : userRole)\r\n        : 'guest';\r\n\r\n      console.log('AuthSlice - Login Success:', {\r\n        user,\r\n        authenticated,\r\n        processedRole\r\n      });\r\n\r\n      state.isAuthenticated = authenticated;\r\n      state.user = user;\r\n      state.userRole = processedRole.toLowerCase();\r\n      state.error = null;\r\n    },\r\n    logout: (state) => {\r\n      state.isAuthenticated = false;\r\n      state.user = null;\r\n      state.userRole = null;\r\n      state.error = null;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { loginSuccess, logout } = authSlice.actions;\r\nexport default authSlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,QAAQ,iBAAiB;AAEvC,MAAMC,YAAY,GAAG;EACnBC,eAAe,EAAE,KAAK;EACtBC,IAAI,EAAE,IAAI;EACVC,QAAQ,EAAE,IAAI;EACdC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAGP,WAAW,CAAC;EAC5BQ,IAAI,EAAE,MAAM;EACZN,YAAY;EACZO,QAAQ,EAAE;IACRC,YAAY,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/B,MAAM;QAAER,IAAI;QAAES,aAAa;QAAER;MAAS,CAAC,GAAGO,MAAM,CAACE,OAAO;;MAExD;MACA,MAAMC,aAAa,GAAGV,QAAQ,GACzB,OAAOA,QAAQ,KAAK,QAAQ,GAC1BA,QAAQ,CAACW,IAAI,IAAIX,QAAQ,CAACG,IAAI,IAAI,OAAO,GAC1CH,QAAQ,GACV,OAAO;MAEXY,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAE;QACxCd,IAAI;QACJS,aAAa;QACbE;MACF,CAAC,CAAC;MAEFJ,KAAK,CAACR,eAAe,GAAGU,aAAa;MACrCF,KAAK,CAACP,IAAI,GAAGA,IAAI;MACjBO,KAAK,CAACN,QAAQ,GAAGU,aAAa,CAACI,WAAW,CAAC,CAAC;MAC5CR,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDc,MAAM,EAAGT,KAAK,IAAK;MACjBA,KAAK,CAACR,eAAe,GAAG,KAAK;MAC7BQ,KAAK,CAACP,IAAI,GAAG,IAAI;MACjBO,KAAK,CAACN,QAAQ,GAAG,IAAI;MACrBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,YAAY;EAAEU;AAAO,CAAC,GAAGb,SAAS,CAACc,OAAO;AACzD,eAAed,SAAS,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
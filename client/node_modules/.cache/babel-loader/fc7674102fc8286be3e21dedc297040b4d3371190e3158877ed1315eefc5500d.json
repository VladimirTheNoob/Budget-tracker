{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\belya\\\\Cursor projects\\\\Budget tracker\\\\client\\\\src\\\\App.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { BrowserRouter, Route, Routes, Navigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './App.css';\nimport LoginButton from './components/LoginButton';\nimport LogoutButton from './components/LogoutButton';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport { useDispatch } from 'react-redux';\nimport { loginSuccess, logout } from './store/authSlice';\nimport Header from './components/Header';\n\n// Import your components\nimport TaskInput from './components/TaskInput';\nimport BudgetTracker from './components/BudgetTracker';\nimport GoalList from './components/GoalList';\nimport TaskList from './components/TaskList';\nimport AdminRoleManager from './components/AdminRoleManager';\nimport GoalSetting from './components/GoalSetting';\nimport GoalInput from './components/GoalInput';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ROLES = {\n  ADMIN: 'admin',\n  MANAGER: 'manager',\n  EMPLOYEE: 'employee'\n};\nfunction App() {\n  const dispatch = useDispatch();\n  const [activeTab, setActiveTab] = useState('list'); // 'list' or 'input'\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [userRole, setUserRole] = useState(null);\n  const [refreshTrigger, setRefreshTrigger] = useState(0);\n  const [tasks, setTasks] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const checkAuthStatus = useCallback(async () => {\n    try {\n      var _response$data$user, _response$data$user$e, _response$data$user$e2, _response$data$user2, _response$data$user2$, _response$data$user2$2;\n      const response = await axios.get('http://localhost:5000/auth/status', {\n        withCredentials: true\n      });\n      console.log('Full Auth Status Response:', response.data);\n\n      // Ensure role is set correctly\n      const role = response.data.role || (((_response$data$user = response.data.user) === null || _response$data$user === void 0 ? void 0 : (_response$data$user$e = _response$data$user.emails) === null || _response$data$user$e === void 0 ? void 0 : (_response$data$user$e2 = _response$data$user$e[0]) === null || _response$data$user$e2 === void 0 ? void 0 : _response$data$user$e2.value) === 'belyakovvladimirs@gmail.com' ? ROLES.ADMIN : ((_response$data$user2 = response.data.user) === null || _response$data$user2 === void 0 ? void 0 : (_response$data$user2$ = _response$data$user2.emails) === null || _response$data$user2$ === void 0 ? void 0 : (_response$data$user2$2 = _response$data$user2$[0]) === null || _response$data$user2$2 === void 0 ? void 0 : _response$data$user2$2.value) === 'vladimirbelyakov1981@gmail.com' ? ROLES.MANAGER : ROLES.EMPLOYEE);\n      console.log('Resolved Role:', role);\n      setIsAuthenticated(response.data.authenticated);\n      setUser(response.data.user);\n      setUserRole(role);\n\n      // Dispatch loginSuccess action to update Redux store\n      dispatch(loginSuccess({\n        user: response.data.user,\n        role: role\n      }));\n    } catch (error) {\n      console.error('Error checking auth status:', error);\n      setIsAuthenticated(false);\n      setUser(null);\n      setUserRole(null);\n      dispatch(logout());\n    }\n  }, [dispatch]);\n  useEffect(() => {\n    checkAuthStatus();\n  }, [checkAuthStatus]);\n  const handleLogout = async () => {\n    return new Promise(resolve => {\n      setIsAuthenticated(false);\n      setUser(null);\n      setUserRole(null);\n      dispatch(logout());\n      resolve();\n    });\n  };\n\n  // Add useEffect to load initial data\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      try {\n        const [tasksRes, employeesRes] = await Promise.all([axios.get('http://localhost:5000/api/tasks', {\n          withCredentials: true\n        }), axios.get('http://localhost:5000/api/employees', {\n          withCredentials: true,\n          validateStatus: status => status === 200 || status === 403\n        })]);\n        setTasks(tasksRes.data);\n\n        // Only set employees if the request was successful\n        if (employeesRes.status === 200) {\n          setEmployees(employeesRes.data);\n        } else {\n          console.warn('No permission to fetch employees');\n          // Optionally, show a user-friendly notification\n          alert('You do not have permission to view employee details.');\n          setEmployees([]);\n        }\n      } catch (error) {\n        console.error('Error fetching initial data:', error);\n        // Optionally, show a user-friendly notification\n        alert('An error occurred while fetching data. Please try again later.');\n        setTasks([]);\n        setEmployees([]);\n      }\n    };\n    if (isAuthenticated) {\n      fetchInitialData();\n    }\n  }, [isAuthenticated]);\n\n  // Render navigation tabs based on user role\n  const renderNavTabs = () => {\n    console.log('Rendering Nav Tabs - User Role:', userRole);\n    const tabs = [{\n      name: 'Task List',\n      value: 'list'\n    }, {\n      name: 'Task Input',\n      value: 'input'\n    }];\n\n    // Add admin tab for admin and manager roles\n    if ([ROLES.ADMIN, ROLES.MANAGER].includes(userRole)) {\n      console.log('Adding Admin Tab');\n      tabs.push({\n        name: 'Admin',\n        value: 'admin'\n      });\n    }\n    return tabs.map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setActiveTab(tab.value),\n      className: `inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium ${activeTab === tab.value ? 'border-indigo-500 text-gray-900' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}`,\n      children: tab.name\n    }, tab.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this));\n  };\n\n  // Main content rendering\n  const renderMainContent = () => {\n    console.log('Rendering Main Content:', {\n      isAuthenticated,\n      activeTab,\n      userRole\n    });\n    if (!isAuthenticated) {\n      return /*#__PURE__*/_jsxDEV(LoginButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 14\n      }, this);\n    }\n    switch (activeTab) {\n      case 'list':\n        return /*#__PURE__*/_jsxDEV(TaskList, {\n          refreshTrigger: refreshTrigger,\n          tasks: tasks,\n          employees: employees\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 16\n        }, this);\n      case 'input':\n        return /*#__PURE__*/_jsxDEV(TaskInput, {\n          onDataSaved: () => setRefreshTrigger(prev => prev + 1),\n          tasks: tasks,\n          employees: employees,\n          setTasks: setTasks,\n          setEmployees: setEmployees\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 16\n        }, this);\n      case 'admin':\n        if ([ROLES.ADMIN, ROLES.MANAGER].includes(userRole)) {\n          console.log('Rendering Admin Role Manager');\n          return /*#__PURE__*/_jsxDEV(AdminRoleManager, {\n            currentUserRole: userRole\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 18\n          }, this);\n        } else {\n          console.log('Access Denied for Admin Tab');\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center text-red-600\",\n            children: \"Access Denied: Insufficient Permissions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this);\n        }\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    future: {\n      v7_startTransition: true,\n      v7_relativeSplatPath: true\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-100\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: !isAuthenticated ? /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col items-center justify-center min-h-[60vh]\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-2xl font-bold mb-8 text-gray-800\",\n                children: \"Welcome to Budget Tracker\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(LoginButton, {\n                className: \"transform scale-125 bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-6 rounded-lg shadow-lg hover:shadow-xl transition duration-200\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: renderMainContent()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 42\n              }, this),\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                index: true,\n                element: /*#__PURE__*/_jsxDEV(TaskList, {\n                  refreshTrigger: refreshTrigger,\n                  tasks: tasks,\n                  employees: employees\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"input\",\n                element: /*#__PURE__*/_jsxDEV(TaskInput, {\n                  onDataSaved: () => setRefreshTrigger(prev => prev + 1),\n                  tasks: tasks,\n                  employees: employees,\n                  setTasks: setTasks,\n                  setEmployees: setEmployees\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"admin\",\n                element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n                  allowedRoles: ['admin', 'manager'],\n                  children: /*#__PURE__*/_jsxDEV(AdminRoleManager, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/tasks\",\n              element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n                element: /*#__PURE__*/_jsxDEV(TaskList, {\n                  refreshTrigger: refreshTrigger,\n                  tasks: tasks,\n                  employees: employees\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 30\n                }, this),\n                allowedRoles: [ROLES.ADMIN, ROLES.MANAGER, ROLES.EMPLOYEE],\n                isAuthenticated: isAuthenticated,\n                userRole: userRole\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/tasks/input\",\n              element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n                element: /*#__PURE__*/_jsxDEV(TaskInput, {\n                  onDataSaved: () => setRefreshTrigger(prev => prev + 1),\n                  tasks: tasks,\n                  employees: employees,\n                  setTasks: setTasks,\n                  setEmployees: setEmployees\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 30\n                }, this),\n                allowedRoles: [ROLES.ADMIN, ROLES.MANAGER, ROLES.EMPLOYEE],\n                isAuthenticated: isAuthenticated,\n                userRole: userRole\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/goals\",\n              element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n                allowedRoles: ['admin', 'manager'],\n                children: /*#__PURE__*/_jsxDEV(GoalSetting, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/goals/input\",\n              element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n                element: /*#__PURE__*/_jsxDEV(GoalInput, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 30\n                }, this),\n                allowedRoles: [ROLES.ADMIN, ROLES.MANAGER],\n                isAuthenticated: isAuthenticated,\n                userRole: userRole\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","BrowserRouter","Route","Routes","Navigate","axios","LoginButton","LogoutButton","ProtectedRoute","useDispatch","loginSuccess","logout","Header","TaskInput","BudgetTracker","GoalList","TaskList","AdminRoleManager","GoalSetting","GoalInput","jsxDEV","_jsxDEV","Fragment","_Fragment","ROLES","ADMIN","MANAGER","EMPLOYEE","App","dispatch","activeTab","setActiveTab","isAuthenticated","setIsAuthenticated","user","setUser","userRole","setUserRole","refreshTrigger","setRefreshTrigger","tasks","setTasks","employees","setEmployees","checkAuthStatus","_response$data$user","_response$data$user$e","_response$data$user$e2","_response$data$user2","_response$data$user2$","_response$data$user2$2","response","get","withCredentials","console","log","data","role","emails","value","authenticated","error","handleLogout","Promise","resolve","fetchInitialData","tasksRes","employeesRes","all","validateStatus","status","warn","alert","renderNavTabs","tabs","name","includes","push","map","tab","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderMainContent","onDataSaved","prev","currentUserRole","future","v7_startTransition","v7_relativeSplatPath","path","element","index","allowedRoles"],"sources":["C:/Users/belya/Cursor projects/Budget tracker/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { BrowserRouter, Route, Routes, Navigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport LoginButton from './components/LoginButton';\r\nimport LogoutButton from './components/LogoutButton';\r\nimport ProtectedRoute from './components/ProtectedRoute';\r\nimport { useDispatch } from 'react-redux';\r\nimport { loginSuccess, logout } from './store/authSlice';\r\nimport Header from './components/Header';\r\n\r\n// Import your components\r\nimport TaskInput from './components/TaskInput';\r\nimport BudgetTracker from './components/BudgetTracker';\r\nimport GoalList from './components/GoalList';\r\nimport TaskList from './components/TaskList';\r\nimport AdminRoleManager from './components/AdminRoleManager';\r\nimport GoalSetting from './components/GoalSetting';\r\nimport GoalInput from './components/GoalInput';\r\n\r\nconst ROLES = {\r\n  ADMIN: 'admin',\r\n  MANAGER: 'manager', \r\n  EMPLOYEE: 'employee'\r\n};\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const [activeTab, setActiveTab] = useState('list'); // 'list' or 'input'\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [userRole, setUserRole] = useState(null);\r\n  const [refreshTrigger, setRefreshTrigger] = useState(0);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  const checkAuthStatus = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/auth/status', { \r\n        withCredentials: true \r\n      });\r\n      \r\n      console.log('Full Auth Status Response:', response.data);\r\n      \r\n      // Ensure role is set correctly\r\n      const role = response.data.role || \r\n        (response.data.user?.emails?.[0]?.value === 'belyakovvladimirs@gmail.com' ? ROLES.ADMIN : \r\n         response.data.user?.emails?.[0]?.value === 'vladimirbelyakov1981@gmail.com' ? ROLES.MANAGER :\r\n         ROLES.EMPLOYEE);\r\n      \r\n      console.log('Resolved Role:', role);\r\n      \r\n      setIsAuthenticated(response.data.authenticated);\r\n      setUser(response.data.user);\r\n      setUserRole(role);\r\n\r\n      // Dispatch loginSuccess action to update Redux store\r\n      dispatch(loginSuccess({\r\n        user: response.data.user,\r\n        role: role\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error checking auth status:', error);\r\n      setIsAuthenticated(false);\r\n      setUser(null);\r\n      setUserRole(null);\r\n      dispatch(logout());\r\n    }\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, [checkAuthStatus]);\r\n\r\n  const handleLogout = async () => {\r\n    return new Promise((resolve) => {\r\n      setIsAuthenticated(false);\r\n      setUser(null);\r\n      setUserRole(null);\r\n      dispatch(logout());\r\n      resolve();\r\n    });\r\n  };\r\n\r\n  // Add useEffect to load initial data\r\n  useEffect(() => {\r\n    const fetchInitialData = async () => {\r\n      try {\r\n        const [tasksRes, employeesRes] = await Promise.all([\r\n          axios.get('http://localhost:5000/api/tasks', { withCredentials: true }),\r\n          axios.get('http://localhost:5000/api/employees', { \r\n            withCredentials: true,\r\n            validateStatus: (status) => status === 200 || status === 403 \r\n          })\r\n        ]);\r\n        \r\n        setTasks(tasksRes.data);\r\n        \r\n        // Only set employees if the request was successful\r\n        if (employeesRes.status === 200) {\r\n          setEmployees(employeesRes.data);\r\n        } else {\r\n          console.warn('No permission to fetch employees');\r\n          // Optionally, show a user-friendly notification\r\n          alert('You do not have permission to view employee details.');\r\n          setEmployees([]);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching initial data:', error);\r\n        // Optionally, show a user-friendly notification\r\n        alert('An error occurred while fetching data. Please try again later.');\r\n        setTasks([]);\r\n        setEmployees([]);\r\n      }\r\n    };\r\n    \r\n    if (isAuthenticated) {\r\n      fetchInitialData();\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  // Render navigation tabs based on user role\r\n  const renderNavTabs = () => {\r\n    console.log('Rendering Nav Tabs - User Role:', userRole);\r\n    const tabs = [\r\n      { name: 'Task List', value: 'list' },\r\n      { name: 'Task Input', value: 'input' }\r\n    ];\r\n\r\n    // Add admin tab for admin and manager roles\r\n    if ([ROLES.ADMIN, ROLES.MANAGER].includes(userRole)) {\r\n      console.log('Adding Admin Tab');\r\n      tabs.push({ name: 'Admin', value: 'admin' });\r\n    }\r\n\r\n    return tabs.map(tab => (\r\n      <button\r\n        key={tab.value}\r\n        onClick={() => setActiveTab(tab.value)}\r\n        className={`inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium ${\r\n          activeTab === tab.value\r\n            ? 'border-indigo-500 text-gray-900'\r\n            : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n        }`}\r\n      >\r\n        {tab.name}\r\n      </button>\r\n    ));\r\n  };\r\n\r\n  // Main content rendering\r\n  const renderMainContent = () => {\r\n    console.log('Rendering Main Content:', {\r\n      isAuthenticated,\r\n      activeTab,\r\n      userRole\r\n    });\r\n\r\n    if (!isAuthenticated) {\r\n      return <LoginButton />;\r\n    }\r\n\r\n    switch (activeTab) {\r\n      case 'list':\r\n        return <TaskList \r\n          refreshTrigger={refreshTrigger}\r\n          tasks={tasks}\r\n          employees={employees}\r\n        />;\r\n      case 'input':\r\n        return <TaskInput \r\n          onDataSaved={() => setRefreshTrigger(prev => prev + 1)}\r\n          tasks={tasks}\r\n          employees={employees}\r\n          setTasks={setTasks}\r\n          setEmployees={setEmployees}\r\n        />;\r\n      case 'admin':\r\n        if ([ROLES.ADMIN, ROLES.MANAGER].includes(userRole)) {\r\n          console.log('Rendering Admin Role Manager');\r\n          return <AdminRoleManager currentUserRole={userRole} />;\r\n        } else {\r\n          console.log('Access Denied for Admin Tab');\r\n          return (\r\n            <div className=\"text-center text-red-600\">\r\n              Access Denied: Insufficient Permissions\r\n            </div>\r\n          );\r\n        }\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BrowserRouter\r\n      future={{\r\n        v7_startTransition: true,\r\n        v7_relativeSplatPath: true,\r\n      }}\r\n    >\r\n      <div className=\"min-h-screen bg-gray-100\">\r\n        {/* Navigation */}\r\n        <Header />\r\n\r\n        {/* Main Content */}\r\n        <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n          <Routes>\r\n            {!isAuthenticated ? (\r\n              <Route path=\"*\" element={\r\n                <div className=\"flex flex-col items-center justify-center min-h-[60vh]\">\r\n                  <h1 className=\"text-2xl font-bold mb-8 text-gray-800\">Welcome to Budget Tracker</h1>\r\n                  <LoginButton className=\"transform scale-125 bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-6 rounded-lg shadow-lg hover:shadow-xl transition duration-200\" />\r\n                </div>\r\n              } />\r\n            ) : (\r\n              <>\r\n                <Route path=\"/\" element={<div>{renderMainContent()}</div>}>\r\n                  <Route index element={\r\n                    <TaskList \r\n                      refreshTrigger={refreshTrigger}\r\n                      tasks={tasks}\r\n                      employees={employees}\r\n                    />\r\n                  } />\r\n                  <Route path=\"input\" element={\r\n                    <TaskInput \r\n                      onDataSaved={() => setRefreshTrigger(prev => prev + 1)}\r\n                      tasks={tasks}\r\n                      employees={employees}\r\n                      setTasks={setTasks}\r\n                      setEmployees={setEmployees}\r\n                    />\r\n                  } />\r\n                  <Route path=\"admin\" element={\r\n                    <ProtectedRoute allowedRoles={['admin', 'manager']}>\r\n                      <AdminRoleManager />\r\n                    </ProtectedRoute>\r\n                  } />\r\n                </Route>\r\n                <Route path=\"/tasks\" element={\r\n                  <ProtectedRoute\r\n                    element={<TaskList \r\n                      refreshTrigger={refreshTrigger}\r\n                      tasks={tasks}\r\n                      employees={employees}\r\n                    />}\r\n                    allowedRoles={[ROLES.ADMIN, ROLES.MANAGER, ROLES.EMPLOYEE]}\r\n                    isAuthenticated={isAuthenticated}\r\n                    userRole={userRole}\r\n                  />\r\n                } />\r\n                <Route path=\"/tasks/input\" element={\r\n                  <ProtectedRoute\r\n                    element={<TaskInput \r\n                      onDataSaved={() => setRefreshTrigger(prev => prev + 1)}\r\n                      tasks={tasks}\r\n                      employees={employees}\r\n                      setTasks={setTasks}\r\n                      setEmployees={setEmployees}\r\n                    />}\r\n                    allowedRoles={[ROLES.ADMIN, ROLES.MANAGER, ROLES.EMPLOYEE]}\r\n                    isAuthenticated={isAuthenticated}\r\n                    userRole={userRole}\r\n                  />\r\n                } />\r\n                <Route path=\"/goals\" element={\r\n                  <ProtectedRoute allowedRoles={['admin', 'manager']}>\r\n                    <GoalSetting />\r\n                  </ProtectedRoute>\r\n                } />\r\n                <Route path=\"/goals/input\" element={\r\n                  <ProtectedRoute\r\n                    element={<GoalInput />}\r\n                    allowedRoles={[ROLES.ADMIN, ROLES.MANAGER]}\r\n                    isAuthenticated={isAuthenticated}\r\n                    userRole={userRole}\r\n                  />\r\n                } />\r\n              </>\r\n            )}\r\n          </Routes>\r\n        </main>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,aAAa,EAAEC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,kBAAkB;AACzE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,YAAY,EAAEC,MAAM,QAAQ,mBAAmB;AACxD,OAAOC,MAAM,MAAM,qBAAqB;;AAExC;AACA,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,KAAK,GAAG;EACZC,KAAK,EAAE,OAAO;EACdC,OAAO,EAAE,SAAS;EAClBC,QAAQ,EAAE;AACZ,CAAC;AAED,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,QAAQ,GAAGpB,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACqB,SAAS,EAAEC,YAAY,CAAC,GAAGjC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;EACpD,MAAM,CAACkC,eAAe,EAAEC,kBAAkB,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACoC,IAAI,EAAEC,OAAO,CAAC,GAAGrC,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACsC,QAAQ,EAAEC,WAAW,CAAC,GAAGvC,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACwC,cAAc,EAAEC,iBAAiB,CAAC,GAAGzC,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAAC0C,KAAK,EAAEC,QAAQ,CAAC,GAAG3C,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC4C,SAAS,EAAEC,YAAY,CAAC,GAAG7C,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAM8C,eAAe,GAAG5C,WAAW,CAAC,YAAY;IAC9C,IAAI;MAAA,IAAA6C,mBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,oBAAA,EAAAC,qBAAA,EAAAC,sBAAA;MACF,MAAMC,QAAQ,GAAG,MAAM9C,KAAK,CAAC+C,GAAG,CAAC,mCAAmC,EAAE;QACpEC,eAAe,EAAE;MACnB,CAAC,CAAC;MAEFC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEJ,QAAQ,CAACK,IAAI,CAAC;;MAExD;MACA,MAAMC,IAAI,GAAGN,QAAQ,CAACK,IAAI,CAACC,IAAI,KAC5B,EAAAZ,mBAAA,GAAAM,QAAQ,CAACK,IAAI,CAACtB,IAAI,cAAAW,mBAAA,wBAAAC,qBAAA,GAAlBD,mBAAA,CAAoBa,MAAM,cAAAZ,qBAAA,wBAAAC,sBAAA,GAA1BD,qBAAA,CAA6B,CAAC,CAAC,cAAAC,sBAAA,uBAA/BA,sBAAA,CAAiCY,KAAK,MAAK,6BAA6B,GAAGnC,KAAK,CAACC,KAAK,GACtF,EAAAuB,oBAAA,GAAAG,QAAQ,CAACK,IAAI,CAACtB,IAAI,cAAAc,oBAAA,wBAAAC,qBAAA,GAAlBD,oBAAA,CAAoBU,MAAM,cAAAT,qBAAA,wBAAAC,sBAAA,GAA1BD,qBAAA,CAA6B,CAAC,CAAC,cAAAC,sBAAA,uBAA/BA,sBAAA,CAAiCS,KAAK,MAAK,gCAAgC,GAAGnC,KAAK,CAACE,OAAO,GAC3FF,KAAK,CAACG,QAAQ,CAAC;MAElB2B,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEE,IAAI,CAAC;MAEnCxB,kBAAkB,CAACkB,QAAQ,CAACK,IAAI,CAACI,aAAa,CAAC;MAC/CzB,OAAO,CAACgB,QAAQ,CAACK,IAAI,CAACtB,IAAI,CAAC;MAC3BG,WAAW,CAACoB,IAAI,CAAC;;MAEjB;MACA5B,QAAQ,CAACnB,YAAY,CAAC;QACpBwB,IAAI,EAAEiB,QAAQ,CAACK,IAAI,CAACtB,IAAI;QACxBuB,IAAI,EAAEA;MACR,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdP,OAAO,CAACO,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD5B,kBAAkB,CAAC,KAAK,CAAC;MACzBE,OAAO,CAAC,IAAI,CAAC;MACbE,WAAW,CAAC,IAAI,CAAC;MACjBR,QAAQ,CAAClB,MAAM,CAAC,CAAC,CAAC;IACpB;EACF,CAAC,EAAE,CAACkB,QAAQ,CAAC,CAAC;EAEd9B,SAAS,CAAC,MAAM;IACd6C,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACA,eAAe,CAAC,CAAC;EAErB,MAAMkB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;MAC9B/B,kBAAkB,CAAC,KAAK,CAAC;MACzBE,OAAO,CAAC,IAAI,CAAC;MACbE,WAAW,CAAC,IAAI,CAAC;MACjBR,QAAQ,CAAClB,MAAM,CAAC,CAAC,CAAC;MAClBqD,OAAO,CAAC,CAAC;IACX,CAAC,CAAC;EACJ,CAAC;;EAED;EACAjE,SAAS,CAAC,MAAM;IACd,MAAMkE,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAM,CAACC,QAAQ,EAAEC,YAAY,CAAC,GAAG,MAAMJ,OAAO,CAACK,GAAG,CAAC,CACjD/D,KAAK,CAAC+C,GAAG,CAAC,iCAAiC,EAAE;UAAEC,eAAe,EAAE;QAAK,CAAC,CAAC,EACvEhD,KAAK,CAAC+C,GAAG,CAAC,qCAAqC,EAAE;UAC/CC,eAAe,EAAE,IAAI;UACrBgB,cAAc,EAAGC,MAAM,IAAKA,MAAM,KAAK,GAAG,IAAIA,MAAM,KAAK;QAC3D,CAAC,CAAC,CACH,CAAC;QAEF7B,QAAQ,CAACyB,QAAQ,CAACV,IAAI,CAAC;;QAEvB;QACA,IAAIW,YAAY,CAACG,MAAM,KAAK,GAAG,EAAE;UAC/B3B,YAAY,CAACwB,YAAY,CAACX,IAAI,CAAC;QACjC,CAAC,MAAM;UACLF,OAAO,CAACiB,IAAI,CAAC,kCAAkC,CAAC;UAChD;UACAC,KAAK,CAAC,sDAAsD,CAAC;UAC7D7B,YAAY,CAAC,EAAE,CAAC;QAClB;MACF,CAAC,CAAC,OAAOkB,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpD;QACAW,KAAK,CAAC,gEAAgE,CAAC;QACvE/B,QAAQ,CAAC,EAAE,CAAC;QACZE,YAAY,CAAC,EAAE,CAAC;MAClB;IACF,CAAC;IAED,IAAIX,eAAe,EAAE;MACnBiC,gBAAgB,CAAC,CAAC;IACpB;EACF,CAAC,EAAE,CAACjC,eAAe,CAAC,CAAC;;EAErB;EACA,MAAMyC,aAAa,GAAGA,CAAA,KAAM;IAC1BnB,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEnB,QAAQ,CAAC;IACxD,MAAMsC,IAAI,GAAG,CACX;MAAEC,IAAI,EAAE,WAAW;MAAEhB,KAAK,EAAE;IAAO,CAAC,EACpC;MAAEgB,IAAI,EAAE,YAAY;MAAEhB,KAAK,EAAE;IAAQ,CAAC,CACvC;;IAED;IACA,IAAI,CAACnC,KAAK,CAACC,KAAK,EAAED,KAAK,CAACE,OAAO,CAAC,CAACkD,QAAQ,CAACxC,QAAQ,CAAC,EAAE;MACnDkB,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/BmB,IAAI,CAACG,IAAI,CAAC;QAAEF,IAAI,EAAE,OAAO;QAAEhB,KAAK,EAAE;MAAQ,CAAC,CAAC;IAC9C;IAEA,OAAOe,IAAI,CAACI,GAAG,CAACC,GAAG,iBACjB1D,OAAA;MAEE2D,OAAO,EAAEA,CAAA,KAAMjD,YAAY,CAACgD,GAAG,CAACpB,KAAK,CAAE;MACvCsB,SAAS,EAAE,qEACTnD,SAAS,KAAKiD,GAAG,CAACpB,KAAK,GACnB,iCAAiC,GACjC,4EAA4E,EAC/E;MAAAuB,QAAA,EAEFH,GAAG,CAACJ;IAAI,GARJI,GAAG,CAACpB,KAAK;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASR,CACT,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9BjC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAE;MACrCvB,eAAe;MACfF,SAAS;MACTM;IACF,CAAC,CAAC;IAEF,IAAI,CAACJ,eAAe,EAAE;MACpB,oBAAOX,OAAA,CAACf,WAAW;QAAA6E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACxB;IAEA,QAAQxD,SAAS;MACf,KAAK,MAAM;QACT,oBAAOT,OAAA,CAACL,QAAQ;UACdsB,cAAc,EAAEA,cAAe;UAC/BE,KAAK,EAAEA,KAAM;UACbE,SAAS,EAAEA;QAAU;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC;MACJ,KAAK,OAAO;QACV,oBAAOjE,OAAA,CAACR,SAAS;UACf2E,WAAW,EAAEA,CAAA,KAAMjD,iBAAiB,CAACkD,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAE;UACvDjD,KAAK,EAAEA,KAAM;UACbE,SAAS,EAAEA,SAAU;UACrBD,QAAQ,EAAEA,QAAS;UACnBE,YAAY,EAAEA;QAAa;UAAAwC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC;MACJ,KAAK,OAAO;QACV,IAAI,CAAC9D,KAAK,CAACC,KAAK,EAAED,KAAK,CAACE,OAAO,CAAC,CAACkD,QAAQ,CAACxC,QAAQ,CAAC,EAAE;UACnDkB,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;UAC3C,oBAAOlC,OAAA,CAACJ,gBAAgB;YAACyE,eAAe,EAAEtD;UAAS;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QACxD,CAAC,MAAM;UACLhC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;UAC1C,oBACElC,OAAA;YAAK4D,SAAS,EAAC,0BAA0B;YAAAC,QAAA,EAAC;UAE1C;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAEV;MACF;QACE,OAAO,IAAI;IACf;EACF,CAAC;EAED,oBACEjE,OAAA,CAACpB,aAAa;IACZ0F,MAAM,EAAE;MACNC,kBAAkB,EAAE,IAAI;MACxBC,oBAAoB,EAAE;IACxB,CAAE;IAAAX,QAAA,eAEF7D,OAAA;MAAK4D,SAAS,EAAC,0BAA0B;MAAAC,QAAA,gBAEvC7D,OAAA,CAACT,MAAM;QAAAuE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAGVjE,OAAA;QAAM4D,SAAS,EAAC,wCAAwC;QAAAC,QAAA,eACtD7D,OAAA,CAAClB,MAAM;UAAA+E,QAAA,EACJ,CAAClD,eAAe,gBACfX,OAAA,CAACnB,KAAK;YAAC4F,IAAI,EAAC,GAAG;YAACC,OAAO,eACrB1E,OAAA;cAAK4D,SAAS,EAAC,wDAAwD;cAAAC,QAAA,gBACrE7D,OAAA;gBAAI4D,SAAS,EAAC,uCAAuC;gBAAAC,QAAA,EAAC;cAAyB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACpFjE,OAAA,CAACf,WAAW;gBAAC2E,SAAS,EAAC;cAA+I;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtK;UACN;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAEJjE,OAAA,CAAAE,SAAA;YAAA2D,QAAA,gBACE7D,OAAA,CAACnB,KAAK;cAAC4F,IAAI,EAAC,GAAG;cAACC,OAAO,eAAE1E,OAAA;gBAAA6D,QAAA,EAAMK,iBAAiB,CAAC;cAAC;gBAAAJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAE;cAAAJ,QAAA,gBACxD7D,OAAA,CAACnB,KAAK;gBAAC8F,KAAK;gBAACD,OAAO,eAClB1E,OAAA,CAACL,QAAQ;kBACPsB,cAAc,EAAEA,cAAe;kBAC/BE,KAAK,EAAEA,KAAM;kBACbE,SAAS,EAAEA;gBAAU;kBAAAyC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACtB;cACF;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACJjE,OAAA,CAACnB,KAAK;gBAAC4F,IAAI,EAAC,OAAO;gBAACC,OAAO,eACzB1E,OAAA,CAACR,SAAS;kBACR2E,WAAW,EAAEA,CAAA,KAAMjD,iBAAiB,CAACkD,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAE;kBACvDjD,KAAK,EAAEA,KAAM;kBACbE,SAAS,EAAEA,SAAU;kBACrBD,QAAQ,EAAEA,QAAS;kBACnBE,YAAY,EAAEA;gBAAa;kBAAAwC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC5B;cACF;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACJjE,OAAA,CAACnB,KAAK;gBAAC4F,IAAI,EAAC,OAAO;gBAACC,OAAO,eACzB1E,OAAA,CAACb,cAAc;kBAACyF,YAAY,EAAE,CAAC,OAAO,EAAE,SAAS,CAAE;kBAAAf,QAAA,eACjD7D,OAAA,CAACJ,gBAAgB;oBAAAkE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACN;cACjB;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACRjE,OAAA,CAACnB,KAAK;cAAC4F,IAAI,EAAC,QAAQ;cAACC,OAAO,eAC1B1E,OAAA,CAACb,cAAc;gBACbuF,OAAO,eAAE1E,OAAA,CAACL,QAAQ;kBAChBsB,cAAc,EAAEA,cAAe;kBAC/BE,KAAK,EAAEA,KAAM;kBACbE,SAAS,EAAEA;gBAAU;kBAAAyC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACtB,CAAE;gBACHW,YAAY,EAAE,CAACzE,KAAK,CAACC,KAAK,EAAED,KAAK,CAACE,OAAO,EAAEF,KAAK,CAACG,QAAQ,CAAE;gBAC3DK,eAAe,EAAEA,eAAgB;gBACjCI,QAAQ,EAAEA;cAAS;gBAAA+C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpB;YACF;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACJjE,OAAA,CAACnB,KAAK;cAAC4F,IAAI,EAAC,cAAc;cAACC,OAAO,eAChC1E,OAAA,CAACb,cAAc;gBACbuF,OAAO,eAAE1E,OAAA,CAACR,SAAS;kBACjB2E,WAAW,EAAEA,CAAA,KAAMjD,iBAAiB,CAACkD,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAE;kBACvDjD,KAAK,EAAEA,KAAM;kBACbE,SAAS,EAAEA,SAAU;kBACrBD,QAAQ,EAAEA,QAAS;kBACnBE,YAAY,EAAEA;gBAAa;kBAAAwC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC5B,CAAE;gBACHW,YAAY,EAAE,CAACzE,KAAK,CAACC,KAAK,EAAED,KAAK,CAACE,OAAO,EAAEF,KAAK,CAACG,QAAQ,CAAE;gBAC3DK,eAAe,EAAEA,eAAgB;gBACjCI,QAAQ,EAAEA;cAAS;gBAAA+C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpB;YACF;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACJjE,OAAA,CAACnB,KAAK;cAAC4F,IAAI,EAAC,QAAQ;cAACC,OAAO,eAC1B1E,OAAA,CAACb,cAAc;gBAACyF,YAAY,EAAE,CAAC,OAAO,EAAE,SAAS,CAAE;gBAAAf,QAAA,eACjD7D,OAAA,CAACH,WAAW;kBAAAiE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD;YACjB;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACJjE,OAAA,CAACnB,KAAK;cAAC4F,IAAI,EAAC,cAAc;cAACC,OAAO,eAChC1E,OAAA,CAACb,cAAc;gBACbuF,OAAO,eAAE1E,OAAA,CAACF,SAAS;kBAAAgE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAE;gBACvBW,YAAY,EAAE,CAACzE,KAAK,CAACC,KAAK,EAAED,KAAK,CAACE,OAAO,CAAE;gBAC3CM,eAAe,EAAEA,eAAgB;gBACjCI,QAAQ,EAAEA;cAAS;gBAAA+C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpB;YACF;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA,eACJ;QACH;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEpB;AAEA,eAAe1D,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
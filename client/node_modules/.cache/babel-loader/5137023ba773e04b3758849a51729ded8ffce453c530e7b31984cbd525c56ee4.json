{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\belya\\\\Cursor projects\\\\Budget tracker\\\\client\\\\src\\\\components\\\\TaskInput.js\";\nimport React, { useState, useEffect } from 'react';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskInput = () => {\n  // State to manage form inputs\n  const [task, setTask] = useState({\n    taskName: '',\n    employee: '',\n    date: '',\n    comments: ''\n  });\n\n  // State for bulk tasks\n  const [bulkTasks, setBulkTasks] = useState('');\n  const [parsedTasks, setParsedTasks] = useState([]);\n\n  // State for employee-department input\n  const [bulkEmployeeDepartment, setBulkEmployeeDepartment] = useState('');\n  const [parsedEmployeeDepartment, setParsedEmployeeDepartment] = useState([]);\n\n  // Handle bulk tasks input\n  const handleBulkTasksChange = e => {\n    const value = e.target.value;\n    setBulkTasks(value);\n    // Parse tasks (split by new line)\n    const tasks = value.split('\\n').filter(task => task.trim() !== '');\n    setParsedTasks(tasks);\n  };\n\n  // Handle employee-department input\n  const handleBulkEmployeeDepartmentChange = e => {\n    const value = e.target.value;\n    setBulkEmployeeDepartment(value);\n    // Parse employee-department pairs (split by new line and delimiter)\n    const pairs = value.split('\\n').filter(pair => pair.trim() !== '');\n    const employeeDepartment = pairs.map(pair => {\n      const [employee, department] = pair.split(';').map(item => item.trim());\n      return {\n        employee,\n        department\n      };\n    });\n    setParsedEmployeeDepartment(employeeDepartment);\n  };\n\n  // Handle task selection from parsed tasks\n  const handleTaskSelection = e => {\n    const selectedValue = e.target.value;\n    setTask(prev => ({\n      ...prev,\n      taskName: selectedValue\n    }));\n  };\n\n  // Handle input changes\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'employee') {\n      const selectedPair = parsedEmployeeDepartment.find(pair => pair.employee === value);\n      setTask(prevTask => ({\n        ...prevTask,\n        employee: selectedPair ? selectedPair.employee : '',\n        department: selectedPair ? selectedPair.department : ''\n      }));\n    } else {\n      setTask(prevTask => ({\n        ...prevTask,\n        [name]: value\n      }));\n    }\n  };\n\n  // Handle bulk data submission\n  const handleBulkDataSubmission = async () => {\n    try {\n      // Save tasks to database\n      if (parsedTasks.length > 0) {\n        console.log('Sending bulk tasks:', parsedTasks);\n        const tasksData = parsedTasks.map(task => ({\n          name: task\n        }));\n        const tasksResponse = await api.post('/api/bulk-tasks', {\n          tasks: tasksData\n        });\n        console.log('Bulk tasks response:', tasksResponse.data);\n      }\n\n      // Save employee-department pairs to database\n      if (parsedEmployeeDepartment.length > 0) {\n        console.log('Sending employee-department pairs:', parsedEmployeeDepartment);\n        const pairsResponse = await api.post('/api/employee-departments', {\n          employeeDepartments: parsedEmployeeDepartment\n        });\n        console.log('Employee-department pairs response:', pairsResponse.data);\n      }\n\n      // Clear bulk input fields after successful submission\n      setBulkTasks('');\n      setBulkEmployeeDepartment('');\n      setParsedTasks([]);\n      setParsedEmployeeDepartment([]);\n    } catch (error) {\n      var _error$response, _error$response2, _error$response3, _error$response3$data;\n      console.error('Error saving bulk data:', {\n        message: error.message,\n        response: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data,\n        status: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status\n      });\n      alert(`Error saving bulk data: ${((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || error.message}`);\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // First save bulk data if any exists\n      await handleBulkDataSubmission();\n\n      // Then save the individual task\n      console.log('Sending individual task:', task);\n      const response = await api.post('/api/tasks', task);\n      console.log('Task created:', response.data);\n\n      // Reset form after successful submission\n      setTask({\n        taskName: '',\n        employee: '',\n        department: '',\n        date: '',\n        comments: ''\n      });\n    } catch (error) {\n      var _error$response4, _error$response5, _error$response6, _error$response6$data;\n      console.error('Error creating task:', {\n        message: error.message,\n        response: (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data,\n        status: (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status\n      });\n      alert(`Error creating task: ${((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto mt-10 p-6 bg-white rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-6 text-center\",\n      children: \"Create Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"bulkTasks\",\n        className: \"block text-gray-700 text-sm font-bold mb-2\",\n        children: \"Bulk Tasks Input (one task per line)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"bulkTasks\",\n        value: bulkTasks,\n        onChange: handleBulkTasksChange,\n        className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n        rows: \"5\",\n        placeholder: \"Enter multiple tasks, one per line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600 mt-1\",\n        children: [parsedTasks.length, \" tasks ready to be saved\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"bulkEmployeeDepartment\",\n        className: \"block text-gray-700 text-sm font-bold mb-2\",\n        children: \"Employee-Department Input (format: employee;department)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"bulkEmployeeDepartment\",\n        value: bulkEmployeeDepartment,\n        onChange: handleBulkEmployeeDepartmentChange,\n        className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n        rows: \"5\",\n        placeholder: \"Enter employee and department pairs, one per line (e.g., John Doe;Sales)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600 mt-1\",\n        children: [parsedEmployeeDepartment.length, \" employee-department pairs ready to be saved\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 flex justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleBulkDataSubmission,\n        className: \"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline mr-4\",\n        disabled: parsedTasks.length === 0 && parsedEmployeeDepartment.length === 0,\n        children: \"Save Bulk Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"taskName\",\n          className: \"block text-gray-700 text-sm font-bold mb-2\",\n          children: \"Select Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"taskName\",\n          name: \"taskName\",\n          value: task.taskName,\n          onChange: handleTaskSelection,\n          className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), parsedTasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: task,\n            children: task\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"employee\",\n          className: \"block text-gray-700 text-sm font-bold mb-2\",\n          children: \"Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"employee\",\n          name: \"employee\",\n          value: task.employee,\n          onChange: handleChange,\n          className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select an employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), parsedEmployeeDepartment.map((pair, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: pair.employee,\n            children: pair.employee\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"department\",\n          className: \"block text-gray-700 text-sm font-bold mb-2\",\n          children: \"Department\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"department\",\n          name: \"department\",\n          value: task.department,\n          readOnly: true,\n          className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          className: \"block text-gray-700 text-sm font-bold mb-2\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"date\",\n          name: \"date\",\n          value: task.date,\n          onChange: handleChange,\n          className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"comments\",\n          className: \"block text-gray-700 text-sm font-bold mb-2\",\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"comments\",\n          name: \"comments\",\n          value: task.comments,\n          onChange: handleChange,\n          className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n          placeholder: \"Enter any additional comments\",\n          rows: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\nexport default TaskInput;","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","TaskInput","task","setTask","taskName","employee","date","comments","bulkTasks","setBulkTasks","parsedTasks","setParsedTasks","bulkEmployeeDepartment","setBulkEmployeeDepartment","parsedEmployeeDepartment","setParsedEmployeeDepartment","handleBulkTasksChange","e","value","target","tasks","split","filter","trim","handleBulkEmployeeDepartmentChange","pairs","pair","employeeDepartment","map","department","item","handleTaskSelection","selectedValue","prev","handleChange","name","selectedPair","find","prevTask","handleBulkDataSubmission","length","console","log","tasksData","tasksResponse","post","data","pairsResponse","employeeDepartments","error","_error$response","_error$response2","_error$response3","_error$response3$data","message","response","status","alert","handleSubmit","preventDefault","_error$response4","_error$response5","_error$response6","_error$response6$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","rows","placeholder","type","onClick","disabled","onSubmit","required","index","readOnly"],"sources":["C:/Users/belya/Cursor projects/Budget tracker/client/src/components/TaskInput.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport api from '../api';\r\n\r\nconst TaskInput = () => {\r\n  // State to manage form inputs\r\n  const [task, setTask] = useState({\r\n    taskName: '',\r\n    employee: '',\r\n    date: '',\r\n    comments: ''\r\n  });\r\n\r\n  // State for bulk tasks\r\n  const [bulkTasks, setBulkTasks] = useState('');\r\n  const [parsedTasks, setParsedTasks] = useState([]);\r\n\r\n  // State for employee-department input\r\n  const [bulkEmployeeDepartment, setBulkEmployeeDepartment] = useState('');\r\n  const [parsedEmployeeDepartment, setParsedEmployeeDepartment] = useState([]);\r\n\r\n  // Handle bulk tasks input\r\n  const handleBulkTasksChange = (e) => {\r\n    const value = e.target.value;\r\n    setBulkTasks(value);\r\n    // Parse tasks (split by new line)\r\n    const tasks = value.split('\\n').filter(task => task.trim() !== '');\r\n    setParsedTasks(tasks);\r\n  };\r\n\r\n  // Handle employee-department input\r\n  const handleBulkEmployeeDepartmentChange = (e) => {\r\n    const value = e.target.value;\r\n    setBulkEmployeeDepartment(value);\r\n    // Parse employee-department pairs (split by new line and delimiter)\r\n    const pairs = value.split('\\n').filter(pair => pair.trim() !== '');\r\n    const employeeDepartment = pairs.map(pair => {\r\n      const [employee, department] = pair.split(';').map(item => item.trim());\r\n      return { employee, department };\r\n    });\r\n    setParsedEmployeeDepartment(employeeDepartment);\r\n  };\r\n\r\n  // Handle task selection from parsed tasks\r\n  const handleTaskSelection = (e) => {\r\n    const selectedValue = e.target.value;\r\n    setTask(prev => ({\r\n      ...prev,\r\n      taskName: selectedValue\r\n    }));\r\n  };\r\n\r\n  // Handle input changes\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === 'employee') {\r\n      const selectedPair = parsedEmployeeDepartment.find(pair => pair.employee === value);\r\n      setTask(prevTask => ({\r\n        ...prevTask,\r\n        employee: selectedPair ? selectedPair.employee : '',\r\n        department: selectedPair ? selectedPair.department : ''\r\n      }));\r\n    } else {\r\n      setTask(prevTask => ({\r\n        ...prevTask,\r\n        [name]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Handle bulk data submission\r\n  const handleBulkDataSubmission = async () => {\r\n    try {\r\n      // Save tasks to database\r\n      if (parsedTasks.length > 0) {\r\n        console.log('Sending bulk tasks:', parsedTasks);\r\n        const tasksData = parsedTasks.map(task => ({ name: task }));\r\n        const tasksResponse = await api.post('/api/bulk-tasks', { tasks: tasksData });\r\n        console.log('Bulk tasks response:', tasksResponse.data);\r\n      }\r\n\r\n      // Save employee-department pairs to database\r\n      if (parsedEmployeeDepartment.length > 0) {\r\n        console.log('Sending employee-department pairs:', parsedEmployeeDepartment);\r\n        const pairsResponse = await api.post('/api/employee-departments', { \r\n          employeeDepartments: parsedEmployeeDepartment \r\n        });\r\n        console.log('Employee-department pairs response:', pairsResponse.data);\r\n      }\r\n\r\n      // Clear bulk input fields after successful submission\r\n      setBulkTasks('');\r\n      setBulkEmployeeDepartment('');\r\n      setParsedTasks([]);\r\n      setParsedEmployeeDepartment([]);\r\n\r\n    } catch (error) {\r\n      console.error('Error saving bulk data:', {\r\n        message: error.message,\r\n        response: error.response?.data,\r\n        status: error.response?.status\r\n      });\r\n      alert(`Error saving bulk data: ${error.response?.data?.message || error.message}`);\r\n    }\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // First save bulk data if any exists\r\n      await handleBulkDataSubmission();\r\n\r\n      // Then save the individual task\r\n      console.log('Sending individual task:', task);\r\n      const response = await api.post('/api/tasks', task);\r\n      console.log('Task created:', response.data);\r\n      \r\n      // Reset form after successful submission\r\n      setTask({\r\n        taskName: '',\r\n        employee: '',\r\n        department: '',\r\n        date: '',\r\n        comments: ''\r\n      });\r\n    } catch (error) {\r\n      console.error('Error creating task:', {\r\n        message: error.message,\r\n        response: error.response?.data,\r\n        status: error.response?.status\r\n      });\r\n      alert(`Error creating task: ${error.response?.data?.message || error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto mt-10 p-6 bg-white rounded-lg shadow-md\">\r\n      <h2 className=\"text-2xl font-bold mb-6 text-center\">Create Task</h2>\r\n      \r\n      {/* Bulk Tasks Input */}\r\n      <div className=\"mb-6\">\r\n        <label \r\n          htmlFor=\"bulkTasks\" \r\n          className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n        >\r\n          Bulk Tasks Input (one task per line)\r\n        </label>\r\n        <textarea\r\n          id=\"bulkTasks\"\r\n          value={bulkTasks}\r\n          onChange={handleBulkTasksChange}\r\n          className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n          rows=\"5\"\r\n          placeholder=\"Enter multiple tasks, one per line\"\r\n        />\r\n        <p className=\"text-sm text-gray-600 mt-1\">\r\n          {parsedTasks.length} tasks ready to be saved\r\n        </p>\r\n      </div>\r\n\r\n      {/* Employee-Department Input */}\r\n      <div className=\"mb-6\">\r\n        <label \r\n          htmlFor=\"bulkEmployeeDepartment\" \r\n          className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n        >\r\n          Employee-Department Input (format: employee;department)\r\n        </label>\r\n        <textarea\r\n          id=\"bulkEmployeeDepartment\"\r\n          value={bulkEmployeeDepartment}\r\n          onChange={handleBulkEmployeeDepartmentChange}\r\n          className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n          rows=\"5\"\r\n          placeholder=\"Enter employee and department pairs, one per line (e.g., John Doe;Sales)\"\r\n        />\r\n        <p className=\"text-sm text-gray-600 mt-1\">\r\n          {parsedEmployeeDepartment.length} employee-department pairs ready to be saved\r\n        </p>\r\n      </div>\r\n\r\n      {/* Save Bulk Data Button */}\r\n      <div className=\"mb-6 flex justify-center\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleBulkDataSubmission}\r\n          className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline mr-4\"\r\n          disabled={parsedTasks.length === 0 && parsedEmployeeDepartment.length === 0}\r\n        >\r\n          Save Bulk Data\r\n        </button>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Task Selection Dropdown */}\r\n        <div className=\"mb-4\">\r\n          <label \r\n            htmlFor=\"taskName\" \r\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n          >\r\n            Select Task\r\n          </label>\r\n          <select\r\n            id=\"taskName\"\r\n            name=\"taskName\"\r\n            value={task.taskName}\r\n            onChange={handleTaskSelection}\r\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            required\r\n          >\r\n            <option value=\"\">Select a task</option>\r\n            {parsedTasks.map((task, index) => (\r\n              <option key={index} value={task}>\r\n                {task}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        {/* Employee Dropdown */}\r\n        <div className=\"mb-4\">\r\n          <label \r\n            htmlFor=\"employee\" \r\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n          >\r\n            Employee\r\n          </label>\r\n          <select\r\n            id=\"employee\"\r\n            name=\"employee\"\r\n            value={task.employee}\r\n            onChange={handleChange}\r\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            required\r\n          >\r\n            <option value=\"\">Select an employee</option>\r\n            {parsedEmployeeDepartment.map((pair, index) => (\r\n              <option key={index} value={pair.employee}>\r\n                {pair.employee}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        {/* Department Display */}\r\n        <div className=\"mb-4\">\r\n          <label \r\n            htmlFor=\"department\" \r\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n          >\r\n            Department\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"department\"\r\n            name=\"department\"\r\n            value={task.department}\r\n            readOnly\r\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n          />\r\n        </div>\r\n\r\n        {/* Date Input */}\r\n        <div className=\"mb-4\">\r\n          <label \r\n            htmlFor=\"date\" \r\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n          >\r\n            Date\r\n          </label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"date\"\r\n            name=\"date\"\r\n            value={task.date}\r\n            onChange={handleChange}\r\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        {/* Comments Input */}\r\n        <div className=\"mb-4\">\r\n          <label \r\n            htmlFor=\"comments\" \r\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\r\n          >\r\n            Comments\r\n          </label>\r\n          <textarea\r\n            id=\"comments\"\r\n            name=\"comments\"\r\n            value={task.comments}\r\n            onChange={handleChange}\r\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            placeholder=\"Enter any additional comments\"\r\n            rows=\"4\"\r\n          />\r\n        </div>\r\n\r\n        {/* Submit Button */}\r\n        <div className=\"flex items-center justify-center\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n          >\r\n            Create Task\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskInput; "],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC;IAC/BQ,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE;EACZ,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA,MAAM,CAACgB,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACxE,MAAM,CAACkB,wBAAwB,EAAEC,2BAA2B,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;;EAE5E;EACA,MAAMoB,qBAAqB,GAAIC,CAAC,IAAK;IACnC,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;IAC5BT,YAAY,CAACS,KAAK,CAAC;IACnB;IACA,MAAME,KAAK,GAAGF,KAAK,CAACG,KAAK,CAAC,IAAI,CAAC,CAACC,MAAM,CAACpB,IAAI,IAAIA,IAAI,CAACqB,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;IAClEZ,cAAc,CAACS,KAAK,CAAC;EACvB,CAAC;;EAED;EACA,MAAMI,kCAAkC,GAAIP,CAAC,IAAK;IAChD,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;IAC5BL,yBAAyB,CAACK,KAAK,CAAC;IAChC;IACA,MAAMO,KAAK,GAAGP,KAAK,CAACG,KAAK,CAAC,IAAI,CAAC,CAACC,MAAM,CAACI,IAAI,IAAIA,IAAI,CAACH,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;IAClE,MAAMI,kBAAkB,GAAGF,KAAK,CAACG,GAAG,CAACF,IAAI,IAAI;MAC3C,MAAM,CAACrB,QAAQ,EAAEwB,UAAU,CAAC,GAAGH,IAAI,CAACL,KAAK,CAAC,GAAG,CAAC,CAACO,GAAG,CAACE,IAAI,IAAIA,IAAI,CAACP,IAAI,CAAC,CAAC,CAAC;MACvE,OAAO;QAAElB,QAAQ;QAAEwB;MAAW,CAAC;IACjC,CAAC,CAAC;IACFd,2BAA2B,CAACY,kBAAkB,CAAC;EACjD,CAAC;;EAED;EACA,MAAMI,mBAAmB,GAAId,CAAC,IAAK;IACjC,MAAMe,aAAa,GAAGf,CAAC,CAACE,MAAM,CAACD,KAAK;IACpCf,OAAO,CAAC8B,IAAI,KAAK;MACf,GAAGA,IAAI;MACP7B,QAAQ,EAAE4B;IACZ,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACA,MAAME,YAAY,GAAIjB,CAAC,IAAK;IAC1B,MAAM;MAAEkB,IAAI;MAAEjB;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChC,IAAIgB,IAAI,KAAK,UAAU,EAAE;MACvB,MAAMC,YAAY,GAAGtB,wBAAwB,CAACuB,IAAI,CAACX,IAAI,IAAIA,IAAI,CAACrB,QAAQ,KAAKa,KAAK,CAAC;MACnFf,OAAO,CAACmC,QAAQ,KAAK;QACnB,GAAGA,QAAQ;QACXjC,QAAQ,EAAE+B,YAAY,GAAGA,YAAY,CAAC/B,QAAQ,GAAG,EAAE;QACnDwB,UAAU,EAAEO,YAAY,GAAGA,YAAY,CAACP,UAAU,GAAG;MACvD,CAAC,CAAC,CAAC;IACL,CAAC,MAAM;MACL1B,OAAO,CAACmC,QAAQ,KAAK;QACnB,GAAGA,QAAQ;QACX,CAACH,IAAI,GAAGjB;MACV,CAAC,CAAC,CAAC;IACL;EACF,CAAC;;EAED;EACA,MAAMqB,wBAAwB,GAAG,MAAAA,CAAA,KAAY;IAC3C,IAAI;MACF;MACA,IAAI7B,WAAW,CAAC8B,MAAM,GAAG,CAAC,EAAE;QAC1BC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEhC,WAAW,CAAC;QAC/C,MAAMiC,SAAS,GAAGjC,WAAW,CAACkB,GAAG,CAAC1B,IAAI,KAAK;UAAEiC,IAAI,EAAEjC;QAAK,CAAC,CAAC,CAAC;QAC3D,MAAM0C,aAAa,GAAG,MAAM9C,GAAG,CAAC+C,IAAI,CAAC,iBAAiB,EAAE;UAAEzB,KAAK,EAAEuB;QAAU,CAAC,CAAC;QAC7EF,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEE,aAAa,CAACE,IAAI,CAAC;MACzD;;MAEA;MACA,IAAIhC,wBAAwB,CAAC0B,MAAM,GAAG,CAAC,EAAE;QACvCC,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAE5B,wBAAwB,CAAC;QAC3E,MAAMiC,aAAa,GAAG,MAAMjD,GAAG,CAAC+C,IAAI,CAAC,2BAA2B,EAAE;UAChEG,mBAAmB,EAAElC;QACvB,CAAC,CAAC;QACF2B,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEK,aAAa,CAACD,IAAI,CAAC;MACxE;;MAEA;MACArC,YAAY,CAAC,EAAE,CAAC;MAChBI,yBAAyB,CAAC,EAAE,CAAC;MAC7BF,cAAc,CAAC,EAAE,CAAC;MAClBI,2BAA2B,CAAC,EAAE,CAAC;IAEjC,CAAC,CAAC,OAAOkC,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,qBAAA;MACdZ,OAAO,CAACQ,KAAK,CAAC,yBAAyB,EAAE;QACvCK,OAAO,EAAEL,KAAK,CAACK,OAAO;QACtBC,QAAQ,GAAAL,eAAA,GAAED,KAAK,CAACM,QAAQ,cAAAL,eAAA,uBAAdA,eAAA,CAAgBJ,IAAI;QAC9BU,MAAM,GAAAL,gBAAA,GAAEF,KAAK,CAACM,QAAQ,cAAAJ,gBAAA,uBAAdA,gBAAA,CAAgBK;MAC1B,CAAC,CAAC;MACFC,KAAK,CAAC,2BAA2B,EAAAL,gBAAA,GAAAH,KAAK,CAACM,QAAQ,cAAAH,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBN,IAAI,cAAAO,qBAAA,uBAApBA,qBAAA,CAAsBC,OAAO,KAAIL,KAAK,CAACK,OAAO,EAAE,CAAC;IACpF;EACF,CAAC;;EAED;EACA,MAAMI,YAAY,GAAG,MAAOzC,CAAC,IAAK;IAChCA,CAAC,CAAC0C,cAAc,CAAC,CAAC;IAClB,IAAI;MACF;MACA,MAAMpB,wBAAwB,CAAC,CAAC;;MAEhC;MACAE,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAExC,IAAI,CAAC;MAC7C,MAAMqD,QAAQ,GAAG,MAAMzD,GAAG,CAAC+C,IAAI,CAAC,YAAY,EAAE3C,IAAI,CAAC;MACnDuC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEa,QAAQ,CAACT,IAAI,CAAC;;MAE3C;MACA3C,OAAO,CAAC;QACNC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZwB,UAAU,EAAE,EAAE;QACdvB,IAAI,EAAE,EAAE;QACRC,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ,CAAC,CAAC,OAAO0C,KAAK,EAAE;MAAA,IAAAW,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,qBAAA;MACdtB,OAAO,CAACQ,KAAK,CAAC,sBAAsB,EAAE;QACpCK,OAAO,EAAEL,KAAK,CAACK,OAAO;QACtBC,QAAQ,GAAAK,gBAAA,GAAEX,KAAK,CAACM,QAAQ,cAAAK,gBAAA,uBAAdA,gBAAA,CAAgBd,IAAI;QAC9BU,MAAM,GAAAK,gBAAA,GAAEZ,KAAK,CAACM,QAAQ,cAAAM,gBAAA,uBAAdA,gBAAA,CAAgBL;MAC1B,CAAC,CAAC;MACFC,KAAK,CAAC,wBAAwB,EAAAK,gBAAA,GAAAb,KAAK,CAACM,QAAQ,cAAAO,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBhB,IAAI,cAAAiB,qBAAA,uBAApBA,qBAAA,CAAsBT,OAAO,KAAIL,KAAK,CAACK,OAAO,EAAE,CAAC;IACjF;EACF,CAAC;EAED,oBACEtD,OAAA;IAAKgE,SAAS,EAAC,0DAA0D;IAAAC,QAAA,gBACvEjE,OAAA;MAAIgE,SAAS,EAAC,qCAAqC;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGpErE,OAAA;MAAKgE,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBjE,OAAA;QACEsE,OAAO,EAAC,WAAW;QACnBN,SAAS,EAAC,4CAA4C;QAAAC,QAAA,EACvD;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACRrE,OAAA;QACEuE,EAAE,EAAC,WAAW;QACdrD,KAAK,EAAEV,SAAU;QACjBgE,QAAQ,EAAExD,qBAAsB;QAChCgD,SAAS,EAAC,4HAA4H;QACtIS,IAAI,EAAC,GAAG;QACRC,WAAW,EAAC;MAAoC;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eACFrE,OAAA;QAAGgE,SAAS,EAAC,4BAA4B;QAAAC,QAAA,GACtCvD,WAAW,CAAC8B,MAAM,EAAC,0BACtB;MAAA;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAGNrE,OAAA;MAAKgE,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBjE,OAAA;QACEsE,OAAO,EAAC,wBAAwB;QAChCN,SAAS,EAAC,4CAA4C;QAAAC,QAAA,EACvD;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACRrE,OAAA;QACEuE,EAAE,EAAC,wBAAwB;QAC3BrD,KAAK,EAAEN,sBAAuB;QAC9B4D,QAAQ,EAAEhD,kCAAmC;QAC7CwC,SAAS,EAAC,4HAA4H;QACtIS,IAAI,EAAC,GAAG;QACRC,WAAW,EAAC;MAA0E;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvF,CAAC,eACFrE,OAAA;QAAGgE,SAAS,EAAC,4BAA4B;QAAAC,QAAA,GACtCnD,wBAAwB,CAAC0B,MAAM,EAAC,8CACnC;MAAA;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAGNrE,OAAA;MAAKgE,SAAS,EAAC,0BAA0B;MAAAC,QAAA,eACvCjE,OAAA;QACE2E,IAAI,EAAC,QAAQ;QACbC,OAAO,EAAErC,wBAAyB;QAClCyB,SAAS,EAAC,qHAAqH;QAC/Ha,QAAQ,EAAEnE,WAAW,CAAC8B,MAAM,KAAK,CAAC,IAAI1B,wBAAwB,CAAC0B,MAAM,KAAK,CAAE;QAAAyB,QAAA,EAC7E;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENrE,OAAA;MAAM8E,QAAQ,EAAEpB,YAAa;MAAAO,QAAA,gBAE3BjE,OAAA;QAAKgE,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBjE,OAAA;UACEsE,OAAO,EAAC,UAAU;UAClBN,SAAS,EAAC,4CAA4C;UAAAC,QAAA,EACvD;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRrE,OAAA;UACEuE,EAAE,EAAC,UAAU;UACbpC,IAAI,EAAC,UAAU;UACfjB,KAAK,EAAEhB,IAAI,CAACE,QAAS;UACrBoE,QAAQ,EAAEzC,mBAAoB;UAC9BiC,SAAS,EAAC,4HAA4H;UACtIe,QAAQ;UAAAd,QAAA,gBAERjE,OAAA;YAAQkB,KAAK,EAAC,EAAE;YAAA+C,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACtC3D,WAAW,CAACkB,GAAG,CAAC,CAAC1B,IAAI,EAAE8E,KAAK,kBAC3BhF,OAAA;YAAoBkB,KAAK,EAAEhB,IAAK;YAAA+D,QAAA,EAC7B/D;UAAI,GADM8E,KAAK;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAGNrE,OAAA;QAAKgE,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBjE,OAAA;UACEsE,OAAO,EAAC,UAAU;UAClBN,SAAS,EAAC,4CAA4C;UAAAC,QAAA,EACvD;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRrE,OAAA;UACEuE,EAAE,EAAC,UAAU;UACbpC,IAAI,EAAC,UAAU;UACfjB,KAAK,EAAEhB,IAAI,CAACG,QAAS;UACrBmE,QAAQ,EAAEtC,YAAa;UACvB8B,SAAS,EAAC,4HAA4H;UACtIe,QAAQ;UAAAd,QAAA,gBAERjE,OAAA;YAAQkB,KAAK,EAAC,EAAE;YAAA+C,QAAA,EAAC;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAC3CvD,wBAAwB,CAACc,GAAG,CAAC,CAACF,IAAI,EAAEsD,KAAK,kBACxChF,OAAA;YAAoBkB,KAAK,EAAEQ,IAAI,CAACrB,QAAS;YAAA4D,QAAA,EACtCvC,IAAI,CAACrB;UAAQ,GADH2E,KAAK;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAGNrE,OAAA;QAAKgE,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBjE,OAAA;UACEsE,OAAO,EAAC,YAAY;UACpBN,SAAS,EAAC,4CAA4C;UAAAC,QAAA,EACvD;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRrE,OAAA;UACE2E,IAAI,EAAC,MAAM;UACXJ,EAAE,EAAC,YAAY;UACfpC,IAAI,EAAC,YAAY;UACjBjB,KAAK,EAAEhB,IAAI,CAAC2B,UAAW;UACvBoD,QAAQ;UACRjB,SAAS,EAAC;QAA4H;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGNrE,OAAA;QAAKgE,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBjE,OAAA;UACEsE,OAAO,EAAC,MAAM;UACdN,SAAS,EAAC,4CAA4C;UAAAC,QAAA,EACvD;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRrE,OAAA;UACE2E,IAAI,EAAC,MAAM;UACXJ,EAAE,EAAC,MAAM;UACTpC,IAAI,EAAC,MAAM;UACXjB,KAAK,EAAEhB,IAAI,CAACI,IAAK;UACjBkE,QAAQ,EAAEtC,YAAa;UACvB8B,SAAS,EAAC,4HAA4H;UACtIe,QAAQ;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGNrE,OAAA;QAAKgE,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBjE,OAAA;UACEsE,OAAO,EAAC,UAAU;UAClBN,SAAS,EAAC,4CAA4C;UAAAC,QAAA,EACvD;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRrE,OAAA;UACEuE,EAAE,EAAC,UAAU;UACbpC,IAAI,EAAC,UAAU;UACfjB,KAAK,EAAEhB,IAAI,CAACK,QAAS;UACrBiE,QAAQ,EAAEtC,YAAa;UACvB8B,SAAS,EAAC,4HAA4H;UACtIU,WAAW,EAAC,+BAA+B;UAC3CD,IAAI,EAAC;QAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGNrE,OAAA;QAAKgE,SAAS,EAAC,kCAAkC;QAAAC,QAAA,eAC/CjE,OAAA;UACE2E,IAAI,EAAC,QAAQ;UACbX,SAAS,EAAC,8GAA8G;UAAAC,QAAA,EACzH;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAED,eAAepE,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\belya\\\\Cursor projects\\\\Budget tracker\\\\client\\\\src\\\\components\\\\AdminRoleManager.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ROLES = {\n  ADMIN: 'admin',\n  MANAGER: 'manager',\n  EMPLOYEE: 'employee'\n};\nconst AdminRoleManager = () => {\n  const [userRoles, setUserRoles] = useState([]);\n  const [newRole, setNewRole] = useState({\n    email: '',\n    role: ROLES.EMPLOYEE\n  });\n  const [currentUserRole, setCurrentUserRole] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Check current user's role\n    const checkUserRole = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/auth/status', {\n          withCredentials: true\n        });\n        console.log('Admin Role Manager - Auth Status:', {\n          authenticated: response.data.authenticated,\n          role: response.data.role,\n          user: response.data.user\n        });\n        if (response.data.authenticated) {\n          var _response$data$user;\n          const currentRole = response.data.role || (((_response$data$user = response.data.user) === null || _response$data$user === void 0 ? void 0 : _response$data$user.email) === 'belyakovvladimirs@gmail.com' ? ROLES.ADMIN : ROLES.EMPLOYEE);\n          setCurrentUserRole(currentRole);\n\n          // Only fetch roles if user is an admin\n          if (currentRole === ROLES.ADMIN) {\n            console.log('Fetching user roles for admin');\n            fetchUserRoles();\n          } else {\n            console.log('Not an admin, cannot fetch roles');\n          }\n        }\n      } catch (error) {\n        console.error('Error checking user role:', error);\n        setError('Failed to check user role');\n      }\n    };\n    checkUserRole();\n  }, []);\n  const fetchUserRoles = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/roles', {\n        withCredentials: true\n      });\n      setUserRoles(response.data);\n    } catch (error) {\n      console.error('Error fetching user roles:', error);\n      setError('Failed to fetch user roles');\n    }\n  };\n  const handleRoleUpdate = async e => {\n    e.preventDefault();\n    setError(null);\n    try {\n      const response = await axios.put('http://localhost:5000/api/roles', newRole, {\n        withCredentials: true\n      });\n\n      // Update local state\n      const updatedRoles = [...userRoles];\n      const existingRoleIndex = updatedRoles.findIndex(ur => ur.email.toLowerCase() === newRole.email.toLowerCase());\n      if (existingRoleIndex !== -1) {\n        updatedRoles[existingRoleIndex].role = newRole.role;\n      } else {\n        updatedRoles.push(newRole);\n      }\n      setUserRoles(updatedRoles);\n\n      // Reset form\n      setNewRole({\n        email: '',\n        role: ROLES.EMPLOYEE\n      });\n      alert('Role updated successfully');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error updating role:', error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to update role');\n    }\n  };\n\n  // Prevent non-admin access\n  if (currentUserRole !== ROLES.ADMIN) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 text-center text-red-600\",\n      children: \"Access Denied: Administrator privileges required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4 bg-[#f5f5f5]\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-2xl mx-auto bg-white rounded p-6 shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-6 text-center\",\n        children: \"Role Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\",\n        role: \"alert\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleRoleUpdate,\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"block text-gray-700 text-sm font-medium mb-2\",\n            children: \"User Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: newRole.email,\n            onChange: e => setNewRole(prev => ({\n              ...prev,\n              email: e.target.value\n            })),\n            className: \"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\",\n            placeholder: \"Enter user email\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"role\",\n            className: \"block text-gray-700 text-sm font-medium mb-2\",\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"role\",\n            value: newRole.role,\n            onChange: e => setNewRole(prev => ({\n              ...prev,\n              role: e.target.value\n            })),\n            className: \"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\",\n            required: true,\n            children: Object.values(ROLES).map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: role,\n              children: role.charAt(0).toUpperCase() + role.slice(1)\n            }, role, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"w-48 bg-black hover:bg-gray-800 text-white font-medium py-2 px-6 rounded\",\n            children: \"Update Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Current User Roles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overflow-x-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"min-w-full bg-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"bg-gray-50\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                  children: \"Role\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              className: \"bg-white divide-y divide-gray-200\",\n              children: userRoles.map((userRole, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap\",\n                  children: userRole.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${userRole.role === ROLES.ADMIN ? 'bg-red-100 text-red-800' : userRole.role === ROLES.MANAGER ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'}`,\n                    children: userRole.role.charAt(0).toUpperCase() + userRole.role.slice(1)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 21\n                }, this)]\n              }, `${userRole.email}-${index}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\nexport default AdminRoleManager;","map":{"version":3,"names":["React","useState","useEffect","axios","Link","jsxDEV","_jsxDEV","ROLES","ADMIN","MANAGER","EMPLOYEE","AdminRoleManager","userRoles","setUserRoles","newRole","setNewRole","email","role","currentUserRole","setCurrentUserRole","error","setError","checkUserRole","response","get","withCredentials","console","log","authenticated","data","user","_response$data$user","currentRole","fetchUserRoles","handleRoleUpdate","e","preventDefault","put","updatedRoles","existingRoleIndex","findIndex","ur","toLowerCase","push","alert","_error$response","_error$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","prev","target","placeholder","required","Object","values","map","charAt","toUpperCase","slice","userRole","index"],"sources":["C:/Users/belya/Cursor projects/Budget tracker/client/src/components/AdminRoleManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ROLES = {\r\n  ADMIN: 'admin',\r\n  MANAGER: 'manager', \r\n  EMPLOYEE: 'employee'\r\n};\r\n\r\nconst AdminRoleManager = () => {\r\n  const [userRoles, setUserRoles] = useState([]);\r\n  const [newRole, setNewRole] = useState({\r\n    email: '',\r\n    role: ROLES.EMPLOYEE\r\n  });\r\n  const [currentUserRole, setCurrentUserRole] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Check current user's role\r\n    const checkUserRole = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/auth/status', { \r\n          withCredentials: true \r\n        });\r\n        \r\n        console.log('Admin Role Manager - Auth Status:', {\r\n          authenticated: response.data.authenticated,\r\n          role: response.data.role,\r\n          user: response.data.user\r\n        });\r\n        \r\n        if (response.data.authenticated) {\r\n          const currentRole = response.data.role || \r\n            (response.data.user?.email === 'belyakovvladimirs@gmail.com' ? ROLES.ADMIN : ROLES.EMPLOYEE);\r\n          \r\n          setCurrentUserRole(currentRole);\r\n          \r\n          // Only fetch roles if user is an admin\r\n          if (currentRole === ROLES.ADMIN) {\r\n            console.log('Fetching user roles for admin');\r\n            fetchUserRoles();\r\n          } else {\r\n            console.log('Not an admin, cannot fetch roles');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error checking user role:', error);\r\n        setError('Failed to check user role');\r\n      }\r\n    };\r\n\r\n    checkUserRole();\r\n  }, []);\r\n\r\n  const fetchUserRoles = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/roles', { \r\n        withCredentials: true \r\n      });\r\n      setUserRoles(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching user roles:', error);\r\n      setError('Failed to fetch user roles');\r\n    }\r\n  };\r\n\r\n  const handleRoleUpdate = async (e) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await axios.put(\r\n        'http://localhost:5000/api/roles', \r\n        newRole, \r\n        { withCredentials: true }\r\n      );\r\n\r\n      // Update local state\r\n      const updatedRoles = [...userRoles];\r\n      const existingRoleIndex = updatedRoles.findIndex(\r\n        ur => ur.email.toLowerCase() === newRole.email.toLowerCase()\r\n      );\r\n\r\n      if (existingRoleIndex !== -1) {\r\n        updatedRoles[existingRoleIndex].role = newRole.role;\r\n      } else {\r\n        updatedRoles.push(newRole);\r\n      }\r\n\r\n      setUserRoles(updatedRoles);\r\n      \r\n      // Reset form\r\n      setNewRole({\r\n        email: '',\r\n        role: ROLES.EMPLOYEE\r\n      });\r\n\r\n      alert('Role updated successfully');\r\n    } catch (error) {\r\n      console.error('Error updating role:', error);\r\n      setError(error.response?.data?.error || 'Failed to update role');\r\n    }\r\n  };\r\n\r\n  // Prevent non-admin access\r\n  if (currentUserRole !== ROLES.ADMIN) {\r\n    return (\r\n      <div className=\"p-4 text-center text-red-600\">\r\n        Access Denied: Administrator privileges required\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4 bg-[#f5f5f5]\">\r\n      <div className=\"max-w-2xl mx-auto bg-white rounded p-6 shadow-md\">\r\n        <h2 className=\"text-2xl font-bold mb-6 text-center\">Role Management</h2>\r\n\r\n        {error && (\r\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        {/* Role Assignment Form */}\r\n        <form onSubmit={handleRoleUpdate} className=\"space-y-4\">\r\n          <div>\r\n            <label htmlFor=\"email\" className=\"block text-gray-700 text-sm font-medium mb-2\">\r\n              User Email\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              value={newRole.email}\r\n              onChange={(e) => setNewRole(prev => ({ ...prev, email: e.target.value }))}\r\n              className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\"\r\n              placeholder=\"Enter user email\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"role\" className=\"block text-gray-700 text-sm font-medium mb-2\">\r\n              Role\r\n            </label>\r\n            <select\r\n              id=\"role\"\r\n              value={newRole.role}\r\n              onChange={(e) => setNewRole(prev => ({ ...prev, role: e.target.value }))}\r\n              className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\"\r\n              required\r\n            >\r\n              {Object.values(ROLES).map(role => (\r\n                <option key={role} value={role}>\r\n                  {role.charAt(0).toUpperCase() + role.slice(1)}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"flex justify-center\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"w-48 bg-black hover:bg-gray-800 text-white font-medium py-2 px-6 rounded\"\r\n            >\r\n              Update Role\r\n            </button>\r\n          </div>\r\n        </form>\r\n\r\n        {/* User Roles List */}\r\n        <div className=\"mt-8\">\r\n          <h3 className=\"text-xl font-semibold mb-4\">Current User Roles</h3>\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full bg-white\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Email\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Role\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {userRoles.map((userRole, index) => (\r\n                  <tr key={`${userRole.email}-${index}`}>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      {userRole.email}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\r\n                        userRole.role === ROLES.ADMIN \r\n                          ? 'bg-red-100 text-red-800' \r\n                          : userRole.role === ROLES.MANAGER \r\n                          ? 'bg-yellow-100 text-yellow-800' \r\n                          : 'bg-green-100 text-green-800'\r\n                      }`}>\r\n                        {userRole.role.charAt(0).toUpperCase() + userRole.role.slice(1)}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminRoleManager; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
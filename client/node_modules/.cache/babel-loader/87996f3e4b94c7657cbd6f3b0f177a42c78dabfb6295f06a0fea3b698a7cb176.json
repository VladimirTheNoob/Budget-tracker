{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\belya\\\\Cursor projects\\\\Budget tracker\\\\client\\\\src\\\\components\\\\TaskList.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [filters, setFilters] = useState({\n    status: 'all',\n    employee: 'all',\n    department: 'all'\n  });\n  const [groupBy, setGroupBy] = useState('none'); // none, employee, department\n  const [checkedTasks, setCheckedTasks] = useState(new Set());\n  const [notificationText, setNotificationText] = useState('');\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const [tasksRes, employeesRes] = await Promise.all([axios.get('http://localhost:5000/api/tasks'), axios.get('http://localhost:5000/api/employees')]);\n      setTasks(tasksRes.data);\n      setEmployees(employeesRes.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const getStatusClass = status => {\n    switch (status === null || status === void 0 ? void 0 : status.toLowerCase()) {\n      case 'completed':\n        return 'bg-green-100 text-green-800';\n      case 'in progress':\n        return 'bg-blue-100 text-blue-800';\n      case 'pending':\n        return 'bg-yellow-100 text-yellow-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n  const filterTasks = tasks => {\n    return tasks.filter(task => {\n      if (filters.status !== 'all' && task.status !== filters.status) return false;\n      if (filters.employee !== 'all' && task.employee !== filters.employee) return false;\n      if (filters.department !== 'all' && task.department !== filters.department) return false;\n      return true;\n    });\n  };\n  const groupTasks = tasks => {\n    if (groupBy === 'none') return {\n      'All Tasks': tasks\n    };\n    return tasks.reduce((groups, task) => {\n      const key = task[groupBy] || 'Unassigned';\n      if (!groups[key]) {\n        groups[key] = [];\n      }\n      groups[key].push(task);\n      return groups;\n    }, {});\n  };\n  const getUniqueDepartments = () => {\n    return [...new Set(employees.map(emp => emp.department))];\n  };\n  const filteredTasks = filterTasks(tasks);\n  const groupedTasks = groupTasks(filteredTasks);\n  const handleCheckTask = taskId => {\n    const newChecked = new Set(checkedTasks);\n    if (newChecked.has(taskId)) {\n      newChecked.delete(taskId);\n    } else {\n      newChecked.add(taskId);\n    }\n    setCheckedTasks(newChecked);\n  };\n  const handleSendNotifications = async () => {\n    if (checkedTasks.size === 0) {\n      alert('Please select at least one task to send notifications');\n      return;\n    }\n    if (!notificationText.trim()) {\n      alert('Please enter notification text');\n      return;\n    }\n    try {\n      // Get selected tasks with their employee emails\n      const selectedTasks = tasks.filter(task => checkedTasks.has(task.id));\n      const notifications = selectedTasks.map(task => {\n        var _employees$find;\n        const employeeEmail = (_employees$find = employees.find(emp => emp.name === task.employee)) === null || _employees$find === void 0 ? void 0 : _employees$find.email;\n        if (!employeeEmail) {\n          throw new Error(`No email found for employee: ${task.employee}`);\n        }\n        return {\n          taskId: task.id,\n          taskName: task.name,\n          employeeName: task.employee,\n          email: employeeEmail,\n          message: notificationText\n        };\n      });\n      console.log('Preparing to send notifications:', notifications);\n\n      // Send notifications to the backend\n      const response = await axios.post('http://localhost:5000/api/notifications/send', {\n        notifications\n      });\n      console.log('Notifications sent:', response.data);\n      if (response.data.notificationCount > 0) {\n        alert(`Notifications sent successfully to ${response.data.notificationCount} recipients:\\n\\n${response.data.recipients.join('\\n')}`);\n        // Clear selections and text\n        setCheckedTasks(new Set());\n        setNotificationText('');\n      } else {\n        alert('No notifications were sent. Please check your selection and try again.');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error sending notifications:', error);\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message;\n      alert(`Failed to send notifications: ${errorMessage}\\nPlease try again or contact support if the problem persists.`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4 bg-[#f5f5f5]\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto mb-6 bg-white rounded p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-6 text-center\",\n        children: \"Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-4 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-medium mb-2\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: filters.status,\n            onChange: e => setFilters({\n              ...filters,\n              status: e.target.value\n            }),\n            className: \"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"All Statuses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"pending\",\n              children: \"Pending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"in progress\",\n              children: \"In Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"completed\",\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-medium mb-2\",\n            children: \"Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: filters.employee,\n            onChange: e => setFilters({\n              ...filters,\n              employee: e.target.value\n            }),\n            className: \"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"All Employees\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), employees.map(emp => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: emp.name,\n              children: emp.name\n            }, emp.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-medium mb-2\",\n            children: \"Department\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: filters.department,\n            onChange: e => setFilters({\n              ...filters,\n              department: e.target.value\n            }),\n            className: \"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"All Departments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), getUniqueDepartments().map(dept => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: dept,\n              children: dept\n            }, dept, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-medium mb-2\",\n            children: \"Group By\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: groupBy,\n            onChange: e => setGroupBy(e.target.value),\n            className: \"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"none\",\n              children: \"No Grouping\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"employee\",\n              children: \"Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"department\",\n              children: \"Department\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto mb-6 bg-white rounded p-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-4 items-end\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-grow\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-medium mb-2\",\n            children: \"Notification Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: notificationText,\n            onChange: e => setNotificationText(e.target.value),\n            className: \"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\",\n            rows: \"2\",\n            placeholder: \"Enter notification text to send to selected employees\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendNotifications,\n          className: \"w-48 bg-black hover:bg-gray-800 text-white font-medium py-2 px-6 rounded\",\n          disabled: checkedTasks.size === 0 || !notificationText.trim(),\n          children: \"Send Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), Object.entries(groupedTasks).map(([group, tasks]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto mb-6 bg-white rounded p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 border-b pb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold\",\n          children: group\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"min-w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"bg-gray-50\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Employee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Department\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Due Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Actual end Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"bg-white divide-y divide-gray-200\",\n            children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"hover:bg-gray-50\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: checkedTasks.has(task.id),\n                  onChange: () => handleCheckTask(task.id),\n                  className: \"h-4 w-4 text-black focus:ring-black border-gray-300 rounded\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap\",\n                children: task.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap\",\n                children: task.employee\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap\",\n                children: task.department\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap\",\n                children: task.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap\",\n                children: task.endDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-6 py-4 whitespace-nowrap\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusClass(task.status)}`,\n                  children: task.status || 'Pending'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 21\n              }, this)]\n            }, task.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this)]\n    }, group, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\nexport default TaskList;","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TaskList","tasks","setTasks","employees","setEmployees","filters","setFilters","status","employee","department","groupBy","setGroupBy","checkedTasks","setCheckedTasks","Set","notificationText","setNotificationText","fetchData","tasksRes","employeesRes","Promise","all","get","data","error","console","getStatusClass","toLowerCase","filterTasks","filter","task","groupTasks","reduce","groups","key","push","getUniqueDepartments","map","emp","filteredTasks","groupedTasks","handleCheckTask","taskId","newChecked","has","delete","add","handleSendNotifications","size","alert","trim","selectedTasks","id","notifications","_employees$find","employeeEmail","find","name","email","Error","taskName","employeeName","message","log","response","post","notificationCount","recipients","join","_error$response","_error$response$data","errorMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","dept","rows","placeholder","onClick","disabled","Object","entries","group","type","checked","date","endDate"],"sources":["C:/Users/belya/Cursor projects/Budget tracker/client/src/components/TaskList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [filters, setFilters] = useState({\r\n    status: 'all',\r\n    employee: 'all',\r\n    department: 'all',\r\n  });\r\n  const [groupBy, setGroupBy] = useState('none'); // none, employee, department\r\n  const [checkedTasks, setCheckedTasks] = useState(new Set());\r\n  const [notificationText, setNotificationText] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const [tasksRes, employeesRes] = await Promise.all([\r\n        axios.get('http://localhost:5000/api/tasks'),\r\n        axios.get('http://localhost:5000/api/employees')\r\n      ]);\r\n      setTasks(tasksRes.data);\r\n      setEmployees(employeesRes.data);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  };\r\n\r\n  const getStatusClass = (status) => {\r\n    switch (status?.toLowerCase()) {\r\n      case 'completed':\r\n        return 'bg-green-100 text-green-800';\r\n      case 'in progress':\r\n        return 'bg-blue-100 text-blue-800';\r\n      case 'pending':\r\n        return 'bg-yellow-100 text-yellow-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const filterTasks = (tasks) => {\r\n    return tasks.filter(task => {\r\n      if (filters.status !== 'all' && task.status !== filters.status) return false;\r\n      if (filters.employee !== 'all' && task.employee !== filters.employee) return false;\r\n      if (filters.department !== 'all' && task.department !== filters.department) return false;\r\n      return true;\r\n    });\r\n  };\r\n\r\n  const groupTasks = (tasks) => {\r\n    if (groupBy === 'none') return { 'All Tasks': tasks };\r\n    \r\n    return tasks.reduce((groups, task) => {\r\n      const key = task[groupBy] || 'Unassigned';\r\n      if (!groups[key]) {\r\n        groups[key] = [];\r\n      }\r\n      groups[key].push(task);\r\n      return groups;\r\n    }, {});\r\n  };\r\n\r\n  const getUniqueDepartments = () => {\r\n    return [...new Set(employees.map(emp => emp.department))];\r\n  };\r\n\r\n  const filteredTasks = filterTasks(tasks);\r\n  const groupedTasks = groupTasks(filteredTasks);\r\n\r\n  const handleCheckTask = (taskId) => {\r\n    const newChecked = new Set(checkedTasks);\r\n    if (newChecked.has(taskId)) {\r\n      newChecked.delete(taskId);\r\n    } else {\r\n      newChecked.add(taskId);\r\n    }\r\n    setCheckedTasks(newChecked);\r\n  };\r\n\r\n  const handleSendNotifications = async () => {\r\n    if (checkedTasks.size === 0) {\r\n      alert('Please select at least one task to send notifications');\r\n      return;\r\n    }\r\n\r\n    if (!notificationText.trim()) {\r\n      alert('Please enter notification text');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Get selected tasks with their employee emails\r\n      const selectedTasks = tasks.filter(task => checkedTasks.has(task.id));\r\n      const notifications = selectedTasks.map(task => {\r\n        const employeeEmail = employees.find(emp => emp.name === task.employee)?.email;\r\n        if (!employeeEmail) {\r\n          throw new Error(`No email found for employee: ${task.employee}`);\r\n        }\r\n        return {\r\n          taskId: task.id,\r\n          taskName: task.name,\r\n          employeeName: task.employee,\r\n          email: employeeEmail,\r\n          message: notificationText\r\n        };\r\n      });\r\n\r\n      console.log('Preparing to send notifications:', notifications);\r\n\r\n      // Send notifications to the backend\r\n      const response = await axios.post('http://localhost:5000/api/notifications/send', {\r\n        notifications\r\n      });\r\n\r\n      console.log('Notifications sent:', response.data);\r\n      \r\n      if (response.data.notificationCount > 0) {\r\n        alert(`Notifications sent successfully to ${response.data.notificationCount} recipients:\\n\\n${response.data.recipients.join('\\n')}`);\r\n        // Clear selections and text\r\n        setCheckedTasks(new Set());\r\n        setNotificationText('');\r\n      } else {\r\n        alert('No notifications were sent. Please check your selection and try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending notifications:', error);\r\n      const errorMessage = error.response?.data?.error || error.message;\r\n      alert(`Failed to send notifications: ${errorMessage}\\nPlease try again or contact support if the problem persists.`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4 bg-[#f5f5f5]\">\r\n      {/* Filters */}\r\n      <div className=\"max-w-7xl mx-auto mb-6 bg-white rounded p-6\">\r\n        <h2 className=\"text-xl font-semibold mb-6 text-center\">Filters</h2>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n          <div>\r\n            <label className=\"block text-gray-700 text-sm font-medium mb-2\">\r\n              Status\r\n            </label>\r\n            <select\r\n              value={filters.status}\r\n              onChange={(e) => setFilters({ ...filters, status: e.target.value })}\r\n              className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\"\r\n            >\r\n              <option value=\"all\">All Statuses</option>\r\n              <option value=\"pending\">Pending</option>\r\n              <option value=\"in progress\">In Progress</option>\r\n              <option value=\"completed\">Completed</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-gray-700 text-sm font-medium mb-2\">\r\n              Employee\r\n            </label>\r\n            <select\r\n              value={filters.employee}\r\n              onChange={(e) => setFilters({ ...filters, employee: e.target.value })}\r\n              className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\"\r\n            >\r\n              <option value=\"all\">All Employees</option>\r\n              {employees.map(emp => (\r\n                <option key={emp.id} value={emp.name}>{emp.name}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-gray-700 text-sm font-medium mb-2\">\r\n              Department\r\n            </label>\r\n            <select\r\n              value={filters.department}\r\n              onChange={(e) => setFilters({ ...filters, department: e.target.value })}\r\n              className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\"\r\n            >\r\n              <option value=\"all\">All Departments</option>\r\n              {getUniqueDepartments().map(dept => (\r\n                <option key={dept} value={dept}>{dept}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-gray-700 text-sm font-medium mb-2\">\r\n              Group By\r\n            </label>\r\n            <select\r\n              value={groupBy}\r\n              onChange={(e) => setGroupBy(e.target.value)}\r\n              className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\"\r\n            >\r\n              <option value=\"none\">No Grouping</option>\r\n              <option value=\"employee\">Employee</option>\r\n              <option value=\"department\">Department</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Notification Section */}\r\n      <div className=\"max-w-7xl mx-auto mb-6 bg-white rounded p-6\">\r\n        <div className=\"flex space-x-4 items-end\">\r\n          <div className=\"flex-grow\">\r\n            <label className=\"block text-gray-700 text-sm font-medium mb-2\">\r\n              Notification Text\r\n            </label>\r\n            <textarea\r\n              value={notificationText}\r\n              onChange={(e) => setNotificationText(e.target.value)}\r\n              className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\"\r\n              rows=\"2\"\r\n              placeholder=\"Enter notification text to send to selected employees\"\r\n            />\r\n          </div>\r\n          <button\r\n            onClick={handleSendNotifications}\r\n            className=\"w-48 bg-black hover:bg-gray-800 text-white font-medium py-2 px-6 rounded\"\r\n            disabled={checkedTasks.size === 0 || !notificationText.trim()}\r\n          >\r\n            Send Notifications\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tasks Table */}\r\n      {Object.entries(groupedTasks).map(([group, tasks]) => (\r\n        <div key={group} className=\"max-w-7xl mx-auto mb-6 bg-white rounded p-6\">\r\n          <div className=\"mb-4 border-b pb-4\">\r\n            <h3 className=\"text-lg font-semibold\">{group}</h3>\r\n          </div>\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Select\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Task\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Employee\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Department\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Due Date\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Actual end Date\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                    Status\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {tasks.map((task) => (\r\n                  <tr key={task.id} className=\"hover:bg-gray-50\">\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={checkedTasks.has(task.id)}\r\n                        onChange={() => handleCheckTask(task.id)}\r\n                        className=\"h-4 w-4 text-black focus:ring-black border-gray-300 rounded\"\r\n                      />\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      {task.name}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      {task.employee}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      {task.department}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      {task.date}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      {task.endDate}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusClass(task.status)}`}>\r\n                        {task.status || 'Pending'}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
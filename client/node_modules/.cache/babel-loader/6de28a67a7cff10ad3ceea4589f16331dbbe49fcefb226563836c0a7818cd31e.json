{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\belya\\\\Cursor projects\\\\Budget tracker\\\\client\\\\src\\\\components\\\\TaskList.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [filters, setFilters] = useState({\n    status: 'all',\n    employee: 'all',\n    department: 'all'\n  });\n  const [groupBy, setGroupBy] = useState('none'); // none, employee, department\n  const [checkedTasks, setCheckedTasks] = useState(new Set());\n  const [notificationText, setNotificationText] = useState('');\n\n  // Add deduplication for employees\n  const uniqueEmployees = [...new Map(employees.map(emp => [emp.id, emp])).values()];\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const [tasksRes, employeesRes] = await Promise.all([axios.get('http://localhost:5000/api/tasks'), axios.get('http://localhost:5000/api/employees')]);\n\n      // Ensure each task has a unique ID\n      const tasksWithIds = tasksRes.data.map((task, index) => ({\n        ...task,\n        id: task.id || `task-${Date.now()}-${index}`\n      }));\n      setTasks(tasksWithIds);\n      setEmployees(employeesRes.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const getStatusClass = status => {\n    switch (status === null || status === void 0 ? void 0 : status.toLowerCase()) {\n      case 'completed':\n        return 'bg-green-100 text-green-800';\n      case 'in progress':\n        return 'bg-blue-100 text-blue-800';\n      case 'pending':\n        return 'bg-yellow-100 text-yellow-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n  const filterTasks = tasks => {\n    return tasks.filter(task => {\n      if (filters.status !== 'all' && task.status !== filters.status) return false;\n      if (filters.employee !== 'all' && task.employee !== filters.employee) return false;\n      if (filters.department !== 'all' && task.department !== filters.department) return false;\n      return true;\n    });\n  };\n  const groupTasks = tasks => {\n    if (groupBy === 'none') return {\n      'All Tasks': tasks\n    };\n    return tasks.reduce((groups, task) => {\n      const key = task[groupBy] || 'Unassigned';\n      if (!groups[key]) {\n        groups[key] = [];\n      }\n      groups[key].push(task);\n      return groups;\n    }, {});\n  };\n  const getUniqueDepartments = () => {\n    return [...new Set(employees.map(emp => emp.department))];\n  };\n  const filteredTasks = filterTasks(tasks);\n  const groupedTasks = groupTasks(filteredTasks);\n  const handleCheckTask = taskId => {\n    setCheckedTasks(prev => {\n      const newChecked = new Set(prev);\n      if (newChecked.has(taskId)) {\n        newChecked.delete(taskId);\n      } else {\n        newChecked.add(taskId);\n      }\n      return newChecked;\n    });\n  };\n  const handleSendNotifications = async () => {\n    if (checkedTasks.size === 0) {\n      alert('Please select at least one task to send notifications');\n      return;\n    }\n    if (!notificationText.trim()) {\n      alert('Please enter notification text');\n      return;\n    }\n    try {\n      // Get selected tasks with their employee emails\n      const selectedTasks = tasks.filter(task => checkedTasks.has(task.id));\n      const notifications = selectedTasks.map(task => {\n        var _employees$find;\n        const employeeEmail = (_employees$find = employees.find(emp => emp.name === task.employee)) === null || _employees$find === void 0 ? void 0 : _employees$find.email;\n        if (!employeeEmail) {\n          throw new Error(`No email found for employee: ${task.employee}`);\n        }\n        return {\n          taskId: task.id,\n          taskName: task.name,\n          employeeName: task.employee,\n          email: employeeEmail,\n          message: notificationText\n        };\n      });\n      console.log('Preparing to send notifications:', notifications);\n\n      // Send notifications to the backend\n      const response = await axios.post('http://localhost:5000/api/notifications/send', {\n        notifications\n      });\n      console.log('Notifications sent:', response.data);\n      if (response.data.notificationCount > 0) {\n        alert(`Notifications sent successfully to ${response.data.notificationCount} recipients:\\n\\n${response.data.recipients.join('\\n')}`);\n        // Clear selections and text\n        setCheckedTasks(new Set());\n        setNotificationText('');\n      } else {\n        alert('No notifications were sent. Please check your selection and try again.');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error sending notifications:', error);\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message;\n      alert(`Failed to send notifications: ${errorMessage}\\nPlease try again or contact support if the problem persists.`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4 bg-[#f5f5f5]\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto mb-6 bg-white rounded p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-6 text-center\",\n        children: \"Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-4 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-medium mb-2\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: filters.status,\n            onChange: e => setFilters({\n              ...filters,\n              status: e.target.value\n            }),\n            className: \"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"All Statuses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"pending\",\n              children: \"Pending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"in progress\",\n              children: \"In Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"completed\",\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-medium mb-2\",\n            children: \"Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: filters.employee,\n            onChange: e => setFilters({\n              ...filters,\n              employee: e.target.value\n            }),\n            className: \"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"All Employees\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), uniqueEmployees.map(emp => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: emp.name,\n              children: emp.name\n            }, emp.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-medium mb-2\",\n            children: \"Department\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: filters.department,\n            onChange: e => setFilters({\n              ...filters,\n              department: e.target.value\n            }),\n            className: \"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"All Departments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), getUniqueDepartments().map(dept => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: dept,\n              children: dept\n            }, dept, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-medium mb-2\",\n            children: \"Group By\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: groupBy,\n            onChange: e => setGroupBy(e.target.value),\n            className: \"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"none\",\n              children: \"No Grouping\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"employee\",\n              children: \"Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"department\",\n              children: \"Department\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto mb-6 bg-white rounded p-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-4 items-end\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-grow\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-medium mb-2\",\n            children: \"Notification Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: notificationText,\n            onChange: e => setNotificationText(e.target.value),\n            className: \"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\",\n            rows: \"2\",\n            placeholder: \"Enter notification text to send to selected employees\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendNotifications,\n          className: \"w-48 bg-black hover:bg-gray-800 text-white font-medium py-2 px-6 rounded\",\n          disabled: checkedTasks.size === 0 || !notificationText.trim(),\n          children: \"Send Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), Object.entries(groupedTasks).map(([group, tasks]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto mb-6 bg-white rounded p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 border-b pb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold\",\n          children: group\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"min-w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"bg-gray-50\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Employee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Department\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Due Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Actual end Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"bg-white divide-y divide-gray-200\",\n            children: tasks.map((task, index) => {\n              const taskId = task.id || `task-${Date.now()}-${index}`;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"hover:bg-gray-50\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: checkedTasks.has(taskId),\n                    onChange: () => handleCheckTask(taskId),\n                    className: \"h-4 w-4 text-black focus:ring-black border-gray-300 rounded\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap\",\n                  children: task.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap\",\n                  children: task.employee\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap\",\n                  children: task.department\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap\",\n                  children: task.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap\",\n                  children: task.endDate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-6 py-4 whitespace-nowrap\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusClass(task.status)}`,\n                    children: task.status || 'Pending'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 23\n                }, this)]\n              }, `task-${task.id}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this)]\n    }, `group-${group}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\nexport default TaskList;","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TaskList","tasks","setTasks","employees","setEmployees","filters","setFilters","status","employee","department","groupBy","setGroupBy","checkedTasks","setCheckedTasks","Set","notificationText","setNotificationText","uniqueEmployees","Map","map","emp","id","values","fetchData","tasksRes","employeesRes","Promise","all","get","tasksWithIds","data","task","index","Date","now","error","console","getStatusClass","toLowerCase","filterTasks","filter","groupTasks","reduce","groups","key","push","getUniqueDepartments","filteredTasks","groupedTasks","handleCheckTask","taskId","prev","newChecked","has","delete","add","handleSendNotifications","size","alert","trim","selectedTasks","notifications","_employees$find","employeeEmail","find","name","email","Error","taskName","employeeName","message","log","response","post","notificationCount","recipients","join","_error$response","_error$response$data","errorMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","dept","rows","placeholder","onClick","disabled","Object","entries","group","type","checked","date","endDate"],"sources":["C:/Users/belya/Cursor projects/Budget tracker/client/src/components/TaskList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst TaskList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [filters, setFilters] = useState({\n    status: 'all',\n    employee: 'all',\n    department: 'all',\n  });\n  const [groupBy, setGroupBy] = useState('none'); // none, employee, department\n  const [checkedTasks, setCheckedTasks] = useState(new Set());\n  const [notificationText, setNotificationText] = useState('');\n\n  // Add deduplication for employees\n  const uniqueEmployees = [...new Map(employees.map(emp => \n    [emp.id, emp]\n  )).values()];\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const [tasksRes, employeesRes] = await Promise.all([\n        axios.get('http://localhost:5000/api/tasks'),\n        axios.get('http://localhost:5000/api/employees')\n      ]);\n      \n      // Ensure each task has a unique ID\n      const tasksWithIds = tasksRes.data.map((task, index) => ({\n        ...task,\n        id: task.id || `task-${Date.now()}-${index}`\n      }));\n      \n      setTasks(tasksWithIds);\n      setEmployees(employeesRes.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const getStatusClass = (status) => {\n    switch (status?.toLowerCase()) {\n      case 'completed':\n        return 'bg-green-100 text-green-800';\n      case 'in progress':\n        return 'bg-blue-100 text-blue-800';\n      case 'pending':\n        return 'bg-yellow-100 text-yellow-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const filterTasks = (tasks) => {\n    return tasks.filter(task => {\n      if (filters.status !== 'all' && task.status !== filters.status) return false;\n      if (filters.employee !== 'all' && task.employee !== filters.employee) return false;\n      if (filters.department !== 'all' && task.department !== filters.department) return false;\n      return true;\n    });\n  };\n\n  const groupTasks = (tasks) => {\n    if (groupBy === 'none') return { 'All Tasks': tasks };\n    \n    return tasks.reduce((groups, task) => {\n      const key = task[groupBy] || 'Unassigned';\n      if (!groups[key]) {\n        groups[key] = [];\n      }\n      groups[key].push(task);\n      return groups;\n    }, {});\n  };\n\n  const getUniqueDepartments = () => {\n    return [...new Set(employees.map(emp => emp.department))];\n  };\n\n  const filteredTasks = filterTasks(tasks);\n  const groupedTasks = groupTasks(filteredTasks);\n\n  const handleCheckTask = (taskId) => {\n    setCheckedTasks(prev => {\n      const newChecked = new Set(prev);\n      if (newChecked.has(taskId)) {\n        newChecked.delete(taskId);\n      } else {\n        newChecked.add(taskId);\n      }\n      return newChecked;\n    });\n  };\n\n  const handleSendNotifications = async () => {\n    if (checkedTasks.size === 0) {\n      alert('Please select at least one task to send notifications');\n      return;\n    }\n\n    if (!notificationText.trim()) {\n      alert('Please enter notification text');\n      return;\n    }\n\n    try {\n      // Get selected tasks with their employee emails\n      const selectedTasks = tasks.filter(task => checkedTasks.has(task.id));\n      const notifications = selectedTasks.map(task => {\n        const employeeEmail = employees.find(emp => emp.name === task.employee)?.email;\n        if (!employeeEmail) {\n          throw new Error(`No email found for employee: ${task.employee}`);\n        }\n        return {\n          taskId: task.id,\n          taskName: task.name,\n          employeeName: task.employee,\n          email: employeeEmail,\n          message: notificationText\n        };\n      });\n\n      console.log('Preparing to send notifications:', notifications);\n\n      // Send notifications to the backend\n      const response = await axios.post('http://localhost:5000/api/notifications/send', {\n        notifications\n      });\n\n      console.log('Notifications sent:', response.data);\n      \n      if (response.data.notificationCount > 0) {\n        alert(`Notifications sent successfully to ${response.data.notificationCount} recipients:\\n\\n${response.data.recipients.join('\\n')}`);\n        // Clear selections and text\n        setCheckedTasks(new Set());\n        setNotificationText('');\n      } else {\n        alert('No notifications were sent. Please check your selection and try again.');\n      }\n    } catch (error) {\n      console.error('Error sending notifications:', error);\n      const errorMessage = error.response?.data?.error || error.message;\n      alert(`Failed to send notifications: ${errorMessage}\\nPlease try again or contact support if the problem persists.`);\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto p-4 bg-[#f5f5f5]\">\n      {/* Filters */}\n      <div className=\"max-w-7xl mx-auto mb-6 bg-white rounded p-6\">\n        <h2 className=\"text-xl font-semibold mb-6 text-center\">Filters</h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          <div>\n            <label className=\"block text-gray-700 text-sm font-medium mb-2\">\n              Status\n            </label>\n            <select\n              value={filters.status}\n              onChange={(e) => setFilters({ ...filters, status: e.target.value })}\n              className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\"\n            >\n              <option value=\"all\">All Statuses</option>\n              <option value=\"pending\">Pending</option>\n              <option value=\"in progress\">In Progress</option>\n              <option value=\"completed\">Completed</option>\n            </select>\n          </div>\n\n          <div>\n            <label className=\"block text-gray-700 text-sm font-medium mb-2\">\n              Employee\n            </label>\n            <select\n              value={filters.employee}\n              onChange={(e) => setFilters({ ...filters, employee: e.target.value })}\n              className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\"\n            >\n              <option value=\"all\">All Employees</option>\n              {uniqueEmployees.map(emp => (\n                <option key={emp.id} value={emp.name}>{emp.name}</option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <label className=\"block text-gray-700 text-sm font-medium mb-2\">\n              Department\n            </label>\n            <select\n              value={filters.department}\n              onChange={(e) => setFilters({ ...filters, department: e.target.value })}\n              className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\"\n            >\n              <option value=\"all\">All Departments</option>\n              {getUniqueDepartments().map(dept => (\n                <option key={dept} value={dept}>{dept}</option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <label className=\"block text-gray-700 text-sm font-medium mb-2\">\n              Group By\n            </label>\n            <select\n              value={groupBy}\n              onChange={(e) => setGroupBy(e.target.value)}\n              className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\"\n            >\n              <option value=\"none\">No Grouping</option>\n              <option value=\"employee\">Employee</option>\n              <option value=\"department\">Department</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {/* Notification Section */}\n      <div className=\"max-w-7xl mx-auto mb-6 bg-white rounded p-6\">\n        <div className=\"flex space-x-4 items-end\">\n          <div className=\"flex-grow\">\n            <label className=\"block text-gray-700 text-sm font-medium mb-2\">\n              Notification Text\n            </label>\n            <textarea\n              value={notificationText}\n              onChange={(e) => setNotificationText(e.target.value)}\n              className=\"w-full border border-gray-300 rounded p-2 focus:outline-none focus:border-gray-400\"\n              rows=\"2\"\n              placeholder=\"Enter notification text to send to selected employees\"\n            />\n          </div>\n          <button\n            onClick={handleSendNotifications}\n            className=\"w-48 bg-black hover:bg-gray-800 text-white font-medium py-2 px-6 rounded\"\n            disabled={checkedTasks.size === 0 || !notificationText.trim()}\n          >\n            Send Notifications\n          </button>\n        </div>\n      </div>\n\n      {/* Tasks Table */}\n      {Object.entries(groupedTasks).map(([group, tasks]) => (\n        <div key={`group-${group}`} className=\"max-w-7xl mx-auto mb-6 bg-white rounded p-6\">\n          <div className=\"mb-4 border-b pb-4\">\n            <h3 className=\"text-lg font-semibold\">{group}</h3>\n          </div>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Select\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Task\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Employee\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Department\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Due Date\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Actual end Date\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Status\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {tasks.map((task, index) => {\n                  const taskId = task.id || `task-${Date.now()}-${index}`;\n                  return (\n                    <tr \n                      key={`task-${task.id}`}\n                      className=\"hover:bg-gray-50\"\n                    >\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <input\n                          type=\"checkbox\"\n                          checked={checkedTasks.has(taskId)}\n                          onChange={() => handleCheckTask(taskId)}\n                          className=\"h-4 w-4 text-black focus:ring-black border-gray-300 rounded\"\n                        />\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        {task.name}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        {task.employee}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        {task.department}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        {task.date}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        {task.endDate}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusClass(task.status)}`}>\n                          {task.status || 'Pending'}\n                        </span>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default TaskList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
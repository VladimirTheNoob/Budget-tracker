{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\belya\\\\Cursor projects\\\\Budget tracker\\\\client\\\\src\\\\components\\\\ProtectedRoute.js\";\nimport React, { useEffect } from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  allowedRoles = ['admin', 'manager', 'employee']\n}) => {\n  const {\n    isAuthenticated,\n    userRole\n  } = useSelector(state => state.auth);\n  useEffect(() => {\n    console.log('ProtectedRoute - isAuthenticated:', isAuthenticated);\n    console.log('ProtectedRoute - role:', userRole);\n    console.log('ProtectedRoute - allowedRoles:', allowedRoles);\n  }, [isAuthenticated, userRole, allowedRoles]);\n\n  // Not authenticated\n  if (!isAuthenticated) {\n    toast.error('Please log in to access this page', {\n      position: 'top-center',\n      duration: 3000\n    });\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Undefined role handling\n  if (!userRole) {\n    toast.error('Unable to determine user role. Please log out and log in again.', {\n      position: 'top-center',\n      duration: 4000\n    });\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Role-based access control\n  const hasRequiredRole = allowedRoles.includes(userRole);\n  if (!hasRequiredRole) {\n    toast.error('You do not have permission to access this page', {\n      position: 'top-center',\n      duration: 3000\n    });\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/unauthorized\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If children are provided, render them\n  if (children) {\n    return children;\n  }\n\n  // Otherwise, render child routes\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 10\n  }, this);\n};\nexport default ProtectedRoute;","map":{"version":3,"names":["React","useEffect","Navigate","Outlet","useSelector","toast","jsxDEV","_jsxDEV","ProtectedRoute","children","allowedRoles","isAuthenticated","userRole","state","auth","console","log","error","position","duration","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","hasRequiredRole","includes"],"sources":["C:/Users/belya/Cursor projects/Budget tracker/client/src/components/ProtectedRoute.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Navigate, Outlet } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-hot-toast';\r\n\r\nconst ProtectedRoute = ({ children, allowedRoles = ['admin', 'manager', 'employee'] }) => {\r\n  const { isAuthenticated, userRole } = useSelector((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    console.log('ProtectedRoute - isAuthenticated:', isAuthenticated);\r\n    console.log('ProtectedRoute - role:', userRole);\r\n    console.log('ProtectedRoute - allowedRoles:', allowedRoles);\r\n  }, [isAuthenticated, userRole, allowedRoles]);\r\n\r\n  // Not authenticated\r\n  if (!isAuthenticated) {\r\n    toast.error('Please log in to access this page', {\r\n      position: 'top-center',\r\n      duration: 3000\r\n    });\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  // Undefined role handling\r\n  if (!userRole) {\r\n    toast.error('Unable to determine user role. Please log out and log in again.', {\r\n      position: 'top-center',\r\n      duration: 4000\r\n    });\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  // Role-based access control\r\n  const hasRequiredRole = allowedRoles.includes(userRole);\r\n  \r\n  if (!hasRequiredRole) {\r\n    toast.error('You do not have permission to access this page', {\r\n      position: 'top-center',\r\n      duration: 3000\r\n    });\r\n    return <Navigate to=\"/unauthorized\" replace />;\r\n  }\r\n\r\n  // If children are provided, render them\r\n  if (children) {\r\n    return children;\r\n  }\r\n\r\n  // Otherwise, render child routes\r\n  return <Outlet />;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,KAAK,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,YAAY,GAAG,CAAC,OAAO,EAAE,SAAS,EAAE,UAAU;AAAE,CAAC,KAAK;EACxF,MAAM;IAAEC,eAAe;IAAEC;EAAS,CAAC,GAAGR,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EAExEb,SAAS,CAAC,MAAM;IACdc,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEL,eAAe,CAAC;IACjEI,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEJ,QAAQ,CAAC;IAC/CG,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEN,YAAY,CAAC;EAC7D,CAAC,EAAE,CAACC,eAAe,EAAEC,QAAQ,EAAEF,YAAY,CAAC,CAAC;;EAE7C;EACA,IAAI,CAACC,eAAe,EAAE;IACpBN,KAAK,CAACY,KAAK,CAAC,mCAAmC,EAAE;MAC/CC,QAAQ,EAAE,YAAY;MACtBC,QAAQ,EAAE;IACZ,CAAC,CAAC;IACF,oBAAOZ,OAAA,CAACL,QAAQ;MAACkB,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA,IAAI,CAACb,QAAQ,EAAE;IACbP,KAAK,CAACY,KAAK,CAAC,iEAAiE,EAAE;MAC7EC,QAAQ,EAAE,YAAY;MACtBC,QAAQ,EAAE;IACZ,CAAC,CAAC;IACF,oBAAOZ,OAAA,CAACL,QAAQ;MAACkB,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA,MAAMC,eAAe,GAAGhB,YAAY,CAACiB,QAAQ,CAACf,QAAQ,CAAC;EAEvD,IAAI,CAACc,eAAe,EAAE;IACpBrB,KAAK,CAACY,KAAK,CAAC,gDAAgD,EAAE;MAC5DC,QAAQ,EAAE,YAAY;MACtBC,QAAQ,EAAE;IACZ,CAAC,CAAC;IACF,oBAAOZ,OAAA,CAACL,QAAQ;MAACkB,EAAE,EAAC,eAAe;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAChD;;EAEA;EACA,IAAIhB,QAAQ,EAAE;IACZ,OAAOA,QAAQ;EACjB;;EAEA;EACA,oBAAOF,OAAA,CAACJ,MAAM;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnB,CAAC;AAED,eAAejB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
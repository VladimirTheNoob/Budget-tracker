{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\belya\\\\Cursor projects\\\\Budget tracker\\\\client\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-hot-toast';\nimport { ROLES } from '../config/roles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  allowedRoles = ['admin', 'manager', 'employee']\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    userRole\n  } = useSelector(state => state.auth);\n  useEffect(() => {\n    console.log('ProtectedRoute - isAuthenticated:', isAuthenticated);\n    console.log('ProtectedRoute - role:', userRole);\n    console.log('ProtectedRoute - allowedRoles:', allowedRoles);\n  }, [isAuthenticated, userRole, allowedRoles]);\n\n  // Not authenticated\n  if (!isAuthenticated) {\n    console.warn('ProtectedRoute - User not authenticated, redirecting to login');\n    toast.error('Please log in to access this page', {\n      position: 'top-center',\n      duration: 3000\n    });\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Undefined role handling\n  if (!userRole) {\n    console.warn('ProtectedRoute - User role undefined, redirecting to login');\n    toast.error('Unable to determine user role. Please log out and log in again.', {\n      position: 'top-center',\n      duration: 4000\n    });\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Admin gets full access\n  if (userRole === ROLES.ADMIN) {\n    console.log('ProtectedRoute - User is admin, allowing access');\n    return children;\n  }\n\n  // Role-based access control\n  const hasRequiredRole = allowedRoles.includes(userRole);\n  if (!hasRequiredRole) {\n    console.warn('ProtectedRoute - User does not have required role, denying access');\n    toast.error('You do not have permission to access this page', {\n      position: 'top-center',\n      duration: 3000\n    });\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/unauthorized\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n  console.log('ProtectedRoute - User has required role, allowing access');\n  return children;\n};\n_s(ProtectedRoute, \"gwskufduhW2kzkaahcaT6YXHwEk=\", false, function () {\n  return [useSelector];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useEffect","Navigate","useSelector","toast","ROLES","jsxDEV","_jsxDEV","ProtectedRoute","children","allowedRoles","_s","isAuthenticated","userRole","state","auth","console","log","warn","error","position","duration","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","ADMIN","hasRequiredRole","includes","_c","$RefreshReg$"],"sources":["C:/Users/belya/Cursor projects/Budget tracker/client/src/components/ProtectedRoute.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-hot-toast';\nimport { ROLES } from '../config/roles';\n\nconst ProtectedRoute = ({ children, allowedRoles = ['admin', 'manager', 'employee'] }) => {\n  const { isAuthenticated, userRole } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    console.log('ProtectedRoute - isAuthenticated:', isAuthenticated);\n    console.log('ProtectedRoute - role:', userRole);\n    console.log('ProtectedRoute - allowedRoles:', allowedRoles);\n  }, [isAuthenticated, userRole, allowedRoles]);\n\n  // Not authenticated\n  if (!isAuthenticated) {\n    console.warn('ProtectedRoute - User not authenticated, redirecting to login');\n    toast.error('Please log in to access this page', {\n      position: 'top-center',\n      duration: 3000\n    });\n    return <Navigate to=\"/login\" replace />;\n  }\n\n  // Undefined role handling\n  if (!userRole) {\n    console.warn('ProtectedRoute - User role undefined, redirecting to login');\n    toast.error('Unable to determine user role. Please log out and log in again.', {\n      position: 'top-center',\n      duration: 4000\n    });\n    return <Navigate to=\"/login\" replace />;\n  }\n\n  // Admin gets full access\n  if (userRole === ROLES.ADMIN) {\n    console.log('ProtectedRoute - User is admin, allowing access');\n    return children;\n  }\n\n  // Role-based access control\n  const hasRequiredRole = allowedRoles.includes(userRole);\n  \n  if (!hasRequiredRole) {\n    console.warn('ProtectedRoute - User does not have required role, denying access');\n    toast.error('You do not have permission to access this page', {\n      position: 'top-center',\n      duration: 3000\n    });\n    return <Navigate to=\"/unauthorized\" replace />;\n  }\n\n  console.log('ProtectedRoute - User has required role, allowing access');\n  return children;\n};\n\nexport default ProtectedRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SAASC,KAAK,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,YAAY,GAAG,CAAC,OAAO,EAAE,SAAS,EAAE,UAAU;AAAE,CAAC,KAAK;EAAAC,EAAA;EACxF,MAAM;IAAEC,eAAe;IAAEC;EAAS,CAAC,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EAExEd,SAAS,CAAC,MAAM;IACde,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEL,eAAe,CAAC;IACjEI,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEJ,QAAQ,CAAC;IAC/CG,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEP,YAAY,CAAC;EAC7D,CAAC,EAAE,CAACE,eAAe,EAAEC,QAAQ,EAAEH,YAAY,CAAC,CAAC;;EAE7C;EACA,IAAI,CAACE,eAAe,EAAE;IACpBI,OAAO,CAACE,IAAI,CAAC,+DAA+D,CAAC;IAC7Ed,KAAK,CAACe,KAAK,CAAC,mCAAmC,EAAE;MAC/CC,QAAQ,EAAE,YAAY;MACtBC,QAAQ,EAAE;IACZ,CAAC,CAAC;IACF,oBAAOd,OAAA,CAACL,QAAQ;MAACoB,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA,IAAI,CAACd,QAAQ,EAAE;IACbG,OAAO,CAACE,IAAI,CAAC,4DAA4D,CAAC;IAC1Ed,KAAK,CAACe,KAAK,CAAC,iEAAiE,EAAE;MAC7EC,QAAQ,EAAE,YAAY;MACtBC,QAAQ,EAAE;IACZ,CAAC,CAAC;IACF,oBAAOd,OAAA,CAACL,QAAQ;MAACoB,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA,IAAId,QAAQ,KAAKR,KAAK,CAACuB,KAAK,EAAE;IAC5BZ,OAAO,CAACC,GAAG,CAAC,iDAAiD,CAAC;IAC9D,OAAOR,QAAQ;EACjB;;EAEA;EACA,MAAMoB,eAAe,GAAGnB,YAAY,CAACoB,QAAQ,CAACjB,QAAQ,CAAC;EAEvD,IAAI,CAACgB,eAAe,EAAE;IACpBb,OAAO,CAACE,IAAI,CAAC,mEAAmE,CAAC;IACjFd,KAAK,CAACe,KAAK,CAAC,gDAAgD,EAAE;MAC5DC,QAAQ,EAAE,YAAY;MACtBC,QAAQ,EAAE;IACZ,CAAC,CAAC;IACF,oBAAOd,OAAA,CAACL,QAAQ;MAACoB,EAAE,EAAC,eAAe;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAChD;EAEAX,OAAO,CAACC,GAAG,CAAC,0DAA0D,CAAC;EACvE,OAAOR,QAAQ;AACjB,CAAC;AAACE,EAAA,CAjDIH,cAAc;EAAA,QACoBL,WAAW;AAAA;AAAA4B,EAAA,GAD7CvB,cAAc;AAmDpB,eAAeA,cAAc;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\belya\\\\Cursor projects\\\\Budget tracker\\\\client\\\\src\\\\components\\\\ProtectedRoute.js\";\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  allowedRoles\n}) => {\n  const {\n    isAuthenticated,\n    role: userRole\n  } = useSelector(state => state.auth);\n  console.log('ProtectedRoute - isAuthenticated:', isAuthenticated);\n  console.log('ProtectedRoute - role:', userRole);\n  console.log('ProtectedRoute - allowedRoles:', allowedRoles);\n\n  // If not authenticated, redirect to login\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Check if user's role is allowed\n  if (allowedRoles && !allowedRoles.includes(userRole)) {\n    // Redirect to a default page or show an access denied message\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If authenticated and role is allowed, render the children\n  return children;\n};\nexport default ProtectedRoute;","map":{"version":3,"names":["React","Navigate","useSelector","jsxDEV","_jsxDEV","ProtectedRoute","children","allowedRoles","isAuthenticated","role","userRole","state","auth","console","log","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","includes"],"sources":["C:/Users/belya/Cursor projects/Budget tracker/client/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst ProtectedRoute = ({ children, allowedRoles }) => {\r\n  const { isAuthenticated, role: userRole } = useSelector(state => state.auth);\r\n\r\n  console.log('ProtectedRoute - isAuthenticated:', isAuthenticated);\r\n  console.log('ProtectedRoute - role:', userRole);\r\n  console.log('ProtectedRoute - allowedRoles:', allowedRoles);\r\n\r\n  // If not authenticated, redirect to login\r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  // Check if user's role is allowed\r\n  if (allowedRoles && !allowedRoles.includes(userRole)) {\r\n    // Redirect to a default page or show an access denied message\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  // If authenticated and role is allowed, render the children\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EACrD,MAAM;IAAEC,eAAe;IAAEC,IAAI,EAAEC;EAAS,CAAC,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC;EAE5EC,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEN,eAAe,CAAC;EACjEK,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEJ,QAAQ,CAAC;EAC/CG,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEP,YAAY,CAAC;;EAE3D;EACA,IAAI,CAACC,eAAe,EAAE;IACpB,oBAAOJ,OAAA,CAACH,QAAQ;MAACc,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpC;;EAEA;EACA,IAAIb,YAAY,IAAI,CAACA,YAAY,CAACc,QAAQ,CAACX,QAAQ,CAAC,EAAE;IACpD;IACA,oBAAON,OAAA,CAACH,QAAQ;MAACc,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpC;;EAEA;EACA,OAAOd,QAAQ;AACjB,CAAC;AAED,eAAeD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
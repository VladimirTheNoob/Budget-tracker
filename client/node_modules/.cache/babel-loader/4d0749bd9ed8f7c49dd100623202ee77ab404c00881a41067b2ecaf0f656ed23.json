{"ast":null,"code":"import React,{useEffect}from'react';import{Navigate}from'react-router-dom';import{useSelector}from'react-redux';import{toast}from'react-hot-toast';import{ROLES}from'../config/roles';import{jsx as _jsx}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children,allowedRoles=['admin','manager','employee']}=_ref;const{isAuthenticated,userRole}=useSelector(state=>state.auth);useEffect(()=>{console.log('ProtectedRoute - Authentication Details:',{isAuthenticated,userRole:typeof userRole==='object'?JSON.stringify(userRole):userRole,allowedRoles});},[isAuthenticated,userRole,allowedRoles]);// Not authenticated\nif(!isAuthenticated){toast.error('Please log in to access this page',{position:'top-center',duration:3000});return/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});}// Robust role handling\nconst currentUserRole=typeof userRole==='object'?userRole.role||userRole.name||'guest':userRole||'guest';console.log('ProtectedRoute - Processed Role:',currentUserRole);// Admin gets full access\nif(currentUserRole===ROLES.ADMIN){return children;}// Role-based access control\nconst hasRequiredRole=allowedRoles.includes(currentUserRole.toLowerCase());if(!hasRequiredRole){toast.error('You do not have permission to access this page',{position:'top-center',duration:3000});return/*#__PURE__*/_jsx(Navigate,{to:\"/unauthorized\",replace:true});}return children;};export default ProtectedRoute;","map":{"version":3,"names":["React","useEffect","Navigate","useSelector","toast","ROLES","jsx","_jsx","ProtectedRoute","_ref","children","allowedRoles","isAuthenticated","userRole","state","auth","console","log","JSON","stringify","error","position","duration","to","replace","currentUserRole","role","name","ADMIN","hasRequiredRole","includes","toLowerCase"],"sources":["C:/Users/belya/Cursor projects/Budget tracker/client/src/components/ProtectedRoute.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-hot-toast';\nimport { ROLES } from '../config/roles';\n\nconst ProtectedRoute = ({ children, allowedRoles = ['admin', 'manager', 'employee'] }) => {\n  const { isAuthenticated, userRole } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    console.log('ProtectedRoute - Authentication Details:', {\n      isAuthenticated,\n      userRole: typeof userRole === 'object' ? JSON.stringify(userRole) : userRole,\n      allowedRoles\n    });\n  }, [isAuthenticated, userRole, allowedRoles]);\n\n  // Not authenticated\n  if (!isAuthenticated) {\n    toast.error('Please log in to access this page', {\n      position: 'top-center',\n      duration: 3000\n    });\n    return <Navigate to=\"/login\" replace />;\n  }\n\n  // Robust role handling\n  const currentUserRole = typeof userRole === 'object' \n    ? (userRole.role || userRole.name || 'guest') \n    : userRole || 'guest';\n\n  console.log('ProtectedRoute - Processed Role:', currentUserRole);\n\n  // Admin gets full access\n  if (currentUserRole === ROLES.ADMIN) {\n    return children;\n  }\n\n  // Role-based access control\n  const hasRequiredRole = allowedRoles.includes(currentUserRole.toLowerCase());\n  \n  if (!hasRequiredRole) {\n    toast.error('You do not have permission to access this page', {\n      position: 'top-center',\n      duration: 3000\n    });\n    return <Navigate to=\"/unauthorized\" replace />;\n  }\n\n  return children;\n};\n\nexport default ProtectedRoute;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,WAAW,KAAQ,aAAa,CACzC,OAASC,KAAK,KAAQ,iBAAiB,CACvC,OAASC,KAAK,KAAQ,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAExC,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAmE,IAAlE,CAAEC,QAAQ,CAAEC,YAAY,CAAG,CAAC,OAAO,CAAE,SAAS,CAAE,UAAU,CAAE,CAAC,CAAAF,IAAA,CACnF,KAAM,CAAEG,eAAe,CAAEC,QAAS,CAAC,CAAGV,WAAW,CAAEW,KAAK,EAAKA,KAAK,CAACC,IAAI,CAAC,CAExEd,SAAS,CAAC,IAAM,CACde,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAE,CACtDL,eAAe,CACfC,QAAQ,CAAE,MAAO,CAAAA,QAAQ,GAAK,QAAQ,CAAGK,IAAI,CAACC,SAAS,CAACN,QAAQ,CAAC,CAAGA,QAAQ,CAC5EF,YACF,CAAC,CAAC,CACJ,CAAC,CAAE,CAACC,eAAe,CAAEC,QAAQ,CAAEF,YAAY,CAAC,CAAC,CAE7C;AACA,GAAI,CAACC,eAAe,CAAE,CACpBR,KAAK,CAACgB,KAAK,CAAC,mCAAmC,CAAE,CAC/CC,QAAQ,CAAE,YAAY,CACtBC,QAAQ,CAAE,IACZ,CAAC,CAAC,CACF,mBAAOf,IAAA,CAACL,QAAQ,EAACqB,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CACzC,CAEA;AACA,KAAM,CAAAC,eAAe,CAAG,MAAO,CAAAZ,QAAQ,GAAK,QAAQ,CAC/CA,QAAQ,CAACa,IAAI,EAAIb,QAAQ,CAACc,IAAI,EAAI,OAAO,CAC1Cd,QAAQ,EAAI,OAAO,CAEvBG,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAEQ,eAAe,CAAC,CAEhE;AACA,GAAIA,eAAe,GAAKpB,KAAK,CAACuB,KAAK,CAAE,CACnC,MAAO,CAAAlB,QAAQ,CACjB,CAEA;AACA,KAAM,CAAAmB,eAAe,CAAGlB,YAAY,CAACmB,QAAQ,CAACL,eAAe,CAACM,WAAW,CAAC,CAAC,CAAC,CAE5E,GAAI,CAACF,eAAe,CAAE,CACpBzB,KAAK,CAACgB,KAAK,CAAC,gDAAgD,CAAE,CAC5DC,QAAQ,CAAE,YAAY,CACtBC,QAAQ,CAAE,IACZ,CAAC,CAAC,CACF,mBAAOf,IAAA,CAACL,QAAQ,EAACqB,EAAE,CAAC,eAAe,CAACC,OAAO,MAAE,CAAC,CAChD,CAEA,MAAO,CAAAd,QAAQ,CACjB,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}